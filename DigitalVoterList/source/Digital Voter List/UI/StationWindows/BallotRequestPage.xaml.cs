using System;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using UI.ManagerWindows;

namespace UI.StationWindows {
    /// <summary>
    /// Interaction logic for BallotRequestPage.xaml
    /// </summary>
    public partial class BallotRequestPage
    {
        private readonly UiHandler _ui;
        private readonly Frame _parent;
        public bool Blocked;

        /// <summary>
        /// Constructor
        /// </summary>
        /// <param name="ui">the UIHandler for this UI</param>
        /// <param name="parent">the frame in which this page is displayed</param>
        public BallotRequestPage(UiHandler ui, Frame parent)
        {
            _ui = ui;
            _parent = parent;
            _ui.BallotRequestPage = this;
            InitializeComponent();
            checkValidityButton.IsEnabled = false;
            WaitingLabel.Content = "";
        }

        /// <summary>
        /// Called when the Done button is pressed
        /// </summary>
        /// <param name="sender">autogenerated</param>
        /// <param name="e">autogenerated</param>
        private void CheckValidityButtonClick(object sender, RoutedEventArgs e) {

            if (!voterCardNumberTextbox.Text.Equals(""))
            {
                WaitingLabel.Content = "Venter på svar...";
                _ui.RequestBallot(voterCardNumberTextbox.Text);
            }
        }

        /// <summary>
        /// Used to check whether a string is purely numbers or not
        /// </summary>
        /// <param name="text">the string to check</param>
        /// <returns>whether a string is purely numbers or not</returns>
        private static bool IsNumeric(string text) {
            int result;
            return int.TryParse(text, out result);
        }

        /// <summary>
        /// Sees to that only numbers can be typed in the textbox
        /// </summary>
        /// <param name="sender">autogenerated</param>
        /// <param name="e">autogenerated</param>
        private void PreviewTextInputHandler(Object sender, TextCompositionEventArgs e) {
            e.Handled = !IsNumeric(e.Text);
        }

        /// <summary>
        /// Sees to that only numbers can be pasted in the textbox
        /// </summary>
        /// <param name="sender">autogenerated</param>
        /// <param name="e">autogenerated</param>
        private void PastingHandler(object sender, DataObjectPastingEventArgs e) {
            if (e.DataObject.GetDataPresent(typeof(String))) {
                var text = (String)e.DataObject.GetData(typeof(String));
                if (!IsNumeric(text)) e.CancelCommand();
            } else e.CancelCommand();
        }

        /// <summary>
        /// Called when the election is ended
        /// </summary>
        public void EndElection()
        {
            _ui.BallotRequestPage = null;
            Environment.Exit(0);
        }

        /// <summary>
        /// called when the text in the VoterCardNumberTextbox changes
        /// </summary>
        /// <param name="sender">autogenerated</param>
        /// <param name="e">autogenerated</param>
        private void VoterCardNumberTextboxTextChanged(object sender, TextChangedEventArgs e)
        {
            if (voterCardNumberTextbox.Text.Length > 0 && WaitingLabel.Content.Equals("") && !Blocked)
                checkValidityButton.IsEnabled = true;
            else
            {
                checkValidityButton.IsEnabled = false;
            }
        }

        /// <summary>
        /// Called when the manager responds to a ballot request
        /// </summary>
        /// <param name="succes">whether or not the ballot request was a success</param>
        public void BallotResponse(bool succes)
        {
            WaitingLabel.Content = "";
            if(succes)
                MessageBox.Show("Vælgeren " + voterCardNumberTextbox.Text + " må gives en stemmeseddel ", "Giv stemmeseddel", MessageBoxButton.OK, MessageBoxImage.Exclamation);
            else
            {
                MessageBox.Show("Vælgeren " + voterCardNumberTextbox.Text + " må IKKE gives en stemmeseddel ", "Giv ikke stemmeseddel", MessageBoxButton.OK, MessageBoxImage.Stop);
            }

            voterCardNumberTextbox.Text.Remove(0);
        }

        /// <summary>
        /// Called when this station is promoted
        /// </summary>
        public void BecomeManager()
        {
            _ui.BallotRequestPage = null;
            _parent.Navigate(new ManagerOverviewPage(_parent,_ui));
            if(_ui.EnoughStations())
                _ui.EnoughPeers();
            else
                _ui.NotEnoughPeers();
            
        }
    }
}
