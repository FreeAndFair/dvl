system_chart ENTITY_SYSTEM
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>";
    course: "BDSA";
    university: "ITU";
    created: "2011-11-30";
  explanation
    "Classes used to represent various logically encapsulated data in object form."

    cluster ENTITIES description "Classes used to represent various logically encapsulated data in object form."
end

cluster_chart ENTITIES
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>";
    created: "2011-11-30";
    keywords: "entity, value object, data access object";
  explanation
    "Entity classes reflects virtual and real-world objects."

    class ADDRESS description "A shallow object containing information about an address."
  
    class POLLING_VENUE description "A shallow object containing information about an polling venue."

    class PERSON description "A shallow value holder object of the person entity used where no external data connectivity is required."
    class PERSON_ENTITY description "A person entity reflecting a person in real life with associated relevant information."
    class PERSON_VALUE_OBJECT description "The value object of the person entity"
    class PERSON_DATA_ACCESS_OBJECT description "The data access object of the person entity"
    class PERSON_RESOURCE description "The resource of the person entity, which is used to fetch one or more persons from the external data source."

    class LOG description "A shallow value holder object of the log entity used where no external data connectivity is required."
    class LOG_ENTITY description "A log entity containing information on client events and time of execution."
    class LOG_VALUE_OBJECT description "The value object of the log entity"
    class LOG_DATA_ACCESS_OBJECT description "The data access object of the log entity"
    class LOG_RESOURCE description "The resource of the log entity, which is used to fetch one or more logs from the external data source."
  
    cluster ABSTRACTS description "Abstracts for the entities."
end

cluster_chart ABSTRACTS
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>";
    created: "2011-11-30";
    keywords: "entity, value object, data access object, abstracts";
  explanation
    "Abstracts for entities, value objects, data access objects and resources."

    class ABSTRACT_ENTITY description "The abstract entity implements standard load, save and delete methods for all entities."
    class ABSTRACT_VALUE_OBJECT description "The abstract value object implements methods to set and get values from a value object."
    class ABSTRACT_DATA_ACCESS_OBJECT description "Abstracts the standard load, save and delete methods for data access objects."
    class ABSTRACT_RESOURCE description "Makes the standard methods for a resource available, including an abstract build method for entity generation."
end

 -- ABSTRACTS

class_chart ABSTRACT_ENTITY
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>";
    created: "2011-11-30";
    keywords: "entity, data object, virtual and real-world encapsulation.";
    in_cluster: "ABSTRACTS";
  explanation
    "An entity is a object encapsulating and making data within a specific logically scope manipulable."
  query
    "May I have an existing entity loaded with these parameters?",
    "May I have the id of this entity?",
    "Does this entity exists?"
  command
    "Save this entity!",
    "Delete this entity!"
end

class_chart ABSTRACT_VALUE_OBJECT
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>";
    created: "2011-11-30";
    keywords: "entity, value object";
    in_cluster: "ABSTRACTS";
  explanation
    "The entity value object is the holder for all of the entities values fetch from an external data source."
  query  
    "May I have a new empty value object?",
    "May I have the value?",
    "May I have the values?"
  command
    "Set value!",
    "Set values!"
end

class_chart ABSTRACT_DATA_ACCESS_OBJECT
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>";
    created: "2011-11-30";
    keywords: "entity, data access object, query builder";
    in_cluster: "ABSTRACTS";
  explanation
    "The entity data access object handles the communication with the external data source through an entity's resource."
  query  
    "May I have a new data access object?",
    "May I have an existing entity data set loaded with these parameters?"
  command
    "Save the associated entity given these data!",
    "Delete the associated entity given this id!"
end

class_chart ABSTRACT_RESOURCE
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>";
    created: "2011-11-30";
    keywords: "entity, resource, query builder";
    in_cluster: "ABSTRACTS";
  explanation
    "The abstract resource makes available the mmost often used methods of a resource and is able to build entities from data sets fetched by the query builder."
  query
    "May I have a new resource?",
    "May I have the the real number of entities fetched?",
    "May I have the total number of entities which where possible to fetch without the offset and limit parameters?"
  command
    "Set the sorting order with this sorting direction!",
    "Set the limit of entities fetched!",
    "Set the offset of entities fetched!",
    "Set the group by of entities fetched",
    "Fetch and build the entities from the external data source by the current parameters set!",
    "Build the entities accordion to the parameters given!"
end

 -- ENTITIES

class_chart ADDRESS
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>";
    created: "2011-12-12";
    keywords: "address";
    in_cluster: "ENTITIES";
  explanation
    "Represents an address."
  query  
    "May I have a new address?",
    "May I have the name of the address?",
    "May I have the street of the address?",
    "May I have the city of the address?"
  command
    "Set the name to this!",
    "Set the street to this!",
    "Set the city to this!"
end

class_chart POLLING_VENUE
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>";
    created: "2011-12-12";
    keywords: "polling venue, voters, addresses";
    in_cluster: "ENTITIES";
  explanation
    "Represents a polling venue"
  query  
    "May I have a new polling venue?",
    "May I have the persons who can vote here?",
    "May I have the address of the polling venue?",
    "May I have the address of the municipality the polling venue is in?"
  command
    "Set the persons who can vote here!",
    "Set the address of the polling venue?",
    "Set the address of the municipality the polling venue is in?"
end

class_chart PERSON
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>, Christian Olsson <chro@itu.dk>, Kåre Sylow Pedersen <ksyl@itu.dk>";
    created: "2011-12-12";
    keywords: "person, voter, shallow, value holder";
    in_cluster: "ENTITIES";
  explanation
    "Represents a real person, but with no external data connectivity."
  query  
    "May I have a new person?",
    "May I have the Database id?",
    "May I have the Firstname?",
    "May I have the Lastname?",
    "May I have the Street?",
    "May I have the City?",
    "May I have the Cpr?",
    "May I have the Voter id?",
    "Which polling venue should the person vote at?",
    "Which polling table should the person vote at?",
    "Has the person voted?",
    "At which time did the person vote?",
    "At which polling table did the person vote?",
    "Does the person exists in the external data source?",
    "Is this person equal to this other person?",
    "Is this person equal to this object?",
    "What is the hash code of the person?",
    "How is the person represented as a string?",
    "How should I sort this person, given other persons, by name?"
  command
    "Set database id!",
    "Set firstname!",
    "Set lastname!",
    "Set street!",
    "Set city!",
    "Set cpr!",
    "Set voter id!",
    "Set at which polling venue the person should vote!",
    "Set at which polling table the person should vote!",
    "Set whether the person has voted!",
    "Set the time of which the person voted!",
    "Set which table the person voted at!",
    "Set whether the person exists in the data source!"
end

class_chart PERSON_ENTITY
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>";
    created: "2011-11-30";
    keywords: "person, voter";
    in_cluster: "ENTITIES";
  explanation
    "Represents a real person with associated CPR number, firstname, lastname, gender etc."
  inherit
    ABSTRACT_ENTITY
  query  
    "May I have a new person?",
    "May I have a new person given these values?",
    "May I have the Firstame?",
    "May I have the Lastname?",
    "May I have the Cpr?",
    "May I have the Voter id?",
    "Which polling station should you vote at?",
    "Which polling table should you vote at?",
    "Have you voted?",
    "At what time did you vote?",
    "At what polling table did you vote?",
    "May I have all logs?",
    "May I have the most recent log?",
    "May I have a representation of this as a PERSON object?"
  command
    "Set firstname!",
    "Set lastname!",
    "Set cpr!",
    "Set voter id",
    "Set at which polling venue the person should vote!",
    "Set at which polling table the person should vote!"
end

class_chart PERSON_VALUE_OBJECT
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>";
    created: "2011-11-30";
    keywords: "person, voter, value object";
    in_cluster: "ENTITIES";
  explanation
    "The person value object inheriting from the abstract value object"
  inherit
    ABSTRACT_VALUE_OBJECT
  query
    "May I have a new person value object?"
end

class_chart PERSON_DATA_ACCESS_OBJECT 
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>";
    created: "2011-11-30";
    keywords: "person, voter, data access object";
    in_cluster: "ENTITIES";
  explanation
    "The person data access object inheriting from the abstract data access object"
  inherit
    ABSTRACT_DATA_ACCESS_OBJECT
  query
    "May I have a new person data access object?"
end

class_chart PERSON_RESOURCE
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>";
    created: "2011-11-30";
    keywords: "person, voter, resource object";
    in_cluster: "ENTITIES";
  explanation
    "The person resource inheriting from the abstract resource"
  inherit
    ABSTRACT_RESOURCE
  query 
    "May I have the persons given the parameters set?"
  command
    "The firstname must be like this value!",
    "The lastname must be like this value!",
    "The gender must be this value!",
    "The CPR number must be this value!",
    "The polling station must be this value!",
    "The polling table must be this value!",
    "The state of whether the person has voted must be this value!",
    "Set whether the barcode value must have been generated!"
end

class_chart LOG_ENTITY
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>";
    created: "2011-11-30";
    keywords: "log, client";
    in_cluster: "ENTITIES";
  explanation
    "Used to log the actions of a client computer."
  inherit
    ABSTRACT_ENTITY
  query  
    "May I have the person id of which the log belongs to?",
    "Which command was executed?",
    "Which client executed the command?",
    "At which polling table was the command executed?",
    "At what time was the command executed?"
  command
    "Set the person id!",
    "Set the command!",
    "Set the executing client!",
    "Set the polling table at which the command was executed!",
    "Set the time of when the command was executed!"
  end

class_chart LOG_VALUE_OBJECT
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>";
    created: "2011-11-30";
    keywords: "log, client, value object";
    in_cluster: "ENTITIES";
  explanation
    "The log value object inheriting from the abstract value object"
  inherit
    ABSTRACT_VALUE_OBJECT
  query
    "Which command was executed?",
    "Which client executed the command?",
    "At what time was the command executed?"
end

class_chart LOG_DATA_ACCESS_OBJECT 
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>";
    created: "2011-11-30";
    keywords: "log, client, data access object";
    in_cluster: "ENTITIES";
  explanation
    "The log data access object inheriting from the abstract data access object"
  inherit
    ABSTRACT_DATA_ACCESS_OBJECT
end

class_chart LOG_RESOURCE
  indexing
    author: "Henrik Haugbølle <hhau@itu.dk>";
    created: "2011-11-30";
    keywords: "log, client, resource object";
    in_cluster: "ENTITIES";
  explanation
    "The log resource inheriting from the abstract resource"
  inherit
    ABSTRACT_RESOURCE
  command
    "The timeinterval must be between these two timestamps!",
    "The client computer must be identified by this value!",
    "The action must be this value!"
end

 -- BON, BON, FORMAL BON!

static_diagram ENTITY_CLASSES
component
  cluster ENTITIES
  component
    class ADDRESS
      feature
      Make : THIS
      GetName : STRING
      GetStreet : STRING
      GetCity : STRING
      SetName -> name : STRING
      SetStreet -> street : STRING
      SetCity -> city : STRING
    end

    class POLLING_VENUE
      feature
      Make : THIS
      GetPersons : ARRAY[PERSON]
      GetPollingVenueAddress : ADDRESS
      GetMunicipalityAddress : ADDRESS
      SetPersons -> persons : ARRAY[PERSON]
      SetPollingVenueAddress -> address : ADDRESS
      SetMunicipalityAddress -> address : ADDRESS
    end

    class PERSON
      feature
        Make: THIS
        GetDbId : INTEGER
        GetFirstName : STRING
        GetLastName : STRING
        GetStreet : STRING
        GetCity : STRING
        GetCpr : STRING
        GetVoterId : INTEGER
        GetPollingVenue : STRING
        GetPollingTable : STRING
        GetVoted : BOOLEAN
        GetVotedTime : INTEGER
        GetVotedPollingTable : STRING
        GetExists : BOOLEAN
        EqualsToPerson : BOOLEAN -> person : PERSON
        EqualsToObject : BOOLEAN -> a_object : OBJECT
        GetHashCode : INTEGER
        ToString : STRING
        GetNameComparator : COMPARATOR
        SetDbId -> db_id : INTEGER
        SetFirstName -> first_name : STRING
        SetLastName -> last_name : STRING
        SetStreet -> street : STRING
        SetCity -> city : STRING
        SetCpr -> cpr : STRING
        SetVoterId -> voter_id : INTEGER
        SetPollingVenue -> polling_venue : STRING
        SetPollingTable -> polling_table : STRING
        SetVoted -> voted : BOOLEAN
        SetVotedTime -> voted_time : INTEGER
        SetVotedPollingTable -> polling_table : STRING
        SetExists -> does_exists : BOOLEAN
    end
  
    class PERSON_ENTITY
      inherit ABSTRACT_ENTITY
      feature
      Make : THIS
      MakeWithValues : THIS -> values : ARRAY[VALUE] -- maybe ARRAY[STRING]
        require 
          values /= VOID
        end
      GetFirstname : STRING
      GetLastname : STRING
      GetGender : INTEGER
      GetCpr : INTEGER
      GetBarcodeValue : NUMBER
      GetPollingStation : STRING
      GetPollingTable : STRING
      HasVoted : BOOLEAN
      GetVotedTime : INTEGER
      GetVotedPollingTable : STRING
      GetLogs : ARRAY[LOG]
      GetMostRecentLog : LOG
      GetPersonObject : PERSON

      SetFirstname -> firstname : STRING
      SetLastname -> lastname : STRING
      SetCpr -> cpr : STRING
      SetVoterId -> voter_id : INTEGER
      SetPollingVenue -> polling_venue : STRING
      SetPollingTable -> polling_table : STRING
    end

    class PERSON_VALUE_OBJECT
      inherit ABSTRACT_VALUE_OBJECT
    end

    class PERSON_DATA_ACCESS_OBJECT
      inherit ABSTRACT_DATA_ACCESS_OBJECT
    end

    class PERSON_RESOURCE
      inherit ABSTRACT_RESOURCE
      feature
        SetFirstname : THIS -> firstname : STRING
          require 
            firstname /= VOID
          end
        SetLastname : THIS -> lastname : STRING
          require
            lastname /= VOID
          end
        SetCpr : THIS -> cpr : STRING
          require
            cpr /= VOID
          end
        SetPollingVenue : THIS -> polling_venue : STRING
          require
            polling_venue /= VOID
          end
        SetPollingTable : THIS -> polling_table : STRING
          require
            polling_table /= VOID
          end
        SetVoterId : THIS -> voter_id : INTEGER
          require
            voter_id > 0
          end
        Build : ARRAY[PERSON_ENTITY]
    end

    class LOG
      inherit ABSTRACT_ENTITY
      feature
        GetPersonId : INTEGER
        GetAction : STRING
        GetClient : STRING
        GetPollingTable : STRING
        GetTimestamp : INTEGER
        SetPersonId -> person_id : INTEGER
        SetAction : a_action -> STRING
        SetClient : a_client -> STRING
        SetPollingTable -> polling_table : STRING
        SetTimestamp -> timestamp : INTEGER
    end

    class LOG_VALUE_OBJECT
      inherit ABSTRACT_VALUE_OBJECT
    end

    class LOG_DATA_ACCESS_OBJECT
      inherit ABSTRACT_DATA_ACCESS_OBJECT
    end

    class LOG_RESOURCE
      inherit ABSTRACT_RESOURCE
      feature
        SetPerson : THIS -> person : PERSON_ENTITY
          require
            person /= VOID and person.Exists
          end
        Build : ARRAY[VALUE]
    end
    
    cluster ABSTRACTS
    component
      deferred class ABSTRACT_ENTITY
        feature
          Load : THIS -> parameters : ARRAY[VALUE] -- maybe ARRAY[STRING]
            require 
              parameters /= VOID and parameters.Size > 0
            end
          GetId : INTEGER
          Exists : BOOLEAN
          Save : VOID
          Delete : VOID 
            require
              Current.Exists = TRUE
            end
      end
      
      deferred class ABSTRACT_VALUE_OBJECT
        feature
          Make: THIS
          GetValue : VALUE -> key : STRING
          GetValues : ARRAY[VALUE]
          SetValue -> key : STRING -> value : VALUE
          SetValues -> values : ARRAY[VALUE]
            require
              values /= VOID
            end
      end

      deferred class ABSTRACT_DATA_ACCESS_OBJECT
        feature
          Make : THIS
          Load : THIS -> parameters : ARRAY[VALUE] -- maybe ARRAY[STRING]
            require
              parameters /= VOID and parameters.Size > 0
            end
          Save : VOID -> values : ARRAY[VALUE] -- maybe ARRAY[STRING]
            require 
              values /= VOID and values.Size > 0
            end
          Delete : VOID -> id : INTEGER
            require
              id > 0
            end
      end

      deferred class ABSTRACT_RESOURCE
        feature
          Make : THIS
          GetCount : INTEGER
          GetCountTotal : INTEGER
          SetOrder
            -> order : STRING
            -> direction : STRING
            require
              order /= VOID and direction /= VOID -- and
               -- (direction = "asc" or direction = "desc") -- BON compiler fails here, works perfectly fine in database.bon though (!?)
            end
          SetLimit -> limit : INTEGER
            require
              limit > 0
            end
          SetOffset -> offset : INTEGER
            require
              limit >= 0
            end
          SetGroupBy -> groupby : STRING
            require
              groupby /= VOID
            end
          deferred Build : ARRAY[OBJECT]
      end
    end
  end
end
