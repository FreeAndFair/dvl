<?xml version="1.0" encoding="utf-8"?>
<pex id="{5b385836-8169-441d-8573-9a79822ddbd7}" creationTime="2011-12-07 12:30:41Z" configuration="DigitalVoterList.DBComm.DO!\MunicipalityDO!\*" created="2011-12-07 12:30:41Z" pexVersion="0.94.51006.1" xml="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\reports\111207.133041.12096.pex\report.per" html="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\reports\111207.133041.12096.pex\report.html"><environment commandLine="&quot;C:\Program Files (x86)\Microsoft Pex\bin\Microsoft.Pex.x86.exe&quot; &quot;C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe&quot; /namespacefilter:DigitalVoterList.DBComm.DO! /typefilter:MunicipalityDO! /assemblyresolutiondirectories:&quot;c:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PublicAssemblies&quot; /explorationreflectionmode:LazyWizard /instrumentedassemblies:Microsoft.VisualBasic.PowerPacks.Vs;MySql.Data;System.Deployment;System.Drawing;System.Windows.Forms /targetx86 /x64failsilently /clrversion:v4.0.30319 /donotopenreport /reportlevel:Xml /reportrootpath:&quot;C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\reports&quot; /testassemblyname:DigitalVoterList.Tests /testframework:VisualStudioUnitTest /testlanguage:cs /testprojectfile:&quot;C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DigitalVoterList.csproj&quot; /testprojectnotupdate /testprojectskip" machineName="JMEI-THINK" osVersion="Microsoft Windows NT 6.1.7601 Service Pack 1" processorCount="4" clrVersion="4.0.30319.239" bitness="x86" user="jmei"><envVars><envVar name="HOMEPATH" value="\Users\jmei"/>
<envVar name="PUBLIC" value="C:\Users\Public"/>
<envVar name="COMPUTERNAME" value="JMEI-THINK"/>
<envVar name="CLRMONITOR_INJECT_TYPES" value=""/>
<envVar name="COMPLUS_ProfAPI_ProfilerCompatibilitySetting" value="EnableV2Profiler"/>
<envVar name="CommonProgramFiles(x86)" value="C:\Program Files (x86)\Common Files"/>
<envVar name="configsetroot" value="C:\Windows\ConfigSetRoot"/>
<envVar name="PROCESSOR_IDENTIFIER" value="Intel64 Family 6 Model 42 Stepping 7, GenuineIntel"/>
<envVar name="APPDATA" value="C:\Users\jmei\AppData\Roaming"/>
<envVar name="TFS_DIR" value="C:\Program Files\ThinkVantage Fingerprint Software\"/>
<envVar name="TMP" value="C:\Users\jmei\AppData\Local\Temp"/>
<envVar name="MOZ_PLUGIN_PATH" value="C:\Program Files (x86)\Foxit Software\Foxit Reader\plugins\"/>
<envVar name="SWSHARE" value="C:\SWSHARE"/>
<envVar name="PROCESSOR_REVISION" value="2a07"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES_EXCLUSIONS" value=""/>
<envVar name="PATHEXT" value=".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.RB;.RBW"/>
<envVar name="TRACKER_ATTACHED" value="1"/>
<envVar name="COMPLUS_DEFAULTVERSION" value="v4.0.30319"/>
<envVar name="CLRMONITOR_CLSID" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="COMMPath" value="C:\Program Files\Lenovo\Communications Utility"/>
<envVar name="TEMP" value="C:\Users\jmei\AppData\Local\Temp"/>
<envVar name="LOCALAPPDATA" value="C:\Users\jmei\AppData\Local"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES_EXCLUSIONS" value=""/>
<envVar name="CLRMONITOR_PROTECT_TYPES" value="Microsoft.FSharp.Text.Printf,Microsoft.FSharp.Text.PrintfImpl"/>
<envVar name="READYAPPS" value="C:\SWTOOLS\ReadyApps"/>
<envVar name="CLRMONITOR_INJECT_ASSEMBLIES" value=""/>
<envVar name="ProgramData" value="C:\ProgramData"/>
<envVar name="CLRMONITOR_INITIALIZED" value="0x10"/>
<envVar name="USERDOMAIN" value="jmei-THINK"/>
<envVar name="windir" value="C:\Windows"/>
<envVar name="CLRMONITOR_ERASE_FINALIZER_TYPES" value=""/>
<envVar name="CLRMONITOR_INJECT_NAMESPACES" value=""/>
<envVar name="NUMBER_OF_PROCESSORS" value="4"/>
<envVar name="Path" value="C:\Ruby193\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;C:\Program Files\Broadcom\WHL\;C:\Program Files\Broadcom\WHL\syswow64;C:\Program Files\Broadcom\WHL\SysWow64\;C:\Program Files\Broadcom\WHL\SysWow64\syswow64;C:\Program Files (x86)\Common Files\Lenovo;C:\Program Files (x86)\Lenovo\Access Connections\;C:\SWTOOLS\ReadyApps;c:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\;c:\Program Files\Microsoft SQL Server\100\Tools\Binn\;c:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Intel\Services\IPT\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\"/>
<envVar name="ALCKPath" value="C:\Program Files\Lenovo\AutoLock"/>
<envVar name="TVT" value="C:\Program Files (x86)\Lenovo"/>
<envVar name="pex_wait_for_server_channel" value="1"/>
<envVar name="ProgramFiles(x86)" value="C:\Program Files (x86)"/>
<envVar name="PROCESSOR_LEVEL" value="6"/>
<envVar name="PROCESSOR_ARCHITEW6432" value="AMD64"/>
<envVar name="CommonProgramFiles" value="C:\Program Files (x86)\Common Files"/>
<envVar name="CLRMONITOR_FLAGS" value=""/>
<envVar name="pex_instrumentation" value="1"/>
<envVar name="SESSIONNAME" value="Console"/>
<envVar name="asl.log" value="Destination=file"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES" value="System.Array,System.Array+ArrayEnumerator,System.Array+FunctorComparer`1,System.Array+SZArrayEnumerator,System.Array+SorterGenericArray,System.Array+SorterObjectArray,System.Boolean,System.Byte,System.Char,System.CharEnumerator,System.ComponentModel.Component,System.ComponentModel.Container,System.ComponentModel.Container+Site,System.Convert,System.Currency,System.DateTime,System.Decimal,System.Diagnostics.Assert,System.Double,System.Globalization.CharUnicodeInfo,System.Globalization.CultureTableRecord,System.Globalization.TextInfo,System.Guid,System.IO.MemoryStream,System.IO.Stream,System.IO.StreamReader,System.IO.StreamWriter,System.IO.StringReader,System.IO.StringWriter,System.Int16,System.Int32,System.Int64,System.Lazy`1,System.Lazy`1+Boxed,System.Lazy`1+LazyInternalExceptionHolder,System.Math,System.Nullable,System.Nullable`1,System.OrdinalComparer,System.SByte,System.SZArrayHelper,System.SZArrayHelper+SZGenericArrayEnumerator`1,System.Single,System.String,System.StringComparer,System.Text.ASCIIEncoding,System.Text.DecoderNLS,System.Text.Encoding,System.Text.UTF8Encoding,System.TimeSpan,System.Tuple,System.Tuple`1,System.Tuple`2,System.Tuple`3,System.Tuple`4,System.Tuple`5,System.Tuple`6,System.Tuple`7,System.Tuple`8,System.UInt16,System.UInt32,System.UInt64,System.Xml.XmlTextWriter,System.Xml.XmlTextWriter+Namespace,System.Xml.XmlTextWriter+NamespaceState,System.Xml.XmlTextWriter+SpecialAttr,System.Xml.XmlTextWriter+State,System.Xml.XmlTextWriter+TagInfo,System.Xml.XmlTextWriter+Token,System.Xml.XmlWriter,__Box`1,__SzArrayHelper`1"/>
<envVar name="PSModulePath" value="C:\Windows\system32\WindowsPowerShell\v1.0\Modules\"/>
<envVar name="ACPath" value="C:\Program Files (x86)\Lenovo\Access Connections\"/>
<envVar name="ProgramW6432" value="C:\Program Files"/>
<envVar name="ProgramFiles" value="C:\Program Files (x86)"/>
<envVar name="CLRMONITOR_ERASE_CCTOR_TYPES" value=""/>
<envVar name="FP_NO_HOST_CHECK" value="NO"/>
<envVar name="pex_clientid" value="pex11860_1"/>
<envVar name="CodedUITestCurrentBrowser" value="IE"/>
<envVar name="SystemRoot" value="C:\Windows"/>
<envVar name="CLRMONITOR_INSTRUMENT_ATTRIBUTE" value="Microsoft.Moles.Framework.Moles.MolesInstrumentAttribute"/>
<envVar name="CLRMONITOR_PROTECT_ALL_CCTORS" value="1"/>
<envVar name="CommonProgramW6432" value="C:\Program Files\Common Files"/>
<envVar name="LOGONSERVER" value="\\JMEI-THINK"/>
<envVar name="FugueRepository" value="C:\PROGRAM FILES (X86)\MICROSOFT VISUAL STUDIO 10.0\TEAM TOOLS\STATIC ANALYSIS TOOLS\FxCop\Repository"/>
<envVar name="USERPROFILE" value="C:\Users\jmei"/>
<envVar name="VisualStudioDir" value="C:\Users\jmei\Documents\Visual Studio 2010"/>
<envVar name="CLRMONITOR_SUBSTITUTIONS" value="C:\Windows\assembly\GAC_MSIL\Microsoft.ExtendedReflection\0.94.0.0__31bf3856ad364e35\Microsoft.ExtendedReflection.dll"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES_EXCLUSIONS" value=""/>
<envVar name="CodeContractsInstallDir" value="C:\Program Files (x86)\Microsoft\Contracts\"/>
<envVar name="HOMEDRIVE" value="C:"/>
<envVar name="TVTCOMMON" value="C:\Program Files (x86)\Common Files\Lenovo"/>
<envVar name="ComSpec" value="C:\Windows\system32\cmd.exe"/>
<envVar name="VS100COMNTOOLS" value="C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\Tools\"/>
<envVar name="USERNAME" value="jmei"/>
<envVar name="COR_PROFILER" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="PROCESSOR_ARCHITECTURE" value="x86"/>
<envVar name="pex_server_channel" value="pex11860"/>
<envVar name="OS" value="Windows_NT"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES" value="System.Collections,System.Collections.Generic,System.Collections.ObjectModel,System.Collections.Specialized,System.Diagnostics.Contracts"/>
<envVar name="SystemDrive" value="C:"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES" value="DigitalVoterList,DigitalVoterList.Tests,FSharp.Core,FSharp.PowerPack,Microsoft.Contracts,Microsoft.VisualBasic,Microsoft.VisualBasic.PowerPacks.Vs,Microsoft.VisualStudio.QualityTools.UnitTestFramework,MySql.Data,System,System.Core,System.Data,System.Data.Linq,System.Deployment,System.Drawing,System.Web,System.Windows.Forms"/>
<envVar name="ALLUSERSPROFILE" value="C:\ProgramData"/>
</envVars>
</environment>
<settings/>
<reflection/>
<assembly name="DigitalVoterList" version="1.0.0.0" fileVersion="1.0.0.0" fullName="DigitalVoterList, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe" fileName="DigitalVoterList.exe"><settings testFramework="VisualStudioUnitTest" testLanguage="cs"/>
<dump category="Tests" title="Build default assembly set for new project"><dtTree><dtTreeNode text="Build default assembly set for new project"><dtTextNode><rstring contentMode="memory"><![CDATA[visibility: exported and assembly(DigitalVoterList)
Processing 54 types
Processing DigitalVoterList
Scanning assembly references in DigitalVoterList
Applying template AssemblyInfo to DigitalVoterList
generating method bodies
flushing generated code
updating assembly references
]]></rstring>
</dtTextNode>
</dtTreeNode>
</dtTree>
</dump>
<fixture name="MunicipalityDOTest" type="DigitalVoterList.DBComm.DO.MunicipalityDOTest" typeName="MunicipalityDOTest" token="2000002" href="fix\DigitalVoterList.Tests.987.html"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
<settings typeUnderTest="DigitalVoterList.DBComm.DO.MunicipalityDO"/>
<exploration shortName="Constructor(Nullable`1&lt;UInt32&gt;, String, String)" fullName="DigitalVoterList.DBComm.DO.MunicipalityDOTest.Constructor(Nullable`1&lt;UInt32&gt;, String, String)" isDynamicCode="true"><method><definition assemblyName="DigitalVoterList.Tests" name="Constructor" token="6000001"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="id" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="DigitalVoterList" name=".ctor" token="60000cb"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="id" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="DigitalVoterList" name=".ctor" token="60000cb"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="id" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</memberUnderTest>
<log level="message" time="2011-12-07 12:30:42Z" category="progress" message="    0 runs"/>
<test name="Constructor" state="success" duration="0,05"/>
<generatedTest id="ff849a7b-b699-42b9-bc57-45a70fd87093" index="1" run="1" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="Constructor735"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="9" dtot="9" acov="9" atot="9"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="id">null</value>
<value name="address">null</value>
<value name="name">null</value>
<value name="result">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO = this.Constructor(default(uint?), (string)null, (string)null);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void Constructor735()
{
    MunicipalityDO municipalityDO;
    municipalityDO = this.Constructor(default(uint?), (string)null, (string)null);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
</generatedTest>
<log level="message" time="2011-12-07 12:30:42Z" category="coverage" message="coverage increased from 0 to 9 blocks (+9) after flipping &lt;unknown method&gt; at 0x&lt;unknown offset&gt;"/>
<coverage domain="usercodeundertest" unit="block" covered="9" total="9" coveredRatio="1"/>
<log level="message" time="2011-12-07 12:30:42Z" category="symbols" message="could not load symbols for C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Data.Linq\v4.0_4.0.0.0__b77a5c561934e089\System.Data.Linq.dll"/>
<log level="message" time="2011-12-07 12:30:42Z" category="symbols" message="search path: ;"/>
<sourceCoverage xml="cov\e329\cov.xml" html="cov\e329\cov.html"/>
<result name="Constructor(Nullable`1&lt;UInt32&gt;, String, String)" state="success" duration="0,29"/>
<duration start="2011-12-07 12:30:42Z" end="2011-12-07 12:30:42Z" seconds="0,29"/>
</exploration>
<exploration shortName="Constructor01()" fullName="DigitalVoterList.DBComm.DO.MunicipalityDOTest.Constructor01()" isDynamicCode="true"><method><definition assemblyName="DigitalVoterList.Tests" name="Constructor01" token="6000002"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="DigitalVoterList" name=".ctor" token="60000cc"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="DigitalVoterList" name=".ctor" token="60000cc"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</memberUnderTest>
<test name="Constructor01" state="success" duration="0,00"/>
<generatedTest id="b35f091b-8ce7-436a-9c11-5ccd22aab267" index="1" run="1" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="Constructor01808"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="3" acov="3" atot="3"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="result">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO = this.Constructor01();
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void Constructor01808()
{
    MunicipalityDO municipalityDO;
    municipalityDO = this.Constructor01();
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
</generatedTest>
<log level="message" time="2011-12-07 12:30:42Z" category="coverage" message="coverage increased from 0 to 3 blocks (+3) after flipping &lt;unknown method&gt; at 0x&lt;unknown offset&gt;"/>
<coverage domain="usercodeundertest" unit="block" covered="3" total="3" coveredRatio="1"/>
<sourceCoverage xml="cov\e337\cov.xml" html="cov\e337\cov.html"/>
<result name="Constructor01()" state="success" duration="0,03"/>
<duration start="2011-12-07 12:30:42Z" end="2011-12-07 12:30:42Z" seconds="0,03"/>
</exploration>
<exploration shortName="FullyInitialized(MunicipalityDO)" fullName="DigitalVoterList.DBComm.DO.MunicipalityDOTest.FullyInitialized(MunicipalityDO)" isDynamicCode="true"><method><definition assemblyName="DigitalVoterList.Tests" name="FullyInitialized" token="6000003"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="DigitalVoterList" name="FullyInitialized" token="60000d7"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="DigitalVoterList" name="FullyInitialized" token="60000d7"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</resultType>
</memberUnderTest>
<explorable title="guessed how to create DigitalVoterList.DBComm.DO.MunicipalityDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\MunicipalityDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<typeDefinition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="FullyInitialized" state="success" duration="0,01"/>
<test name="FullyInitialized" state="success" duration="0,03"/>
<generatedTest id="1aef783e-35c1-4318-8bfb-1e59f4de4a25" index="1" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="FullyInitialized980"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="5" dtot="18" acov="5" atot="18"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="result(target)">...</value>
<value name="result">false</value>
<code><![CDATA[MunicipalityDO municipalityDO;
bool b;
municipalityDO = new MunicipalityDO(default(uint?), (string)null, (string)null);
b = this.FullyInitialized(municipalityDO);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void FullyInitialized980()
{
    MunicipalityDO municipalityDO;
    bool b;
    municipalityDO = new MunicipalityDO(default(uint?), (string)null, (string)null);
    b = this.FullyInitialized(municipalityDO);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[MunicipalityDO s1 = new;
uint? s0 = target == s1 ? id_nullu : target.Id;
return target != (MunicipalityDO)null && methodof(target.FullyInitialized) == methodof(MunicipalityDO.FullyInitialized) && s0.hasValue == false;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:30:42Z" category="coverage" message="coverage increased from 0 to 5 blocks (+5) after flipping DigitalVoterList.DBComm.DO.MunicipalityDOTest.FullyInitialized at 0x0001"/>
<test name="FullyInitialized" state="success" duration="0,00"/>
<generatedTest id="b20aef87-b8ab-4a8b-8ee0-7c47861845f9" index="2" run="3" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="FullyInitialized98001"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="1" acov="8" atot="19"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="result(target)">...</value>
<value name="result">false</value>
<code><![CDATA[MunicipalityDO municipalityDO;
bool b;
municipalityDO = new MunicipalityDO(new uint?(1u), (string)null, (string)null);
b = this.FullyInitialized(municipalityDO);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNotNull((object)(municipalityDO.Id));
Assert.AreEqual<uint>(1u, (uint)((object)(municipalityDO.Id)));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void FullyInitialized98001()
{
    MunicipalityDO municipalityDO;
    bool b;
    municipalityDO = new MunicipalityDO(new uint?(1u), (string)null, (string)null);
    b = this.FullyInitialized(municipalityDO);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNotNull((object)(municipalityDO.Id));
    Assert.AreEqual<uint>(1u, (uint)((object)(municipalityDO.Id)));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[MunicipalityDO s1 = new;
uint? s0 = target == s1 ? id_nullu : target.Id;
string s2 = target == s1 ? address_s : target.Address;
return target != (MunicipalityDO)null && s0.hasValue != false && methodof(target.FullyInitialized) == methodof(MunicipalityDO.FullyInitialized) && s2 == (string)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:30:42Z" category="coverage" message="coverage increased from 5 to 8 blocks (+3) after flipping DigitalVoterList.DBComm.DO.MunicipalityDO.FullyInitialized at 0x000f"/>
<test name="FullyInitialized" state="success" duration="0,00"/>
<generatedTest id="f18d1ac6-bccd-4cd1-a11c-9ec0ae09d10f" index="3" run="4" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="FullyInitialized98002"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="1" acov="11" atot="20"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="result(target)">...</value>
<value name="result">false</value>
<code><![CDATA[MunicipalityDO municipalityDO;
bool b;
municipalityDO = new MunicipalityDO(new uint?(64u), "", (string)null);
b = this.FullyInitialized(municipalityDO);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNotNull((object)(municipalityDO.Id));
Assert.AreEqual<uint>(64u, (uint)((object)(municipalityDO.Id)));
Assert.AreEqual<string>("", municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void FullyInitialized98002()
{
    MunicipalityDO municipalityDO;
    bool b;
    municipalityDO = new MunicipalityDO(new uint?(64u), "", (string)null);
    b = this.FullyInitialized(municipalityDO);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNotNull((object)(municipalityDO.Id));
    Assert.AreEqual<uint>(64u, (uint)((object)(municipalityDO.Id)));
    Assert.AreEqual<string>("", municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[MunicipalityDO s1 = new;
uint? s0 = target == s1 ? id_nullu : target.Id;
string s2 = target == s1 ? address_s : target.Address;
return target != (MunicipalityDO)null && s0.hasValue != false && s2 != (string)null && methodof(target.FullyInitialized) == methodof(MunicipalityDO.FullyInitialized);
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:30:42Z" category="coverage" message="coverage increased from 8 to 11 blocks (+3) after flipping DigitalVoterList.DBComm.DO.MunicipalityDO.FullyInitialized at 0x001a"/>
<coverage domain="usercodeundertest" unit="block" covered="11" total="20" coveredRatio="0.55"/>
<sourceCoverage xml="cov\e339\cov.xml" html="cov\e339\cov.html"/>
<result name="FullyInitialized(MunicipalityDO)" state="success" duration="0,21"/>
<duration start="2011-12-07 12:30:42Z" end="2011-12-07 12:30:42Z" seconds="0,22"/>
</exploration>
<exploration shortName="PollingStationsGet(MunicipalityDO)" fullName="DigitalVoterList.DBComm.DO.MunicipalityDOTest.PollingStationsGet(MunicipalityDO)" isDynamicCode="true"><method><definition assemblyName="DigitalVoterList.Tests" name="PollingStationsGet" token="6000005"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="ICollection`1" token="2000352" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<target><propertyDefinition assemblyName="DigitalVoterList" name="PollingStations" token="1700001e"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<propertyType spec="Class"><definition assemblyName="mscorlib" name="ICollection`1" token="2000352" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</propertyDefinition>
</target>
<memberUnderTest assemblyName="DigitalVoterList" name="PollingStations" token="1700001e"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<propertyType spec="Class"><definition assemblyName="mscorlib" name="ICollection`1" token="2000352" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</memberUnderTest>
<explorable title="guessed how to create DigitalVoterList.DBComm.DO.MunicipalityDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\MunicipalityDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<typeDefinition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="PollingStationsGet" state="success" duration="0,00"/>
<test name="PollingStationsGet" state="success" duration="0,01"/>
<generatedTest id="110f4def-3bab-4260-935b-6eb78b4567b4" index="1" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="PollingStationsGet673"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="1" dtot="10" acov="1" atot="10"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="result(target)">...</value>
<value name="result">new EntitySet{}</value>
<code><![CDATA[MunicipalityDO municipalityDO;
ICollection<PollingStationDO> iCollection;
municipalityDO = new MunicipalityDO(default(uint?), (string)null, (string)null);
iCollection = this.PollingStationsGet(municipalityDO);
Assert.IsNotNull((object)iCollection);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsTrue
    (object.ReferenceEquals(municipalityDO.PollingStations, (object)iCollection)
    );
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void PollingStationsGet673()
{
    MunicipalityDO municipalityDO;
    ICollection<PollingStationDO> iCollection;
    municipalityDO = new MunicipalityDO(default(uint?), (string)null, (string)null);
    iCollection = this.PollingStationsGet(municipalityDO);
    Assert.IsNotNull((object)iCollection);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsTrue
        (object.ReferenceEquals(municipalityDO.PollingStations, (object)iCollection)
        );
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[return target != (MunicipalityDO)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:30:42Z" category="coverage" message="coverage increased from 0 to 1 blocks (+1) after flipping DigitalVoterList.DBComm.DO.MunicipalityDO.get_PollingStations at 0x0002"/>
<coverage domain="usercodeundertest" unit="block" covered="1" total="10" coveredRatio="0.1"/>
<sourceCoverage xml="cov\e351\cov.xml" html="cov\e351\cov.html"/>
<result name="PollingStationsGet(MunicipalityDO)" state="success" duration="0,06"/>
<duration start="2011-12-07 12:30:42Z" end="2011-12-07 12:30:42Z" seconds="0,06"/>
</exploration>
<exploration shortName="PollingStationsSet(MunicipalityDO, ICollection`1&lt;PollingStationDO&gt;)" fullName="DigitalVoterList.DBComm.DO.MunicipalityDOTest.PollingStationsSet(MunicipalityDO, ICollection`1&lt;PollingStationDO&gt;)" isDynamicCode="true"><method><definition assemblyName="DigitalVoterList.Tests" name="PollingStationsSet" token="6000007"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="value" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="ICollection`1" token="2000352" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
</definition>
</method>
<target><propertyDefinition assemblyName="DigitalVoterList" name="PollingStations" token="1700001e"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<propertyType spec="Class"><definition assemblyName="mscorlib" name="ICollection`1" token="2000352" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</propertyDefinition>
</target>
<memberUnderTest assemblyName="DigitalVoterList" name="PollingStations" token="1700001e"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<propertyType spec="Class"><definition assemblyName="mscorlib" name="ICollection`1" token="2000352" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</memberUnderTest>
<explorable title="guessed how to create DigitalVoterList.DBComm.DO.MunicipalityDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\MunicipalityDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<typeDefinition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="PollingStationsSet" state="success" duration="0,00"/>
<log level="message" time="2011-12-07 12:30:42Z" category="symbols" message="could not load symbols for C:\Windows\assembly\GAC_MSIL\Microsoft.Pex\0.94.0.0__31bf3856ad364e35\Microsoft.Pex.exe"/>
<test name="PollingStationsSet" state="success" duration="0,02"/>
<generatedTest id="4358da21-0c66-4cf0-aaeb-2c4bc72ea510" index="1" run="2" exceptionState="expected" status="expectedexception" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="PollingStationsSetThrowsContractException852"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="1" dtot="12" acov="1" atot="12"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="value">null</value>
<code><![CDATA[try
{
  MunicipalityDO municipalityDO;
  municipalityDO =
    new MunicipalityDO(default(uint?), (string)null, (string)null);
  this.PollingStationsSet(municipalityDO, (ICollection<PollingStationDO>)null);
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PollingStationsSetThrowsContractException852()
{
    try
    {
      MunicipalityDO municipalityDO;
      municipalityDO =
        new MunicipalityDO(default(uint?), (string)null, (string)null);
      this.PollingStationsSet(municipalityDO, (ICollection<PollingStationDO>)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<exceptionChain><exception typeDisplayName="ContractException" source="DigitalVoterList"><message><![CDATA[Precondition failed: value != null]]></message>
<type spec="Class"><definition assemblyName="DigitalVoterList" name="ContractException" token="200004e"><declaringType assemblyName="DigitalVoterList" name="__ContractsRuntime" token="2000035" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at MunicipalityDO.set_PollingStations(ICollection`1&lt;PollingStationDO&gt;) in C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\MunicipalityDO.cs(77)" method="MunicipalityDO.set_PollingStations(ICollection`1&lt;PollingStationDO&gt;)" offset="13" file="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\MunicipalityDO.cs" line="77"><method assemblyName="DigitalVoterList" name="set_PollingStations" token="60000d0"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="value" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="ICollection`1" token="2000352" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
            set
            {]]></beforeSource>
<source><![CDATA[                Contract.Requires(value != null);]]></source>
<afterSource><![CDATA[                _pStations.AddRange(value);
            }
        }]]></afterSource>
</frame>
<frame value="  at MunicipalityDOTest.PollingStationsSet(MunicipalityDO, ICollection`1&lt;PollingStationDO&gt;)" method="MunicipalityDOTest.PollingStationsSet(MunicipalityDO, ICollection`1&lt;PollingStationDO&gt;)" offset="2"><method assemblyName="DigitalVoterList.Tests" name="PollingStationsSet" token="6000007"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="value" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="ICollection`1" token="2000352" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return value == (ICollection<PollingStationDO>)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:30:42Z" category="coverage" message="coverage increased from 0 to 1 blocks (+1) after flipping System.Diagnostics.Contracts.__ContractsRuntime.Requires at 0x0001"/>
<test name="PollingStationsSet" state="success" duration="0,06"/>
<test name="PollingStationsSet" state="success" duration="0,06"/>
<generatedTest id="c3fe34e8-8dc4-4d9f-ace4-dd4cc7953760" index="2" run="4" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="PollingStationsSet623"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="2" dtot="0" acov="3" atot="12"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="value">{}</value>
<value name="result(target)">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO = new MunicipalityDO(default(uint?), (string)null, (string)null);
PollingStationDO[] pollingStationDOs = new PollingStationDO[0];
this.PollingStationsSet
    (municipalityDO, (ICollection<PollingStationDO>)pollingStationDOs);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void PollingStationsSet623()
{
    MunicipalityDO municipalityDO;
    municipalityDO = new MunicipalityDO(default(uint?), (string)null, (string)null);
    PollingStationDO[] pollingStationDOs = new PollingStationDO[0];
    this.PollingStationsSet
        (municipalityDO, (ICollection<PollingStationDO>)pollingStationDOs);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[MunicipalityDO s2 = new;
EntitySet<PollingStationDO> s3 = new;
EntitySet<PollingStationDO> s1 = target == s2 ? s3 : target._pStations;
EntitySet<PollingStationDO> s0 = s1;
PollingStationDO s4 = s0 == s3 ? (PollingStationDO)null : s0.onAddEntity;
PollingStationDO s5 = s0 == s3 ? (PollingStationDO)null : s0.onRemoveEntity;
return value != (ICollection<PollingStationDO>)null && 
       target != (MunicipalityDO)null && s0 != (EntitySet<PollingStationDO>)null && (value == (ICollection<PollingStationDO>)null || value is PollingStationDO[]) && 
                                                                                    s4 == (PollingStationDO)null && s5 == (PollingStationDO)null && (value == (ICollection<PollingStationDO>)null || value is object[] ? (Array)value : (Array)null).Length == 0;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:30:43Z" category="coverage" message="coverage increased from 1 to 3 blocks (+2) after flipping System.Collections.Generic.List`1+Enumerator.MoveNext at 0x0021"/>
<test name="PollingStationsSet" state="success" duration="0,06"/>
<generatedTest id="ee352421-acea-46bd-adc1-cf0b0d5576f3" index="3" run="5" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="PollingStationsSet798"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="3" atot="12"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="value">{null}</value>
<value name="result(target)">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO = new MunicipalityDO(default(uint?), (string)null, (string)null);
PollingStationDO[] pollingStationDOs = new PollingStationDO[1];
this.PollingStationsSet
    (municipalityDO, (ICollection<PollingStationDO>)pollingStationDOs);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void PollingStationsSet798()
{
    MunicipalityDO municipalityDO;
    municipalityDO = new MunicipalityDO(default(uint?), (string)null, (string)null);
    PollingStationDO[] pollingStationDOs = new PollingStationDO[1];
    this.PollingStationsSet
        (municipalityDO, (ICollection<PollingStationDO>)pollingStationDOs);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[MunicipalityDO s2 = new;
EntitySet<PollingStationDO> s3 = new;
EntitySet<PollingStationDO> s1 = target == s2 ? s3 : target._pStations;
EntitySet<PollingStationDO> s0 = s1;
PollingStationDO s4 = s0 == s3 ? (PollingStationDO)null : s0.onAddEntity;
PollingStationDO s5 = s0 == s3 ? (PollingStationDO)null : s0.onRemoveEntity;
Action<PollingStationDO> s6 = s0 == s3 ? (Action<PollingStationDO>)null : s0.onAdd;
IEnumerable<PollingStationDO> s7 = s0 == s3 ? (IEnumerable<PollingStationDO>)null : s0.source;
ItemList<PollingStationDO> s9 = s0 == s3 ? default(ItemList<PollingStationDO>) : s0.entities;
ItemList<PollingStationDO> s8 = s9;
ListChangedEventHandler s10 = s0 == s3 ? (ListChangedEventHandler)null : s0.onListChanged;
return value != (ICollection<PollingStationDO>)null && 
       target != (MunicipalityDO)null && s0 != (EntitySet<PollingStationDO>)null && (value == (ICollection<PollingStationDO>)null || value is PollingStationDO[]) && 
                                                                                    (value == (ICollection<PollingStationDO>)null || value is object[] ? (Array)value : (Array)null).Length == 1 && s4 == (PollingStationDO)null && s5 == (PollingStationDO)null && 
                                                                                                                                                                                                                                    s6 == (Action<PollingStationDO>)null && s7 == (IEnumerable<PollingStationDO>)null && s8.items == (PollingStationDO[])null && s8.count == 0 && s10 == (ListChangedEventHandler)null;
]]></pathCondition>
</generatedTest>
<test name="PollingStationsSet" state="success" duration="0,00"/>
<generatedTest id="f1607d83-f3d2-40e7-8ec8-499df9179f91" index="4" run="6" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="PollingStationsSet900"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="3" atot="12"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="value">{null, null}</value>
<value name="result(target)">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO = new MunicipalityDO(default(uint?), (string)null, (string)null);
PollingStationDO[] pollingStationDOs = new PollingStationDO[2];
this.PollingStationsSet
    (municipalityDO, (ICollection<PollingStationDO>)pollingStationDOs);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void PollingStationsSet900()
{
    MunicipalityDO municipalityDO;
    municipalityDO = new MunicipalityDO(default(uint?), (string)null, (string)null);
    PollingStationDO[] pollingStationDOs = new PollingStationDO[2];
    this.PollingStationsSet
        (municipalityDO, (ICollection<PollingStationDO>)pollingStationDOs);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[MunicipalityDO s2 = new;
EntitySet<PollingStationDO> s3 = new;
EntitySet<PollingStationDO> s1 = target == s2 ? s3 : target._pStations;
EntitySet<PollingStationDO> s0 = s1;
PollingStationDO s4 = s0 == s3 ? (PollingStationDO)null : s0.onAddEntity;
PollingStationDO s5 = s0 == s3 ? (PollingStationDO)null : s0.onRemoveEntity;
Action<PollingStationDO> s6 = s0 == s3 ? (Action<PollingStationDO>)null : s0.onAdd;
IEnumerable<PollingStationDO> s7 = s0 == s3 ? (IEnumerable<PollingStationDO>)null : s0.source;
ItemList<PollingStationDO> s9 = s0 == s3 ? default(ItemList<PollingStationDO>) : s0.entities;
ItemList<PollingStationDO> s8 = s9;
ListChangedEventHandler s10 = s0 == s3 ? (ListChangedEventHandler)null : s0.onListChanged;
return value != (ICollection<PollingStationDO>)null && 
       target != (MunicipalityDO)null && s0 != (EntitySet<PollingStationDO>)null && (value == (ICollection<PollingStationDO>)null || value is PollingStationDO[]) && 
                                                                                    (value == (ICollection<PollingStationDO>)null || value is object[] ? (Array)value : (Array)null).Length == 2 && s4 == (PollingStationDO)null && s5 == (PollingStationDO)null && 
                                                                                                                                                                                                                                    s6 == (Action<PollingStationDO>)null && s7 == (IEnumerable<PollingStationDO>)null && s8.items == (PollingStationDO[])null && s8.count == 0 && s10 == (ListChangedEventHandler)null;
]]></pathCondition>
</generatedTest>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<generatedTest id="35df3094-0838-4220-a6ff-35177db08cdf" index="5" run="7" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="PollingStationsSet556"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="3" atot="12"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="value">{null, null, null}</value>
<value name="result(target)">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO = new MunicipalityDO(default(uint?), (string)null, (string)null);
PollingStationDO[] pollingStationDOs = new PollingStationDO[3];
this.PollingStationsSet
    (municipalityDO, (ICollection<PollingStationDO>)pollingStationDOs);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void PollingStationsSet556()
{
    MunicipalityDO municipalityDO;
    municipalityDO = new MunicipalityDO(default(uint?), (string)null, (string)null);
    PollingStationDO[] pollingStationDOs = new PollingStationDO[3];
    this.PollingStationsSet
        (municipalityDO, (ICollection<PollingStationDO>)pollingStationDOs);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[MunicipalityDO s2 = new;
EntitySet<PollingStationDO> s3 = new;
EntitySet<PollingStationDO> s1 = target == s2 ? s3 : target._pStations;
EntitySet<PollingStationDO> s0 = s1;
PollingStationDO s4 = s0 == s3 ? (PollingStationDO)null : s0.onAddEntity;
PollingStationDO s5 = s0 == s3 ? (PollingStationDO)null : s0.onRemoveEntity;
Action<PollingStationDO> s6 = s0 == s3 ? (Action<PollingStationDO>)null : s0.onAdd;
IEnumerable<PollingStationDO> s7 = s0 == s3 ? (IEnumerable<PollingStationDO>)null : s0.source;
ItemList<PollingStationDO> s9 = s0 == s3 ? default(ItemList<PollingStationDO>) : s0.entities;
ItemList<PollingStationDO> s8 = s9;
ListChangedEventHandler s10 = s0 == s3 ? (ListChangedEventHandler)null : s0.onListChanged;
return value != (ICollection<PollingStationDO>)null && 
       target != (MunicipalityDO)null && s0 != (EntitySet<PollingStationDO>)null && (value == (ICollection<PollingStationDO>)null || value is PollingStationDO[]) && 
                                                                                    (value == (ICollection<PollingStationDO>)null || value is object[] ? (Array)value : (Array)null).Length == 3 && s4 == (PollingStationDO)null && s5 == (PollingStationDO)null && 
                                                                                                                                                                                                                                    s6 == (Action<PollingStationDO>)null && s7 == (IEnumerable<PollingStationDO>)null && s8.items == (PollingStationDO[])null && s8.count == 0 && s10 == (ListChangedEventHandler)null;
]]></pathCondition>
</generatedTest>
<test name="PollingStationsSet" state="success" duration="0,00"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,02"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,02"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,02"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,02"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,02"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,04"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,03"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,03"/>
<test name="PollingStationsSet" state="success" duration="0,00"/>
<test name="PollingStationsSet" state="success" duration="0,03"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,04"/>
<log level="message" time="2011-12-07 12:30:48Z" category="progress" message="  250 constraint systems (61,60 % solved, 38,40 % proven unsatisfiable)"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,05"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,07"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,06"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,06"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,06"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,06"/>
<test name="PollingStationsSet" state="success" duration="0,00"/>
<test name="PollingStationsSet" state="success" duration="0,06"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,07"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,06"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,09"/>
<log level="message" time="2011-12-07 12:30:52Z" category="progress" message="   87 runs (55,17 % retries), 3/12 blocks covered"/>
<test name="PollingStationsSet" state="success" duration="0,02"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,10"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,11"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,11"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,15"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,12"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,11"/>
<log level="message" time="2011-12-07 12:30:55Z" category="progress" message="  500 constraint systems (60,40 % solved, 39,60 % proven unsatisfiable)"/>
<test name="PollingStationsSet" state="success" duration="0,01"/>
<test name="PollingStationsSet" state="success" duration="0,12"/>
<boundary kind="maxrunswithoutnewtests" value="100" message="maximum runs without new tests reached"><update kind="AddOrUpdateAttributeCodeUpdate" name="Set MaxRunsWithoutNewTests=200" update="true"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e51"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexMethodAttribute" token="200027f" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="I4Expression" value="200"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</type>
</value>
<property><definition assemblyName="Microsoft.Pex.Framework" name="MaxRunsWithoutNewTests" token="17000346"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexSettingsAttributeBase" token="2000273" namespace="Microsoft.Pex.Framework.Settings"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</propertyType>
</definition>
</property>
</argument>
<target><method><definition assemblyName="DigitalVoterList.Tests" name="PollingStationsSet" token="6000007"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="value" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="ICollection`1" token="2000352" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
</definition>
</method>
</target>
</update>
</boundary>
<coverage domain="usercodeundertest" unit="block" covered="3" total="12" coveredRatio="0.25"/>
<sourceCoverage xml="cov\e354\cov.xml" html="cov\e354\cov.html"/>
<result name="PollingStationsSet(MunicipalityDO, ICollection`1&lt;PollingStationDO&gt;)" state="success" duration="13.0124748223396"/>
<duration start="2011-12-07 12:30:42Z" end="2011-12-07 12:30:55Z" seconds="13.0084789"/>
<trajectory><image src="fix\digitalvoterlist634588614556701779.trajectories.png" width="800" height="1600"/>
</trajectory>
</exploration>
<exploration shortName="PrimaryKeyGet(MunicipalityDO)" fullName="DigitalVoterList.DBComm.DO.MunicipalityDOTest.PrimaryKeyGet(MunicipalityDO)" isDynamicCode="true"><method><definition assemblyName="DigitalVoterList.Tests" name="PrimaryKeyGet" token="6000006"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<target><propertyDefinition assemblyName="DigitalVoterList" name="PrimaryKey" token="1700001d"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</propertyDefinition>
</target>
<memberUnderTest assemblyName="DigitalVoterList" name="PrimaryKey" token="1700001d"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</memberUnderTest>
<explorable title="guessed how to create DigitalVoterList.DBComm.DO.MunicipalityDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\MunicipalityDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<typeDefinition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="PrimaryKeyGet" state="success" duration="0,00"/>
<test name="PrimaryKeyGet" state="success" duration="0,01"/>
<generatedTest id="61912a69-4e25-437c-bfac-36a88350a181" index="1" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="PrimaryKeyGet637"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="12" acov="3" atot="12"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="result(target)">...</value>
<value name="result">null</value>
<code><![CDATA[MunicipalityDO municipalityDO;
uint? nullu;
municipalityDO = new MunicipalityDO(default(uint?), (string)null, (string)null);
nullu = this.PrimaryKeyGet(municipalityDO);
Assert.IsNull((object)nullu);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void PrimaryKeyGet637()
{
    MunicipalityDO municipalityDO;
    uint? nullu;
    municipalityDO = new MunicipalityDO(default(uint?), (string)null, (string)null);
    nullu = this.PrimaryKeyGet(municipalityDO);
    Assert.IsNull((object)nullu);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[return target != (MunicipalityDO)null && methodof(target.get_PrimaryKey) == methodof(MunicipalityDO.get_PrimaryKey);
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:30:55Z" category="coverage" message="coverage increased from 0 to 3 blocks (+3) after flipping DigitalVoterList.DBComm.DO.MunicipalityDOTest.PrimaryKeyGet at 0x0001"/>
<coverage domain="usercodeundertest" unit="block" covered="3" total="12" coveredRatio="0.25"/>
<sourceCoverage xml="cov\e429\cov.xml" html="cov\e429\cov.html"/>
<result name="PrimaryKeyGet(MunicipalityDO)" state="success" duration="0,07"/>
<duration start="2011-12-07 12:30:55Z" end="2011-12-07 12:30:55Z" seconds="0,08"/>
</exploration>
<exploration shortName="UpdateValues(MunicipalityDO, IDataObject)" fullName="DigitalVoterList.DBComm.DO.MunicipalityDOTest.UpdateValues(MunicipalityDO, IDataObject)" isDynamicCode="true"><method><definition assemblyName="DigitalVoterList.Tests" name="UpdateValues" token="6000004"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="2"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</definition>
</method>
<target><methodDefinition assemblyName="DigitalVoterList" name="UpdateValues" token="60000d8"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="DigitalVoterList" name="UpdateValues" token="60000d8"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</memberUnderTest>
<log level="warning" time="2011-12-07 12:30:55Z" wikiTopic="Usable Type Guessed" category="domains" message="will use DigitalVoterList.DBComm.DO.VoterDO as IDataObject"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</argument>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2011-12-07 12:30:55Z" wikiTopic="Usable Type Guessed" category="domains" message="will use DigitalVoterList.DBComm.DO.PollingStationDO as IDataObject"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</argument>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2011-12-07 12:30:55Z" wikiTopic="Usable Type Guessed" category="domains" message="will use DigitalVoterList.DBComm.DO.MunicipalityDO as IDataObject"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</argument>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2011-12-07 12:30:55Z" wikiTopic="Usable Type Guessed" category="domains" message="will use DigitalVoterList.DBComm.DO.LogDO as IDataObject"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="LogDO" token="2000030" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</argument>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
</log>
<explorable title="guessed how to create DigitalVoterList.DBComm.DO.MunicipalityDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\MunicipalityDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<typeDefinition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,01"/>
<generatedTest id="d6cdbff0-c2d0-4a45-a032-8fb03cc45fd4" index="1" run="2" exceptionState="expected" status="expectedexception" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="UpdateValuesThrowsContractException916"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="2" dtot="34" acov="2" atot="34"/>
<rcov name="asserts" dcov="0" dtot="1" acov="0" atot="1"/>
<value name="target">...</value>
<value name="dummy">null</value>
<code><![CDATA[try
{
  MunicipalityDO municipalityDO;
  municipalityDO =
    new MunicipalityDO(default(uint?), (string)null, (string)null);
  this.UpdateValues(municipalityDO, (IDataObject)null);
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void UpdateValuesThrowsContractException916()
{
    try
    {
      MunicipalityDO municipalityDO;
      municipalityDO =
        new MunicipalityDO(default(uint?), (string)null, (string)null);
      this.UpdateValues(municipalityDO, (IDataObject)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<exceptionChain><exception typeDisplayName="ContractException" source="DigitalVoterList"><message><![CDATA[Precondition failed: dummy != null]]></message>
<type spec="Class"><definition assemblyName="DigitalVoterList" name="ContractException" token="200004e"><declaringType assemblyName="DigitalVoterList" name="__ContractsRuntime" token="2000035" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at MunicipalityDO.UpdateValues(IDataObject) in C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\IDataObjectContracts.cs(32)" method="MunicipalityDO.UpdateValues(IDataObject)" offset="36" file="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\IDataObjectContracts.cs" line="32"><method assemblyName="DigitalVoterList" name="UpdateValues" token="60000d8"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        void IDataObject.UpdateValues(IDataObject dummy)
        {]]></beforeSource>
<source><![CDATA[            Contract.Requires(dummy != null);]]></source>
<afterSource><![CDATA[            Contract.Requires(dummy.GetType() == this.GetType());
        }
]]></afterSource>
</frame>
<frame value="  at MunicipalityDOTest.UpdateValues(MunicipalityDO, IDataObject)" method="MunicipalityDOTest.UpdateValues(MunicipalityDO, IDataObject)" offset="2"><method assemblyName="DigitalVoterList.Tests" name="UpdateValues" token="6000004"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="2"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return target != (MunicipalityDO)null && methodof(target.UpdateValues) == methodof(MunicipalityDO.UpdateValues) && dummy == (IDataObject)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:30:55Z" category="coverage" message="coverage increased from 0 to 2 blocks (+2) after flipping DigitalVoterList.DBComm.DO.MunicipalityDOTest.UpdateValues at 0x0002"/>
<test name="UpdateValues" state="success" duration="0,01"/>
<generatedTest id="25a706b6-6998-43f6-b60d-6d23483409bd" index="2" run="3" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="UpdateValues71"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="27" dtot="3" acov="29" atot="37"/>
<rcov name="asserts" dcov="1" dtot="0" acov="1" atot="1"/>
<value name="target">...</value>
<value name="dummy">...</value>
<value name="result(target)">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO = new MunicipalityDO(default(uint?), (string)null, (string)null);
this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void UpdateValues71()
{
    MunicipalityDO municipalityDO;
    municipalityDO = new MunicipalityDO(default(uint?), (string)null, (string)null);
    this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[IDataObject s0 = dummy == (IDataObject)null || dummy is MunicipalityDO ? dummy : (IDataObject)null;
MunicipalityDO s2 = new;
string s1 = s0 == (IDataObject)s2 ? address_s : ((MunicipalityDO)s0).Address;
uint? s3 = s0 == (IDataObject)s2 ? id_nullu : ((MunicipalityDO)s0).Id;
string s4 = s0 == (IDataObject)s2 ? name_s1 : ((MunicipalityDO)s0).Name;
return target != (MunicipalityDO)null && dummy != (IDataObject)null && ((object)dummy).GetType() == ((object)target).GetType() && 
                                                                       s0 != (IDataObject)null && methodof(target.UpdateValues) == methodof(MunicipalityDO.UpdateValues) && s1 == (string)null && s3.hasValue == false && s4 == (string)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:30:55Z" category="coverage" message="coverage increased from 2 to 29 blocks (+27) after flipping System.Diagnostics.Contracts.__ContractsRuntime.Requires at 0x0001"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<generatedTest id="3822a8f3-87ee-48b2-9393-cd26b958352e" index="3" run="4" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="UpdateValues7101"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="29" atot="37"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="1"/>
<value name="target">...</value>
<value name="dummy">...</value>
<value name="result(target)">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO = new MunicipalityDO(default(uint?), (string)null, "");
this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>("", municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void UpdateValues7101()
{
    MunicipalityDO municipalityDO;
    municipalityDO = new MunicipalityDO(default(uint?), (string)null, "");
    this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>("", municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[IDataObject s0 = dummy == (IDataObject)null || dummy is MunicipalityDO ? dummy : (IDataObject)null;
MunicipalityDO s2 = new;
string s1 = s0 == (IDataObject)s2 ? name_s1 : ((MunicipalityDO)s0).Name;
string s3 = s0 == (IDataObject)s2 ? address_s : ((MunicipalityDO)s0).Address;
uint? s4 = s0 == (IDataObject)s2 ? id_nullu : ((MunicipalityDO)s0).Id;
return target != (MunicipalityDO)null && dummy != (IDataObject)null && ((object)dummy).GetType() == ((object)target).GetType() && 
                                                                       s0 != (IDataObject)null && s1 != (string)null && methodof(target.UpdateValues) == methodof(MunicipalityDO.UpdateValues) && s3 == (string)null && s4.hasValue == false;
]]></pathCondition>
</generatedTest>
<test name="UpdateValues" state="success" duration="0,01"/>
<generatedTest id="aa341494-1e52-4398-bfca-3016cb3d38f2" index="4" run="5" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="UpdateValues7102"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="2" dtot="0" acov="31" atot="37"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="1"/>
<value name="target">...</value>
<value name="dummy">...</value>
<value name="result(target)">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO = new MunicipalityDO(new uint?(1u), (string)null, (string)null);
this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNotNull((object)(municipalityDO.Id));
Assert.AreEqual<uint>(1u, (uint)((object)(municipalityDO.Id)));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void UpdateValues7102()
{
    MunicipalityDO municipalityDO;
    municipalityDO = new MunicipalityDO(new uint?(1u), (string)null, (string)null);
    this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNotNull((object)(municipalityDO.Id));
    Assert.AreEqual<uint>(1u, (uint)((object)(municipalityDO.Id)));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[IDataObject s0 = dummy == (IDataObject)null || dummy is MunicipalityDO ? dummy : (IDataObject)null;
MunicipalityDO s2 = new;
uint? s1 = s0 == (IDataObject)s2 ? id_nullu : ((MunicipalityDO)s0).Id;
string s3 = s0 == (IDataObject)s2 ? address_s : ((MunicipalityDO)s0).Address;
string s4 = s0 == (IDataObject)s2 ? name_s1 : ((MunicipalityDO)s0).Name;
return target != (MunicipalityDO)null && dummy != (IDataObject)null && ((object)dummy).GetType() == ((object)target).GetType() && 
                                                                       s0 != (IDataObject)null && s1.hasValue != false && methodof(target.UpdateValues) == methodof(MunicipalityDO.UpdateValues) && s3 == (string)null && s4 == (string)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:30:56Z" category="coverage" message="coverage increased from 29 to 31 blocks (+2) after flipping DigitalVoterList.DBComm.DO.MunicipalityDO.UpdateValues at 0x009d"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<generatedTest id="88f5795e-926c-4471-b7e5-584ff1767bbe" index="5" run="6" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="UpdateValues7103"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="31" atot="37"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="1"/>
<value name="target">...</value>
<value name="dummy">...</value>
<value name="result(target)">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO = new MunicipalityDO(default(uint?), "", (string)null);
this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>("", municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void UpdateValues7103()
{
    MunicipalityDO municipalityDO;
    municipalityDO = new MunicipalityDO(default(uint?), "", (string)null);
    this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>("", municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[IDataObject s0 = dummy == (IDataObject)null || dummy is MunicipalityDO ? dummy : (IDataObject)null;
MunicipalityDO s2 = new;
string s1 = s0 == (IDataObject)s2 ? address_s : ((MunicipalityDO)s0).Address;
uint? s3 = s0 == (IDataObject)s2 ? id_nullu : ((MunicipalityDO)s0).Id;
string s4 = s0 == (IDataObject)s2 ? name_s1 : ((MunicipalityDO)s0).Name;
return target != (MunicipalityDO)null && dummy != (IDataObject)null && ((object)dummy).GetType() == ((object)target).GetType() && 
                                                                       s0 != (IDataObject)null && s1 != (string)null && methodof(target.UpdateValues) == methodof(MunicipalityDO.UpdateValues) && s3.hasValue == false && s4 == (string)null;
]]></pathCondition>
</generatedTest>
<explorable title="guessed how to create DigitalVoterList.DBComm.DO.PollingStationDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\PollingStationDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.PollingStationDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<typeDefinition assemblyName="DigitalVoterList.Tests" name="PollingStationDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.PollingStationDO instances</summary>
]]></doc>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="PollingStationDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="municipalityId_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="id_nullu1" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="name_s" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="address_s1" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DigitalVoterList.Tests" name="PollingStationDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="PollingStationDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="municipalityId_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="id_nullu1" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="name_s" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="address_s1" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="UpdateValues" state="success" duration="0,02"/>
<explorable title="guessed how to create DigitalVoterList.DBComm.DO.VoterDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\VoterDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.VoterDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<typeDefinition assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.VoterDO instances</summary>
]]></doc>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<reference name="Microsoft.Pex.Framework"/>
<methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="_pollingStation_entityRef" position="0"><type spec="ValueType"><definition assemblyName="System.Data.Linq" valueType="true" name="EntityRef`1" token="200014e" namespace="System.Data.Linq"><genericParameter value="TEntity"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PrimaryKey&gt;k__BackingField_nullu" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PollingStationId&gt;k__BackingField_nullu1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Name&gt;k__BackingField_s" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;Address&gt;k__BackingField_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;City&gt;k__BackingField_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;CardPrinted&gt;k__BackingField_nullb" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Voted&gt;k__BackingField_nullb1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="_pollingStation_entityRef" position="0"><type spec="ValueType"><definition assemblyName="System.Data.Linq" valueType="true" name="EntityRef`1" token="200014e" namespace="System.Data.Linq"><genericParameter value="TEntity"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PrimaryKey&gt;k__BackingField_nullu" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PollingStationId&gt;k__BackingField_nullu1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Name&gt;k__BackingField_s" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;Address&gt;k__BackingField_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;City&gt;k__BackingField_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;CardPrinted&gt;k__BackingField_nullb" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Voted&gt;k__BackingField_nullb1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="UpdateValues" state="success" duration="0,01"/>
<test name="UpdateValues" state="success" duration="0,02"/>
<generatedTest id="2bb80ffc-4e38-409d-8722-fc482b61862c" index="6" run="9" exceptionState="expected" status="expectedexception" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="UpdateValuesThrowsContractException891"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="31" atot="37"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="1"/>
<value name="target">...</value>
<value name="dummy">...</value>
<code><![CDATA[try
{
  MunicipalityDO municipalityDO;
  PollingStationDO pollingStationDO;
  municipalityDO =
    new MunicipalityDO(default(uint?), (string)null, (string)null);
  pollingStationDO = new PollingStationDO
                         (default(uint?), default(uint?), (string)null, (string)null);
  this.UpdateValues(municipalityDO, (IDataObject)pollingStationDO);
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void UpdateValuesThrowsContractException891()
{
    try
    {
      MunicipalityDO municipalityDO;
      PollingStationDO pollingStationDO;
      municipalityDO =
        new MunicipalityDO(default(uint?), (string)null, (string)null);
      pollingStationDO = new PollingStationDO
                             (default(uint?), default(uint?), (string)null, (string)null);
      this.UpdateValues(municipalityDO, (IDataObject)pollingStationDO);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<exceptionChain><exception typeDisplayName="ContractException" source="DigitalVoterList"><message><![CDATA[Precondition failed: dummy.GetType() == this.GetType()]]></message>
<type spec="Class"><definition assemblyName="DigitalVoterList" name="ContractException" token="200004e"><declaringType assemblyName="DigitalVoterList" name="__ContractsRuntime" token="2000035" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at MunicipalityDO.UpdateValues(IDataObject) in C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\IDataObjectContracts.cs(33)" method="MunicipalityDO.UpdateValues(IDataObject)" offset="65" file="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\IDataObjectContracts.cs" line="33"><method assemblyName="DigitalVoterList" name="UpdateValues" token="60000d8"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        void IDataObject.UpdateValues(IDataObject dummy)
        {
            Contract.Requires(dummy != null);]]></beforeSource>
<source><![CDATA[            Contract.Requires(dummy.GetType() == this.GetType());]]></source>
<afterSource><![CDATA[        }

        #endregion]]></afterSource>
</frame>
<frame value="  at MunicipalityDOTest.UpdateValues(MunicipalityDO, IDataObject)" method="MunicipalityDOTest.UpdateValues(MunicipalityDO, IDataObject)" offset="2"><method assemblyName="DigitalVoterList.Tests" name="UpdateValues" token="6000004"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="2"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathAssumption><![CDATA[PollingStationDO s0 = new;
return dummy == (IDataObject)s0 && (dummy == (IDataObject)null || dummy is MunicipalityDO ? dummy : (IDataObject)null) == (IDataObject)null && 
                                   methodof(target.UpdateValues) == methodof(MunicipalityDO.UpdateValues) && ((object)dummy).GetType() == ((object)target).GetType() && dummy != (IDataObject)null && target != (MunicipalityDO)null;
]]></pathAssumption>
<pathCondition><![CDATA[PollingStationDO s0 = new;
return ((object)s0).GetType() != ((object)target).GetType();
]]></pathCondition>
</generatedTest>
<test name="UpdateValues" state="success" duration="0,04"/>
<generatedTest id="dfd65584-ef0c-4a13-b3c0-4091785c676d" index="7" run="10" exceptionState="expected" status="expectedexception" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="UpdateValuesThrowsContractException440"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="31" atot="37"/>
<rcov name="asserts" dcov="1" dtot="1" acov="2" atot="2"/>
<value name="target">...</value>
<value name="dummy">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<code><![CDATA[try
{
  MunicipalityDO municipalityDO;
  VoterDO voterDO;
  municipalityDO =
    new MunicipalityDO(default(uint?), (string)null, (string)null);
  voterDO = PexInvariant.CreateInstance<VoterDO>();
  PexInvariant.SetField<EntityRef<PollingStationDO>>
      ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
  PexInvariant.SetField<uint?>
      ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
  PexInvariant.SetField<uint?>
      ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
  PexInvariant.SetField<string>
      ((object)voterDO, "<Name>k__BackingField", (string)null);
  PexInvariant.SetField<string>
      ((object)voterDO, "<Address>k__BackingField", (string)null);
  PexInvariant.SetField<string>
      ((object)voterDO, "<City>k__BackingField", (string)null);
  PexInvariant.SetField<bool?>
      ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
  PexInvariant.SetField<bool?>
      ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
  PexInvariant.CheckInvariant((object)voterDO);
  this.UpdateValues(municipalityDO, (IDataObject)voterDO);
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.Pex.Framework.Explorable;System.Data.Linq;Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void UpdateValuesThrowsContractException440()
{
    try
    {
      MunicipalityDO municipalityDO;
      VoterDO voterDO;
      municipalityDO =
        new MunicipalityDO(default(uint?), (string)null, (string)null);
      voterDO = PexInvariant.CreateInstance<VoterDO>();
      PexInvariant.SetField<EntityRef<PollingStationDO>>
          ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
      PexInvariant.SetField<uint?>
          ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
      PexInvariant.SetField<uint?>
          ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
      PexInvariant.SetField<string>
          ((object)voterDO, "<Name>k__BackingField", (string)null);
      PexInvariant.SetField<string>
          ((object)voterDO, "<Address>k__BackingField", (string)null);
      PexInvariant.SetField<string>
          ((object)voterDO, "<City>k__BackingField", (string)null);
      PexInvariant.SetField<bool?>
          ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
      PexInvariant.SetField<bool?>
          ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
      PexInvariant.CheckInvariant((object)voterDO);
      this.UpdateValues(municipalityDO, (IDataObject)voterDO);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<exceptionChain><exception typeDisplayName="ContractException" source="DigitalVoterList"><message><![CDATA[Precondition failed: dummy.GetType() == this.GetType()]]></message>
<type spec="Class"><definition assemblyName="DigitalVoterList" name="ContractException" token="200004e"><declaringType assemblyName="DigitalVoterList" name="__ContractsRuntime" token="2000035" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at MunicipalityDO.UpdateValues(IDataObject) in C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\IDataObjectContracts.cs(33)" method="MunicipalityDO.UpdateValues(IDataObject)" offset="65" file="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\IDataObjectContracts.cs" line="33"><method assemblyName="DigitalVoterList" name="UpdateValues" token="60000d8"><declaringType assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        void IDataObject.UpdateValues(IDataObject dummy)
        {
            Contract.Requires(dummy != null);]]></beforeSource>
<source><![CDATA[            Contract.Requires(dummy.GetType() == this.GetType());]]></source>
<afterSource><![CDATA[        }

        #endregion]]></afterSource>
</frame>
<frame value="  at MunicipalityDOTest.UpdateValues(MunicipalityDO, IDataObject)" method="MunicipalityDOTest.UpdateValues(MunicipalityDO, IDataObject)" offset="2"><method assemblyName="DigitalVoterList.Tests" name="UpdateValues" token="6000004"><declaringType assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="MunicipalityDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="2"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathAssumption><![CDATA[VoterDO s0 = new;
return dummy == (IDataObject)s0 && 
       (dummy == (IDataObject)null || dummy is MunicipalityDO ? dummy : (IDataObject)null) == (IDataObject)null && methodof(target.UpdateValues) == methodof(MunicipalityDO.UpdateValues) && 
                                                                                                                   ((object)dummy).GetType() == ((object)target).GetType() && dummy != (IDataObject)null && target != (MunicipalityDO)null && dummy.GetType() != typeof(PollingStationDO);
]]></pathAssumption>
<pathCondition><![CDATA[VoterDO s0 = new;
return <PrimaryKey>k__BackingField_nullu.value < 101000001u && <PrimaryKey>k__BackingField_nullu.hasValue == false && ((object)s0).GetType() != ((object)target).GetType();
]]></pathCondition>
</generatedTest>
<test name="UpdateValues" state="success" duration="0,01"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<explorable title="guessed how to create DigitalVoterList.DBComm.DO.LogDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="LogDO" token="2000030" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\LogDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.LogDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<typeDefinition assemblyName="DigitalVoterList.Tests" name="LogDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="LogDO" token="2000030" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.LogDO instances</summary>
]]></doc>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="LogDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="dummy_iDataObject" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="LogDO" token="2000030" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DigitalVoterList.Tests" name="LogDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="LogDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="dummy_iDataObject" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="LogDO" token="2000030" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="UpdateValues" state="success" duration="0,01"/>
<test name="UpdateValues" state="success" duration="0,02"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<coverage domain="usercodeundertest" unit="block" covered="31" total="37" coveredRatio="0.83783783783783783"/>
<sourceCoverage xml="cov\e432\cov.xml" html="cov\e432\cov.html"/>
<explorable title="could not create an instance of DigitalVoterList.DBComm.DO.LogDO" kind="unexplorableclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="LogDO" token="2000030" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
</explorable>
<result name="UpdateValues(MunicipalityDO, IDataObject)" state="success" duration="1.47432659519498"/>
<duration start="2011-12-07 12:30:55Z" end="2011-12-07 12:30:57Z" seconds="1.4664026"/>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="54" total="54" coveredRatio="1"/>
<sourceCoverage xml="cov\t987\cov.xml" html="cov\t987\cov.html"/>
<duration start="2011-12-07 12:30:42Z" end="2011-12-07 12:30:57Z" seconds="15.2082897"/>
</fixture>
<coverage domain="usercodeundertest" unit="block" covered="54" total="54" coveredRatio="1"/>
<sourceCoverage xml="cov\a21944688\cov.xml" html="cov\a21944688\cov.html"/>
<duration start="2011-12-07 12:30:42Z" end="2011-12-07 12:30:57Z" seconds="15.338892"/>
<frameTreeRef exceptionCount="1"/>
</assembly>
<duration start="2011-12-07 12:30:41Z" end="2011-12-07 12:30:57Z" seconds="15.8749227"/>
<background/>
</pex>
