<?xml version="1.0" encoding="utf-8"?>
<pex id="{6d7cec16-5b3b-4288-9406-85c471c17f4d}" creationTime="2011-12-07 12:32:40Z" configuration="DigitalVoterList.DBComm.DO!\VoterDO!\*" created="2011-12-07 12:32:40Z" pexVersion="0.94.51006.1" xml="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\reports\111207.133240.12504.pex\report.per" html="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\reports\111207.133240.12504.pex\report.html"><environment commandLine="&quot;C:\Program Files (x86)\Microsoft Pex\bin\Microsoft.Pex.x86.exe&quot; &quot;C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe&quot; /namespacefilter:DigitalVoterList.DBComm.DO! /typefilter:VoterDO! /assemblyresolutiondirectories:&quot;c:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\PublicAssemblies&quot; /explorationreflectionmode:LazyWizard /instrumentedassemblies:Microsoft.VisualBasic.PowerPacks.Vs;MySql.Data;System.Deployment;System.Drawing;System.Windows.Forms /targetx86 /x64failsilently /clrversion:v4.0.30319 /donotopenreport /reportlevel:Xml /reportrootpath:&quot;C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\reports&quot; /testassemblyname:DigitalVoterList.Tests /testframework:VisualStudioUnitTest /testlanguage:cs /testprojectfile:&quot;C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DigitalVoterList.csproj&quot; /testprojectnotupdate /testprojectskip" machineName="JMEI-THINK" osVersion="Microsoft Windows NT 6.1.7601 Service Pack 1" processorCount="4" clrVersion="4.0.30319.239" bitness="x86" user="jmei"><envVars><envVar name="HOMEPATH" value="\Users\jmei"/>
<envVar name="PUBLIC" value="C:\Users\Public"/>
<envVar name="COMPUTERNAME" value="JMEI-THINK"/>
<envVar name="CLRMONITOR_INJECT_TYPES" value=""/>
<envVar name="COMPLUS_ProfAPI_ProfilerCompatibilitySetting" value="EnableV2Profiler"/>
<envVar name="CommonProgramFiles(x86)" value="C:\Program Files (x86)\Common Files"/>
<envVar name="configsetroot" value="C:\Windows\ConfigSetRoot"/>
<envVar name="PROCESSOR_IDENTIFIER" value="Intel64 Family 6 Model 42 Stepping 7, GenuineIntel"/>
<envVar name="APPDATA" value="C:\Users\jmei\AppData\Roaming"/>
<envVar name="TFS_DIR" value="C:\Program Files\ThinkVantage Fingerprint Software\"/>
<envVar name="TMP" value="C:\Users\jmei\AppData\Local\Temp"/>
<envVar name="MOZ_PLUGIN_PATH" value="C:\Program Files (x86)\Foxit Software\Foxit Reader\plugins\"/>
<envVar name="SWSHARE" value="C:\SWSHARE"/>
<envVar name="PROCESSOR_REVISION" value="2a07"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES_EXCLUSIONS" value=""/>
<envVar name="PATHEXT" value=".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.RB;.RBW"/>
<envVar name="TRACKER_ATTACHED" value="1"/>
<envVar name="COMPLUS_DEFAULTVERSION" value="v4.0.30319"/>
<envVar name="CLRMONITOR_CLSID" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="COMMPath" value="C:\Program Files\Lenovo\Communications Utility"/>
<envVar name="TEMP" value="C:\Users\jmei\AppData\Local\Temp"/>
<envVar name="LOCALAPPDATA" value="C:\Users\jmei\AppData\Local"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES_EXCLUSIONS" value=""/>
<envVar name="CLRMONITOR_PROTECT_TYPES" value="Microsoft.FSharp.Text.Printf,Microsoft.FSharp.Text.PrintfImpl"/>
<envVar name="READYAPPS" value="C:\SWTOOLS\ReadyApps"/>
<envVar name="CLRMONITOR_INJECT_ASSEMBLIES" value=""/>
<envVar name="ProgramData" value="C:\ProgramData"/>
<envVar name="CLRMONITOR_INITIALIZED" value="0x10"/>
<envVar name="USERDOMAIN" value="jmei-THINK"/>
<envVar name="windir" value="C:\Windows"/>
<envVar name="CLRMONITOR_ERASE_FINALIZER_TYPES" value=""/>
<envVar name="CLRMONITOR_INJECT_NAMESPACES" value=""/>
<envVar name="NUMBER_OF_PROCESSORS" value="4"/>
<envVar name="Path" value="C:\Ruby193\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;C:\Program Files\Broadcom\WHL\;C:\Program Files\Broadcom\WHL\syswow64;C:\Program Files\Broadcom\WHL\SysWow64\;C:\Program Files\Broadcom\WHL\SysWow64\syswow64;C:\Program Files (x86)\Common Files\Lenovo;C:\Program Files (x86)\Lenovo\Access Connections\;C:\SWTOOLS\ReadyApps;c:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\;c:\Program Files\Microsoft SQL Server\100\Tools\Binn\;c:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Intel\Services\IPT\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\"/>
<envVar name="ALCKPath" value="C:\Program Files\Lenovo\AutoLock"/>
<envVar name="TVT" value="C:\Program Files (x86)\Lenovo"/>
<envVar name="pex_wait_for_server_channel" value="1"/>
<envVar name="ProgramFiles(x86)" value="C:\Program Files (x86)"/>
<envVar name="PROCESSOR_LEVEL" value="6"/>
<envVar name="PROCESSOR_ARCHITEW6432" value="AMD64"/>
<envVar name="CommonProgramFiles" value="C:\Program Files (x86)\Common Files"/>
<envVar name="CLRMONITOR_FLAGS" value=""/>
<envVar name="pex_instrumentation" value="1"/>
<envVar name="SESSIONNAME" value="Console"/>
<envVar name="asl.log" value="Destination=file"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES" value="System.Array,System.Array+ArrayEnumerator,System.Array+FunctorComparer`1,System.Array+SZArrayEnumerator,System.Array+SorterGenericArray,System.Array+SorterObjectArray,System.Boolean,System.Byte,System.Char,System.CharEnumerator,System.ComponentModel.Component,System.ComponentModel.Container,System.ComponentModel.Container+Site,System.Convert,System.Currency,System.DateTime,System.Decimal,System.Diagnostics.Assert,System.Double,System.Globalization.CharUnicodeInfo,System.Globalization.CultureTableRecord,System.Globalization.TextInfo,System.Guid,System.IO.MemoryStream,System.IO.Stream,System.IO.StreamReader,System.IO.StreamWriter,System.IO.StringReader,System.IO.StringWriter,System.Int16,System.Int32,System.Int64,System.Lazy`1,System.Lazy`1+Boxed,System.Lazy`1+LazyInternalExceptionHolder,System.Math,System.Nullable,System.Nullable`1,System.OrdinalComparer,System.SByte,System.SZArrayHelper,System.SZArrayHelper+SZGenericArrayEnumerator`1,System.Single,System.String,System.StringComparer,System.Text.ASCIIEncoding,System.Text.DecoderNLS,System.Text.Encoding,System.Text.UTF8Encoding,System.TimeSpan,System.Tuple,System.Tuple`1,System.Tuple`2,System.Tuple`3,System.Tuple`4,System.Tuple`5,System.Tuple`6,System.Tuple`7,System.Tuple`8,System.UInt16,System.UInt32,System.UInt64,System.Xml.XmlTextWriter,System.Xml.XmlTextWriter+Namespace,System.Xml.XmlTextWriter+NamespaceState,System.Xml.XmlTextWriter+SpecialAttr,System.Xml.XmlTextWriter+State,System.Xml.XmlTextWriter+TagInfo,System.Xml.XmlTextWriter+Token,System.Xml.XmlWriter,__Box`1,__SzArrayHelper`1"/>
<envVar name="PSModulePath" value="C:\Windows\system32\WindowsPowerShell\v1.0\Modules\"/>
<envVar name="ACPath" value="C:\Program Files (x86)\Lenovo\Access Connections\"/>
<envVar name="ProgramW6432" value="C:\Program Files"/>
<envVar name="ProgramFiles" value="C:\Program Files (x86)"/>
<envVar name="CLRMONITOR_ERASE_CCTOR_TYPES" value=""/>
<envVar name="FP_NO_HOST_CHECK" value="NO"/>
<envVar name="pex_clientid" value="pex11860_1"/>
<envVar name="CodedUITestCurrentBrowser" value="IE"/>
<envVar name="SystemRoot" value="C:\Windows"/>
<envVar name="CLRMONITOR_INSTRUMENT_ATTRIBUTE" value="Microsoft.Moles.Framework.Moles.MolesInstrumentAttribute"/>
<envVar name="CLRMONITOR_PROTECT_ALL_CCTORS" value="1"/>
<envVar name="CommonProgramW6432" value="C:\Program Files\Common Files"/>
<envVar name="LOGONSERVER" value="\\JMEI-THINK"/>
<envVar name="FugueRepository" value="C:\PROGRAM FILES (X86)\MICROSOFT VISUAL STUDIO 10.0\TEAM TOOLS\STATIC ANALYSIS TOOLS\FxCop\Repository"/>
<envVar name="USERPROFILE" value="C:\Users\jmei"/>
<envVar name="VisualStudioDir" value="C:\Users\jmei\Documents\Visual Studio 2010"/>
<envVar name="CLRMONITOR_SUBSTITUTIONS" value="C:\Windows\assembly\GAC_MSIL\Microsoft.ExtendedReflection\0.94.0.0__31bf3856ad364e35\Microsoft.ExtendedReflection.dll"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES_EXCLUSIONS" value=""/>
<envVar name="CodeContractsInstallDir" value="C:\Program Files (x86)\Microsoft\Contracts\"/>
<envVar name="HOMEDRIVE" value="C:"/>
<envVar name="TVTCOMMON" value="C:\Program Files (x86)\Common Files\Lenovo"/>
<envVar name="ComSpec" value="C:\Windows\system32\cmd.exe"/>
<envVar name="VS100COMNTOOLS" value="C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\Tools\"/>
<envVar name="USERNAME" value="jmei"/>
<envVar name="COR_PROFILER" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="PROCESSOR_ARCHITECTURE" value="x86"/>
<envVar name="pex_server_channel" value="pex11860"/>
<envVar name="OS" value="Windows_NT"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES" value="System.Collections,System.Collections.Generic,System.Collections.ObjectModel,System.Collections.Specialized,System.Diagnostics.Contracts"/>
<envVar name="SystemDrive" value="C:"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES" value="DigitalVoterList,DigitalVoterList.Tests,FSharp.Core,FSharp.PowerPack,Microsoft.Contracts,Microsoft.VisualBasic,Microsoft.VisualBasic.PowerPacks.Vs,Microsoft.VisualStudio.QualityTools.UnitTestFramework,MySql.Data,System,System.Core,System.Data,System.Data.Linq,System.Deployment,System.Drawing,System.Web,System.Windows.Forms"/>
<envVar name="ALLUSERSPROFILE" value="C:\ProgramData"/>
</envVars>
</environment>
<settings/>
<reflection/>
<assembly name="DigitalVoterList" version="1.0.0.0" fileVersion="1.0.0.0" fullName="DigitalVoterList, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe" fileName="DigitalVoterList.exe"><settings testFramework="VisualStudioUnitTest" testLanguage="cs"/>
<dump category="Tests" title="Build default assembly set for new project"><dtTree><dtTreeNode text="Build default assembly set for new project"><dtTextNode><rstring contentMode="memory"><![CDATA[visibility: exported and assembly(DigitalVoterList)
Processing 54 types
Processing DigitalVoterList
Scanning assembly references in DigitalVoterList
Applying template AssemblyInfo to DigitalVoterList
generating method bodies
flushing generated code
updating assembly references
]]></rstring>
</dtTextNode>
</dtTreeNode>
</dtTree>
</dump>
<fixture name="VoterDOTest" type="DigitalVoterList.DBComm.DO.VoterDOTest" typeName="VoterDOTest" token="2000002" href="fix\DigitalVoterList.Tests.988.html"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
<settings typeUnderTest="DigitalVoterList.DBComm.DO.VoterDO"/>
<exploration shortName="Constructor(UInt32, UInt32, String, String, String, Boolean, Boolean)" fullName="DigitalVoterList.DBComm.DO.VoterDOTest.Constructor(UInt32, UInt32, String, String, String, Boolean, Boolean)" isDynamicCode="true"><method><definition assemblyName="DigitalVoterList.Tests" name="Constructor" token="6000001"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="pollingStationId" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</type>
</parameter>
<parameter name="cpr" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</type>
</parameter>
<parameter name="name" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="address" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="cardPrinted" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="voted" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="DigitalVoterList" name=".ctor" token="600001e"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="pollingStationId" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</type>
</parameter>
<parameter name="cpr" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</type>
</parameter>
<parameter name="name" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="address" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="cardPrinted" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="voted" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="DigitalVoterList" name=".ctor" token="600001e"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="pollingStationId" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</type>
</parameter>
<parameter name="cpr" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</type>
</parameter>
<parameter name="name" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="address" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="cardPrinted" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="voted" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</memberUnderTest>
<log level="message" time="2011-12-07 12:32:40Z" category="progress" message="    0 runs"/>
<log level="message" time="2011-12-07 12:32:40Z" category="symbols" message="could not load symbols for C:\Windows\assembly\GAC_MSIL\Microsoft.Pex\0.94.0.0__31bf3856ad364e35\Microsoft.Pex.exe"/>
<log level="message" time="2011-12-07 12:32:40Z" category="symbols" message="search path: ;"/>
<test name="Constructor" state="success" duration="0,05"/>
<generatedTest id="0ee282fa-8006-4f03-a00a-be02741df4c3" index="1" run="1" exceptionState="expected" status="expectedexception" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="ConstructorThrowsContractException656"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="2" dtot="17" acov="2" atot="17"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="pollingStationId">0</value>
<value name="cpr">0</value>
<value name="name">null</value>
<value name="address">null</value>
<value name="city">null</value>
<value name="cardPrinted">false</value>
<value name="voted">false</value>
<code><![CDATA[try
{
  VoterDO voterDO;
  voterDO = this.Constructor
                (0u, 0u, (string)null, (string)null, (string)null, false, false);
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void ConstructorThrowsContractException656()
{
    try
    {
      VoterDO voterDO;
      voterDO = this.Constructor
                    (0u, 0u, (string)null, (string)null, (string)null, false, false);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<exceptionChain><exception typeDisplayName="ContractException" source="DigitalVoterList"><message><![CDATA[Precondition failed: cpr >= 101000001 && cpr <= 3012999999]]></message>
<type spec="Class"><definition assemblyName="DigitalVoterList" name="ContractException" token="200004e"><declaringType assemblyName="DigitalVoterList" name="__ContractsRuntime" token="2000035" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at VoterDO..ctor(UInt32, UInt32, String, String, String, Boolean, Boolean) in C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs(45)" method="VoterDO..ctor(UInt32, UInt32, String, String, String, Boolean, Boolean)" offset="34" file="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs" line="45"><method assemblyName="DigitalVoterList" name=".ctor" token="600001e"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="pollingStationId" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</type>
</parameter>
<parameter name="cpr" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</type>
</parameter>
<parameter name="name" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="address" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="cardPrinted" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="voted" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        /// </param>
        public VoterDO(uint pollingStationId, uint cpr, string name, string address, string city, bool cardPrinted, bool voted)
        {]]></beforeSource>
<source><![CDATA[            Contract.Requires(cpr >= 101000001 && cpr <= 3012999999);]]></source>
<afterSource><![CDATA[
            this.PollingStationId = pollingStationId;
            this.PrimaryKey = cpr;]]></afterSource>
</frame>
<frame value="  at VoterDOTest.Constructor(UInt32, UInt32, String, String, String, Boolean, Boolean)" method="VoterDOTest.Constructor(UInt32, UInt32, String, String, String, Boolean, Boolean)" offset="27"><method assemblyName="DigitalVoterList.Tests" name="Constructor" token="6000001"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="pollingStationId" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</type>
</parameter>
<parameter name="cpr" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</type>
</parameter>
<parameter name="name" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="address" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="cardPrinted" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<parameter name="voted" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return cpr < 101000001u;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:32:40Z" category="coverage" message="coverage increased from 0 to 2 blocks (+2) after flipping DigitalVoterList.DBComm.DO.VoterDO..ctor at 0x0006"/>
<test name="Constructor" state="success" duration="0,07"/>
<generatedTest id="ef90e517-db6c-4edb-925d-f31569aabb32" index="2" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="Constructor324"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="47" dtot="37" acov="49" atot="54"/>
<rcov name="asserts" dcov="1" dtot="1" acov="1" atot="1"/>
<value name="pollingStationId">0</value>
<value name="cpr">101008193</value>
<value name="name">null</value>
<value name="address">null</value>
<value name="city">null</value>
<value name="cardPrinted">false</value>
<value name="voted">false</value>
<value name="result">new VoterDO{PrimaryKey=101008193,PollingStationId=0,Name=null,Address=null,City=null,CardPrinted=false,Voted=false,_pollingStation=new EntityRef{}}</value>
<code><![CDATA[VoterDO voterDO;
voterDO = this.Constructor
              (0u, 101008193u, (string)null, (string)null, (string)null, false, false);
Assert.IsNotNull((object)voterDO);
Assert.IsNotNull((object)(voterDO.PrimaryKey));
Assert.AreEqual<uint>(101008193u, (uint)((object)(voterDO.PrimaryKey)));
Assert.IsNotNull((object)(voterDO.PollingStationId));
Assert.AreEqual<uint>(0u, (uint)((object)(voterDO.PollingStationId)));
Assert.AreEqual<string>((string)null, voterDO.Name);
Assert.AreEqual<string>((string)null, voterDO.Address);
Assert.AreEqual<string>((string)null, voterDO.City);
Assert.IsNotNull((object)(voterDO.CardPrinted));
Assert.AreEqual<bool>(false, (bool)((object)(voterDO.CardPrinted)));
Assert.IsNotNull((object)(voterDO.Voted));
Assert.AreEqual<bool>(false, (bool)((object)(voterDO.Voted)));
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
public void Constructor324()
{
    VoterDO voterDO;
    voterDO = this.Constructor
                  (0u, 101008193u, (string)null, (string)null, (string)null, false, false);
    Assert.IsNotNull((object)voterDO);
    Assert.IsNotNull((object)(voterDO.PrimaryKey));
    Assert.AreEqual<uint>(101008193u, (uint)((object)(voterDO.PrimaryKey)));
    Assert.IsNotNull((object)(voterDO.PollingStationId));
    Assert.AreEqual<uint>(0u, (uint)((object)(voterDO.PollingStationId)));
    Assert.AreEqual<string>((string)null, voterDO.Name);
    Assert.AreEqual<string>((string)null, voterDO.Address);
    Assert.AreEqual<string>((string)null, voterDO.City);
    Assert.IsNotNull((object)(voterDO.CardPrinted));
    Assert.AreEqual<bool>(false, (bool)((object)(voterDO.CardPrinted)));
    Assert.IsNotNull((object)(voterDO.Voted));
    Assert.AreEqual<bool>(false, (bool)((object)(voterDO.Voted)));
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[return 101000000u < cpr && cpr < 3013000000u;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:32:41Z" category="coverage" message="coverage increased from 2 to 49 blocks (+47) after flipping DigitalVoterList.DBComm.DO.VoterDO..ctor at 0x0006"/>
<test name="Constructor" state="success" duration="0,00"/>
<coverage domain="usercodeundertest" unit="block" covered="49" total="54" coveredRatio="0.90740740740740744"/>
<sourceCoverage xml="cov\e329\cov.xml" html="cov\e329\cov.html"/>
<result name="Constructor(UInt32, UInt32, String, String, String, Boolean, Boolean)" state="success" duration="0,43"/>
<duration start="2011-12-07 12:32:40Z" end="2011-12-07 12:32:41Z" seconds="0,44"/>
</exploration>
<exploration shortName="Constructor01()" fullName="DigitalVoterList.DBComm.DO.VoterDOTest.Constructor01()" isDynamicCode="true"><method><definition assemblyName="DigitalVoterList.Tests" name="Constructor01" token="6000002"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="DigitalVoterList" name=".ctor" token="600001f"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="DigitalVoterList" name=".ctor" token="600001f"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</memberUnderTest>
<test name="Constructor01" state="success" duration="0,01"/>
<generatedTest id="4535c03c-4b3b-4095-882a-b8c5bfd55ad2" index="1" run="1" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="Constructor0179"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="17" dtot="26" acov="17" atot="26"/>
<rcov name="asserts" dcov="1" dtot="1" acov="1" atot="1"/>
<value name="result">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=null,Voted=null,_pollingStation=new EntityRef{}}</value>
<code><![CDATA[VoterDO voterDO;
voterDO = this.Constructor01();
Assert.IsNotNull((object)voterDO);
Assert.IsNull((object)(voterDO.PrimaryKey));
Assert.IsNull((object)(voterDO.PollingStationId));
Assert.AreEqual<string>((string)null, voterDO.Name);
Assert.AreEqual<string>((string)null, voterDO.Address);
Assert.AreEqual<string>((string)null, voterDO.City);
Assert.IsNull((object)(voterDO.CardPrinted));
Assert.IsNull((object)(voterDO.Voted));
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
public void Constructor0179()
{
    VoterDO voterDO;
    voterDO = this.Constructor01();
    Assert.IsNotNull((object)voterDO);
    Assert.IsNull((object)(voterDO.PrimaryKey));
    Assert.IsNull((object)(voterDO.PollingStationId));
    Assert.AreEqual<string>((string)null, voterDO.Name);
    Assert.AreEqual<string>((string)null, voterDO.Address);
    Assert.AreEqual<string>((string)null, voterDO.City);
    Assert.IsNull((object)(voterDO.CardPrinted));
    Assert.IsNull((object)(voterDO.Voted));
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
</generatedTest>
<log level="message" time="2011-12-07 12:32:41Z" category="coverage" message="coverage increased from 0 to 17 blocks (+17) after flipping &lt;unknown method&gt; at 0x&lt;unknown offset&gt;"/>
<coverage domain="usercodeundertest" unit="block" covered="17" total="26" coveredRatio="0.65384615384615385"/>
<sourceCoverage xml="cov\e355\cov.xml" html="cov\e355\cov.html"/>
<result name="Constructor01()" state="success" duration="0,04"/>
<duration start="2011-12-07 12:32:41Z" end="2011-12-07 12:32:41Z" seconds="0,05"/>
</exploration>
<exploration shortName="CprGet(VoterDO)" fullName="DigitalVoterList.DBComm.DO.VoterDOTest.CprGet(VoterDO)" isDynamicCode="true"><method><definition assemblyName="DigitalVoterList.Tests" name="CprGet" token="6000005"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<target><propertyDefinition assemblyName="DigitalVoterList" name="Cpr" token="17000004"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</propertyDefinition>
</target>
<memberUnderTest assemblyName="DigitalVoterList" name="Cpr" token="17000004"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</memberUnderTest>
<explorable title="guessed how to create DigitalVoterList.DBComm.DO.VoterDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\VoterDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.VoterDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<typeDefinition assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.VoterDO instances</summary>
]]></doc>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<reference name="Microsoft.Pex.Framework"/>
<methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="_pollingStation_entityRef" position="0"><type spec="ValueType"><definition assemblyName="System.Data.Linq" valueType="true" name="EntityRef`1" token="200014e" namespace="System.Data.Linq"><genericParameter value="TEntity"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PrimaryKey&gt;k__BackingField_nullu" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PollingStationId&gt;k__BackingField_nullu1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Name&gt;k__BackingField_s" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;Address&gt;k__BackingField_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;City&gt;k__BackingField_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;CardPrinted&gt;k__BackingField_nullb" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Voted&gt;k__BackingField_nullb1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="_pollingStation_entityRef" position="0"><type spec="ValueType"><definition assemblyName="System.Data.Linq" valueType="true" name="EntityRef`1" token="200014e" namespace="System.Data.Linq"><genericParameter value="TEntity"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PrimaryKey&gt;k__BackingField_nullu" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PollingStationId&gt;k__BackingField_nullu1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Name&gt;k__BackingField_s" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;Address&gt;k__BackingField_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;City&gt;k__BackingField_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;CardPrinted&gt;k__BackingField_nullb" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Voted&gt;k__BackingField_nullb1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="CprGet" state="success" duration="0,01"/>
<test name="CprGet" state="success" duration="0,03"/>
<generatedTest id="953a598d-d068-4030-9c00-7c548011772b" index="1" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="CprGet796"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="4" dtot="23" acov="4" atot="23"/>
<rcov name="asserts" dcov="1" dtot="1" acov="1" atot="1"/>
<value name="target">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<value name="result(target)">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<value name="result">null</value>
<code><![CDATA[VoterDO voterDO;
uint? nullu;
voterDO = PexInvariant.CreateInstance<VoterDO>();
PexInvariant.SetField<EntityRef<PollingStationDO>>
    ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
PexInvariant.SetField<uint?>
    ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
PexInvariant.SetField<uint?>
    ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
PexInvariant.SetField<string>
    ((object)voterDO, "<Name>k__BackingField", (string)null);
PexInvariant.SetField<string>
    ((object)voterDO, "<Address>k__BackingField", (string)null);
PexInvariant.SetField<string>
    ((object)voterDO, "<City>k__BackingField", (string)null);
PexInvariant.SetField<bool?>
    ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
PexInvariant.SetField<bool?>
    ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
PexInvariant.CheckInvariant((object)voterDO);
nullu = this.CprGet(voterDO);
Assert.IsNull((object)nullu);
Assert.IsNotNull((object)voterDO);
Assert.IsNull((object)(voterDO.PrimaryKey));
Assert.IsNull((object)(voterDO.PollingStationId));
Assert.AreEqual<string>((string)null, voterDO.Name);
Assert.AreEqual<string>((string)null, voterDO.Address);
Assert.AreEqual<string>((string)null, voterDO.City);
Assert.IsNotNull((object)(voterDO.CardPrinted));
Assert.AreEqual<bool>(true, (bool)((object)(voterDO.CardPrinted)));
Assert.IsNotNull((object)(voterDO.Voted));
Assert.AreEqual<bool>(true, (bool)((object)(voterDO.Voted)));
]]></code>
<methodCode imports="Microsoft.Pex.Framework.Explorable;System.Data.Linq;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
public void CprGet796()
{
    VoterDO voterDO;
    uint? nullu;
    voterDO = PexInvariant.CreateInstance<VoterDO>();
    PexInvariant.SetField<EntityRef<PollingStationDO>>
        ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
    PexInvariant.SetField<uint?>
        ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
    PexInvariant.SetField<uint?>
        ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
    PexInvariant.SetField<string>
        ((object)voterDO, "<Name>k__BackingField", (string)null);
    PexInvariant.SetField<string>
        ((object)voterDO, "<Address>k__BackingField", (string)null);
    PexInvariant.SetField<string>
        ((object)voterDO, "<City>k__BackingField", (string)null);
    PexInvariant.SetField<bool?>
        ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
    PexInvariant.SetField<bool?>
        ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
    PexInvariant.CheckInvariant((object)voterDO);
    nullu = this.CprGet(voterDO);
    Assert.IsNull((object)nullu);
    Assert.IsNotNull((object)voterDO);
    Assert.IsNull((object)(voterDO.PrimaryKey));
    Assert.IsNull((object)(voterDO.PollingStationId));
    Assert.AreEqual<string>((string)null, voterDO.Name);
    Assert.AreEqual<string>((string)null, voterDO.Address);
    Assert.AreEqual<string>((string)null, voterDO.City);
    Assert.IsNotNull((object)(voterDO.CardPrinted));
    Assert.AreEqual<bool>(true, (bool)((object)(voterDO.CardPrinted)));
    Assert.IsNotNull((object)(voterDO.Voted));
    Assert.AreEqual<bool>(true, (bool)((object)(voterDO.Voted)));
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[VoterDO s1 = new;
bool s0 = target == s1 ? false : target.$evaluatingInvariant$;
return <PrimaryKey>k__BackingField_nullu.value < 101000001u && target != (VoterDO)null && <PrimaryKey>k__BackingField_nullu.hasValue == false && s0 == false;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:32:41Z" category="coverage" message="coverage increased from 0 to 4 blocks (+4) after flipping DigitalVoterList.DBComm.DO.VoterDO.$InvariantMethod$ at 0x0026"/>
<test name="CprGet" state="success" duration="0,00"/>
<test name="CprGet" state="success" duration="0,00"/>
<coverage domain="usercodeundertest" unit="block" covered="4" total="23" coveredRatio="0.17391304347826087"/>
<sourceCoverage xml="cov\e357\cov.xml" html="cov\e357\cov.html"/>
<result name="CprGet(VoterDO)" state="success" duration="0,17"/>
<duration start="2011-12-07 12:32:41Z" end="2011-12-07 12:32:41Z" seconds="0,17"/>
</exploration>
<exploration shortName="CprSet(VoterDO, Nullable`1&lt;UInt32&gt;)" fullName="DigitalVoterList.DBComm.DO.VoterDOTest.CprSet(VoterDO, Nullable`1&lt;UInt32&gt;)" isDynamicCode="true"><method><definition assemblyName="DigitalVoterList.Tests" name="CprSet" token="6000008"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="value" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
</definition>
</method>
<target><propertyDefinition assemblyName="DigitalVoterList" name="Cpr" token="17000004"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</propertyDefinition>
</target>
<memberUnderTest assemblyName="DigitalVoterList" name="Cpr" token="17000004"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</memberUnderTest>
<explorable title="guessed how to create DigitalVoterList.DBComm.DO.VoterDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\VoterDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.VoterDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<typeDefinition assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.VoterDO instances</summary>
]]></doc>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<reference name="Microsoft.Pex.Framework"/>
<methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="_pollingStation_entityRef" position="0"><type spec="ValueType"><definition assemblyName="System.Data.Linq" valueType="true" name="EntityRef`1" token="200014e" namespace="System.Data.Linq"><genericParameter value="TEntity"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PrimaryKey&gt;k__BackingField_nullu" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PollingStationId&gt;k__BackingField_nullu1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Name&gt;k__BackingField_s" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;Address&gt;k__BackingField_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;City&gt;k__BackingField_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;CardPrinted&gt;k__BackingField_nullb" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Voted&gt;k__BackingField_nullb1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="_pollingStation_entityRef" position="0"><type spec="ValueType"><definition assemblyName="System.Data.Linq" valueType="true" name="EntityRef`1" token="200014e" namespace="System.Data.Linq"><genericParameter value="TEntity"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PrimaryKey&gt;k__BackingField_nullu" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PollingStationId&gt;k__BackingField_nullu1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Name&gt;k__BackingField_s" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;Address&gt;k__BackingField_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;City&gt;k__BackingField_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;CardPrinted&gt;k__BackingField_nullb" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Voted&gt;k__BackingField_nullb1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="CprSet" state="success" duration="0,00"/>
<test name="CprSet" state="success" duration="0,01"/>
<generatedTest id="7f893635-b804-454c-9971-519ad5797aad" index="1" run="2" exceptionState="expected" status="expectedexception" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="CprSetThrowsContractException65"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="5" dtot="39" acov="5" atot="39"/>
<rcov name="asserts" dcov="1" dtot="1" acov="1" atot="1"/>
<value name="target">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<value name="value">null</value>
<code><![CDATA[try
{
  VoterDO voterDO;
  voterDO = PexInvariant.CreateInstance<VoterDO>();
  PexInvariant.SetField<EntityRef<PollingStationDO>>
      ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
  PexInvariant.SetField<uint?>
      ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
  PexInvariant.SetField<uint?>
      ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
  PexInvariant.SetField<string>
      ((object)voterDO, "<Name>k__BackingField", (string)null);
  PexInvariant.SetField<string>
      ((object)voterDO, "<Address>k__BackingField", (string)null);
  PexInvariant.SetField<string>
      ((object)voterDO, "<City>k__BackingField", (string)null);
  PexInvariant.SetField<bool?>
      ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
  PexInvariant.SetField<bool?>
      ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
  PexInvariant.CheckInvariant((object)voterDO);
  this.CprSet(voterDO, default(uint?));
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.Pex.Framework.Explorable;System.Data.Linq;Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void CprSetThrowsContractException65()
{
    try
    {
      VoterDO voterDO;
      voterDO = PexInvariant.CreateInstance<VoterDO>();
      PexInvariant.SetField<EntityRef<PollingStationDO>>
          ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
      PexInvariant.SetField<uint?>
          ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
      PexInvariant.SetField<uint?>
          ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
      PexInvariant.SetField<string>
          ((object)voterDO, "<Name>k__BackingField", (string)null);
      PexInvariant.SetField<string>
          ((object)voterDO, "<Address>k__BackingField", (string)null);
      PexInvariant.SetField<string>
          ((object)voterDO, "<City>k__BackingField", (string)null);
      PexInvariant.SetField<bool?>
          ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
      PexInvariant.SetField<bool?>
          ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
      PexInvariant.CheckInvariant((object)voterDO);
      this.CprSet(voterDO, default(uint?));
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<exceptionChain><exception typeDisplayName="ContractException" source="DigitalVoterList"><message><![CDATA[Precondition failed: value >= 101000001 && value <= 3012999999]]></message>
<type spec="Class"><definition assemblyName="DigitalVoterList" name="ContractException" token="200004e"><declaringType assemblyName="DigitalVoterList" name="__ContractsRuntime" token="2000035" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at VoterDO.set_Cpr(Nullable`1&lt;UInt32&gt;) in C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs(83)" method="VoterDO.set_Cpr(Nullable`1&lt;UInt32&gt;)" offset="104" file="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs" line="83"><method assemblyName="DigitalVoterList" name="set_Cpr" token="6000023"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="value" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
            set
            {]]></beforeSource>
<source><![CDATA[                Contract.Requires(value >= 101000001 && value <= 3012999999);]]></source>
<afterSource><![CDATA[
                PrimaryKey = value;
            }]]></afterSource>
</frame>
<frame value="  at VoterDOTest.CprSet(VoterDO, Nullable`1&lt;UInt32&gt;)" method="VoterDOTest.CprSet(VoterDO, Nullable`1&lt;UInt32&gt;)" offset="2"><method assemblyName="DigitalVoterList.Tests" name="CprSet" token="6000008"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="value" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return <PrimaryKey>k__BackingField_nullu.value < 101000001u && value.value < 101000001u && <PrimaryKey>k__BackingField_nullu.hasValue == false;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:32:41Z" category="coverage" message="coverage increased from 0 to 5 blocks (+5) after flipping DigitalVoterList.DBComm.DO.VoterDO.$InvariantMethod$ at 0x0026"/>
<test name="CprSet" state="success" duration="0,00"/>
<generatedTest id="828957a2-ca04-4304-b7bb-97208d3c94e5" index="2" run="3" exceptionState="expected" status="expectedexception" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="CprSetThrowsContractException204"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="2" dtot="0" acov="7" atot="39"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="1"/>
<value name="target">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<value name="value">null</value>
<code><![CDATA[try
{
  VoterDO voterDO;
  voterDO = PexInvariant.CreateInstance<VoterDO>();
  PexInvariant.SetField<EntityRef<PollingStationDO>>
      ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
  PexInvariant.SetField<uint?>
      ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
  PexInvariant.SetField<uint?>
      ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
  PexInvariant.SetField<string>
      ((object)voterDO, "<Name>k__BackingField", (string)null);
  PexInvariant.SetField<string>
      ((object)voterDO, "<Address>k__BackingField", (string)null);
  PexInvariant.SetField<string>
      ((object)voterDO, "<City>k__BackingField", (string)null);
  PexInvariant.SetField<bool?>
      ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
  PexInvariant.SetField<bool?>
      ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
  PexInvariant.CheckInvariant((object)voterDO);
  this.CprSet(voterDO, default(uint?));
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.Pex.Framework.Explorable;System.Data.Linq;Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void CprSetThrowsContractException204()
{
    try
    {
      VoterDO voterDO;
      voterDO = PexInvariant.CreateInstance<VoterDO>();
      PexInvariant.SetField<EntityRef<PollingStationDO>>
          ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
      PexInvariant.SetField<uint?>
          ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
      PexInvariant.SetField<uint?>
          ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
      PexInvariant.SetField<string>
          ((object)voterDO, "<Name>k__BackingField", (string)null);
      PexInvariant.SetField<string>
          ((object)voterDO, "<Address>k__BackingField", (string)null);
      PexInvariant.SetField<string>
          ((object)voterDO, "<City>k__BackingField", (string)null);
      PexInvariant.SetField<bool?>
          ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
      PexInvariant.SetField<bool?>
          ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
      PexInvariant.CheckInvariant((object)voterDO);
      this.CprSet(voterDO, default(uint?));
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<exceptionChain><exception typeDisplayName="ContractException" source="DigitalVoterList"><message><![CDATA[Precondition failed: value >= 101000001 && value <= 3012999999]]></message>
<type spec="Class"><definition assemblyName="DigitalVoterList" name="ContractException" token="200004e"><declaringType assemblyName="DigitalVoterList" name="__ContractsRuntime" token="2000035" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at VoterDO.set_Cpr(Nullable`1&lt;UInt32&gt;) in C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs(83)" method="VoterDO.set_Cpr(Nullable`1&lt;UInt32&gt;)" offset="104" file="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs" line="83"><method assemblyName="DigitalVoterList" name="set_Cpr" token="6000023"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="value" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
            set
            {]]></beforeSource>
<source><![CDATA[                Contract.Requires(value >= 101000001 && value <= 3012999999);]]></source>
<afterSource><![CDATA[
                PrimaryKey = value;
            }]]></afterSource>
</frame>
<frame value="  at VoterDOTest.CprSet(VoterDO, Nullable`1&lt;UInt32&gt;)" method="VoterDOTest.CprSet(VoterDO, Nullable`1&lt;UInt32&gt;)" offset="2"><method assemblyName="DigitalVoterList.Tests" name="CprSet" token="6000008"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="value" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return <PrimaryKey>k__BackingField_nullu.value < 101000001u && 101000000u < value.value && <PrimaryKey>k__BackingField_nullu.hasValue == false && value.hasValue == false;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:32:41Z" category="coverage" message="coverage increased from 5 to 7 blocks (+2) after flipping DigitalVoterList.DBComm.DO.VoterDO.set_Cpr at 0x0025"/>
<test name="CprSet" state="success" duration="0,01"/>
<generatedTest id="9e3ee814-d2bb-4d76-b49c-e78e1d864d97" index="3" run="4" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="CprSet54"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="28" dtot="2" acov="35" atot="41"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="1"/>
<value name="target">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<value name="value">537207617</value>
<value name="result(target)">new VoterDO{PrimaryKey=537207617,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<code><![CDATA[VoterDO voterDO;
voterDO = PexInvariant.CreateInstance<VoterDO>();
PexInvariant.SetField<EntityRef<PollingStationDO>>
    ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
PexInvariant.SetField<uint?>
    ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
PexInvariant.SetField<uint?>
    ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
PexInvariant.SetField<string>
    ((object)voterDO, "<Name>k__BackingField", (string)null);
PexInvariant.SetField<string>
    ((object)voterDO, "<Address>k__BackingField", (string)null);
PexInvariant.SetField<string>
    ((object)voterDO, "<City>k__BackingField", (string)null);
PexInvariant.SetField<bool?>
    ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
PexInvariant.SetField<bool?>
    ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
PexInvariant.CheckInvariant((object)voterDO);
this.CprSet(voterDO, new uint?(537207617u));
Assert.IsNotNull((object)voterDO);
Assert.IsNotNull((object)(voterDO.PrimaryKey));
Assert.AreEqual<uint>(537207617u, (uint)((object)(voterDO.PrimaryKey)));
Assert.IsNull((object)(voterDO.PollingStationId));
Assert.AreEqual<string>((string)null, voterDO.Name);
Assert.AreEqual<string>((string)null, voterDO.Address);
Assert.AreEqual<string>((string)null, voterDO.City);
Assert.IsNotNull((object)(voterDO.CardPrinted));
Assert.AreEqual<bool>(true, (bool)((object)(voterDO.CardPrinted)));
Assert.IsNotNull((object)(voterDO.Voted));
Assert.AreEqual<bool>(true, (bool)((object)(voterDO.Voted)));
]]></code>
<methodCode imports="Microsoft.Pex.Framework.Explorable;System.Data.Linq;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
public void CprSet54()
{
    VoterDO voterDO;
    voterDO = PexInvariant.CreateInstance<VoterDO>();
    PexInvariant.SetField<EntityRef<PollingStationDO>>
        ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
    PexInvariant.SetField<uint?>
        ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
    PexInvariant.SetField<uint?>
        ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
    PexInvariant.SetField<string>
        ((object)voterDO, "<Name>k__BackingField", (string)null);
    PexInvariant.SetField<string>
        ((object)voterDO, "<Address>k__BackingField", (string)null);
    PexInvariant.SetField<string>
        ((object)voterDO, "<City>k__BackingField", (string)null);
    PexInvariant.SetField<bool?>
        ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
    PexInvariant.SetField<bool?>
        ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
    PexInvariant.CheckInvariant((object)voterDO);
    this.CprSet(voterDO, new uint?(537207617u));
    Assert.IsNotNull((object)voterDO);
    Assert.IsNotNull((object)(voterDO.PrimaryKey));
    Assert.AreEqual<uint>(537207617u, (uint)((object)(voterDO.PrimaryKey)));
    Assert.IsNull((object)(voterDO.PollingStationId));
    Assert.AreEqual<string>((string)null, voterDO.Name);
    Assert.AreEqual<string>((string)null, voterDO.Address);
    Assert.AreEqual<string>((string)null, voterDO.City);
    Assert.IsNotNull((object)(voterDO.CardPrinted));
    Assert.AreEqual<bool>(true, (bool)((object)(voterDO.CardPrinted)));
    Assert.IsNotNull((object)(voterDO.Voted));
    Assert.AreEqual<bool>(true, (bool)((object)(voterDO.Voted)));
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[VoterDO s1 = new;
bool s0 = target == s1 ? false : target.$evaluatingInvariant$;
return <PrimaryKey>k__BackingField_nullu.value < 101000001u && 101000000u < value.value && value.hasValue != false && value.value < 3013000000u && 
                                                                                                                      target != (VoterDO)null && <PrimaryKey>k__BackingField_nullu.hasValue == false && methodof(target.$InvariantMethod$) == methodof(VoterDO.$InvariantMethod$) && s0 == false;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:32:41Z" category="coverage" message="coverage increased from 7 to 35 blocks (+28) after flipping DigitalVoterList.DBComm.DO.VoterDO.set_Cpr at 0x0037"/>
<test name="CprSet" state="success" duration="0,00"/>
<test name="CprSet" state="success" duration="0,00"/>
<generatedTest id="6728ce79-54e2-4696-9a8a-6cc6377c72d3" index="4" run="6" exceptionState="expected" status="expectedexception" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="CprSetThrowsContractException896"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="1" dtot="0" acov="36" atot="41"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="1"/>
<value name="target">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<value name="value">3080174465</value>
<code><![CDATA[try
{
  VoterDO voterDO;
  voterDO = PexInvariant.CreateInstance<VoterDO>();
  PexInvariant.SetField<EntityRef<PollingStationDO>>
      ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
  PexInvariant.SetField<uint?>
      ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
  PexInvariant.SetField<uint?>
      ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
  PexInvariant.SetField<string>
      ((object)voterDO, "<Name>k__BackingField", (string)null);
  PexInvariant.SetField<string>
      ((object)voterDO, "<Address>k__BackingField", (string)null);
  PexInvariant.SetField<string>
      ((object)voterDO, "<City>k__BackingField", (string)null);
  PexInvariant.SetField<bool?>
      ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
  PexInvariant.SetField<bool?>
      ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
  PexInvariant.CheckInvariant((object)voterDO);
  this.CprSet(voterDO, new uint?(3080174465u));
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.Pex.Framework.Explorable;System.Data.Linq;Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void CprSetThrowsContractException896()
{
    try
    {
      VoterDO voterDO;
      voterDO = PexInvariant.CreateInstance<VoterDO>();
      PexInvariant.SetField<EntityRef<PollingStationDO>>
          ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
      PexInvariant.SetField<uint?>
          ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
      PexInvariant.SetField<uint?>
          ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
      PexInvariant.SetField<string>
          ((object)voterDO, "<Name>k__BackingField", (string)null);
      PexInvariant.SetField<string>
          ((object)voterDO, "<Address>k__BackingField", (string)null);
      PexInvariant.SetField<string>
          ((object)voterDO, "<City>k__BackingField", (string)null);
      PexInvariant.SetField<bool?>
          ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
      PexInvariant.SetField<bool?>
          ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
      PexInvariant.CheckInvariant((object)voterDO);
      this.CprSet(voterDO, new uint?(3080174465u));
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<exceptionChain><exception typeDisplayName="ContractException" source="DigitalVoterList"><message><![CDATA[Precondition failed: value >= 101000001 && value <= 3012999999]]></message>
<type spec="Class"><definition assemblyName="DigitalVoterList" name="ContractException" token="200004e"><declaringType assemblyName="DigitalVoterList" name="__ContractsRuntime" token="2000035" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at VoterDO.set_Cpr(Nullable`1&lt;UInt32&gt;) in C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs(83)" method="VoterDO.set_Cpr(Nullable`1&lt;UInt32&gt;)" offset="104" file="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs" line="83"><method assemblyName="DigitalVoterList" name="set_Cpr" token="6000023"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="value" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
            set
            {]]></beforeSource>
<source><![CDATA[                Contract.Requires(value >= 101000001 && value <= 3012999999);]]></source>
<afterSource><![CDATA[
                PrimaryKey = value;
            }]]></afterSource>
</frame>
<frame value="  at VoterDOTest.CprSet(VoterDO, Nullable`1&lt;UInt32&gt;)" method="VoterDOTest.CprSet(VoterDO, Nullable`1&lt;UInt32&gt;)" offset="2"><method assemblyName="DigitalVoterList.Tests" name="CprSet" token="6000008"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="value" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return <PrimaryKey>k__BackingField_nullu.value < 101000001u && value.hasValue != false && 3012999999u < value.value && <PrimaryKey>k__BackingField_nullu.hasValue == false;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:32:41Z" category="coverage" message="coverage increased from 35 to 36 blocks (+1) after flipping DigitalVoterList.DBComm.DO.VoterDO.set_Cpr at 0x004a"/>
<test name="CprSet" state="success" duration="0,00"/>
<coverage domain="usercodeundertest" unit="block" covered="36" total="41" coveredRatio="0.87804878048780488"/>
<sourceCoverage xml="cov\e371\cov.xml" html="cov\e371\cov.html"/>
<result name="CprSet(VoterDO, Nullable`1&lt;UInt32&gt;)" state="success" duration="0,20"/>
<duration start="2011-12-07 12:32:41Z" end="2011-12-07 12:32:41Z" seconds="0,19"/>
</exploration>
<exploration shortName="CprStringGet(VoterDO)" fullName="DigitalVoterList.DBComm.DO.VoterDOTest.CprStringGet(VoterDO)" isDynamicCode="true"><method><definition assemblyName="DigitalVoterList.Tests" name="CprStringGet" token="6000006"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</resultType>
</definition>
</method>
<target><propertyDefinition assemblyName="DigitalVoterList" name="CprString" token="17000005"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<propertyType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</propertyDefinition>
</target>
<memberUnderTest assemblyName="DigitalVoterList" name="CprString" token="17000005"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<propertyType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</memberUnderTest>
<explorable title="guessed how to create DigitalVoterList.DBComm.DO.VoterDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\VoterDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.VoterDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<typeDefinition assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.VoterDO instances</summary>
]]></doc>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<reference name="Microsoft.Pex.Framework"/>
<methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="_pollingStation_entityRef" position="0"><type spec="ValueType"><definition assemblyName="System.Data.Linq" valueType="true" name="EntityRef`1" token="200014e" namespace="System.Data.Linq"><genericParameter value="TEntity"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PrimaryKey&gt;k__BackingField_nullu" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PollingStationId&gt;k__BackingField_nullu1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Name&gt;k__BackingField_s" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;Address&gt;k__BackingField_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;City&gt;k__BackingField_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;CardPrinted&gt;k__BackingField_nullb" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Voted&gt;k__BackingField_nullb1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="_pollingStation_entityRef" position="0"><type spec="ValueType"><definition assemblyName="System.Data.Linq" valueType="true" name="EntityRef`1" token="200014e" namespace="System.Data.Linq"><genericParameter value="TEntity"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PrimaryKey&gt;k__BackingField_nullu" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PollingStationId&gt;k__BackingField_nullu1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Name&gt;k__BackingField_s" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;Address&gt;k__BackingField_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;City&gt;k__BackingField_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;CardPrinted&gt;k__BackingField_nullb" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Voted&gt;k__BackingField_nullb1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="CprStringGet" state="success" duration="0,00"/>
<test name="CprStringGet" state="success" duration="0,02"/>
<generatedTest id="75fb03f6-396c-4dee-a7c7-c3498ddb3339" index="1" run="2" exceptionState="expected" status="expectedexception" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="CprStringGetThrowsContractException927"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="8" dtot="35" acov="8" atot="35"/>
<rcov name="asserts" dcov="1" dtot="2" acov="1" atot="2"/>
<value name="target">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<code><![CDATA[try
{
  VoterDO voterDO;
  string s;
  voterDO = PexInvariant.CreateInstance<VoterDO>();
  PexInvariant.SetField<EntityRef<PollingStationDO>>
      ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
  PexInvariant.SetField<uint?>
      ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
  PexInvariant.SetField<uint?>
      ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
  PexInvariant.SetField<string>
      ((object)voterDO, "<Name>k__BackingField", (string)null);
  PexInvariant.SetField<string>
      ((object)voterDO, "<Address>k__BackingField", (string)null);
  PexInvariant.SetField<string>
      ((object)voterDO, "<City>k__BackingField", (string)null);
  PexInvariant.SetField<bool?>
      ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
  PexInvariant.SetField<bool?>
      ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
  PexInvariant.CheckInvariant((object)voterDO);
  s = this.CprStringGet(voterDO);
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.Pex.Framework.Explorable;System.Data.Linq;Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void CprStringGetThrowsContractException927()
{
    try
    {
      VoterDO voterDO;
      string s;
      voterDO = PexInvariant.CreateInstance<VoterDO>();
      PexInvariant.SetField<EntityRef<PollingStationDO>>
          ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
      PexInvariant.SetField<uint?>
          ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
      PexInvariant.SetField<uint?>
          ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
      PexInvariant.SetField<string>
          ((object)voterDO, "<Name>k__BackingField", (string)null);
      PexInvariant.SetField<string>
          ((object)voterDO, "<Address>k__BackingField", (string)null);
      PexInvariant.SetField<string>
          ((object)voterDO, "<City>k__BackingField", (string)null);
      PexInvariant.SetField<bool?>
          ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
      PexInvariant.SetField<bool?>
          ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
      PexInvariant.CheckInvariant((object)voterDO);
      s = this.CprStringGet(voterDO);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<exceptionChain><exception typeDisplayName="ContractException" source="DigitalVoterList"><message><![CDATA[Precondition failed: Cpr != null]]></message>
<type spec="Class"><definition assemblyName="DigitalVoterList" name="ContractException" token="200004e"><declaringType assemblyName="DigitalVoterList" name="__ContractsRuntime" token="2000035" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at VoterDO.get_CprString() in C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs(97)" method="VoterDO.get_CprString()" offset="44" file="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs" line="97"><method assemblyName="DigitalVoterList" name="get_CprString" token="6000024"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</resultType>
</method>
<beforeSource><![CDATA[        {
            get
            {]]></beforeSource>
<source><![CDATA[                Contract.Requires(Cpr != null);]]></source>
<afterSource><![CDATA[                Contract.Ensures(Contract.Result<string>().Length == 10);

                string result = Cpr.ToString();]]></afterSource>
</frame>
<frame value="  at VoterDOTest.CprStringGet(VoterDO)" method="VoterDOTest.CprStringGet(VoterDO)" offset="1"><method assemblyName="DigitalVoterList.Tests" name="CprStringGet" token="6000006"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</resultType>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[VoterDO s1 = new;
bool s0 = target == s1 ? false : target.$evaluatingInvariant$;
uint? s2 = target == s1 ? <PrimaryKey>k__BackingField_nullu : target.PrimaryKey;
return <PrimaryKey>k__BackingField_nullu.value < 101000001u && target != (VoterDO)null && <PrimaryKey>k__BackingField_nullu.hasValue == false && s0 == false && s2.hasValue == false;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:32:41Z" category="coverage" message="coverage increased from 0 to 8 blocks (+8) after flipping DigitalVoterList.DBComm.DO.VoterDO.$InvariantMethod$ at 0x0026"/>
<test name="CprStringGet" state="success" duration="0,00"/>
<test name="CprStringGet" state="success" duration="0,00"/>
<coverage domain="usercodeundertest" unit="block" covered="8" total="35" coveredRatio="0.22857142857142856"/>
<sourceCoverage xml="cov\e374\cov.xml" html="cov\e374\cov.html"/>
<result name="CprStringGet(VoterDO)" state="success" duration="0,13"/>
<duration start="2011-12-07 12:32:41Z" end="2011-12-07 12:32:41Z" seconds="0,14"/>
</exploration>
<exploration shortName="FullyInitialized(VoterDO)" fullName="DigitalVoterList.DBComm.DO.VoterDOTest.FullyInitialized(VoterDO)" isDynamicCode="true"><method><definition assemblyName="DigitalVoterList.Tests" name="FullyInitialized" token="6000003"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="DigitalVoterList" name="FullyInitialized" token="6000033"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="DigitalVoterList" name="FullyInitialized" token="6000033"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</resultType>
</memberUnderTest>
<explorable title="guessed how to create DigitalVoterList.DBComm.DO.VoterDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\VoterDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.VoterDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<typeDefinition assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.VoterDO instances</summary>
]]></doc>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<reference name="Microsoft.Pex.Framework"/>
<methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="_pollingStation_entityRef" position="0"><type spec="ValueType"><definition assemblyName="System.Data.Linq" valueType="true" name="EntityRef`1" token="200014e" namespace="System.Data.Linq"><genericParameter value="TEntity"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PrimaryKey&gt;k__BackingField_nullu" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PollingStationId&gt;k__BackingField_nullu1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Name&gt;k__BackingField_s" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;Address&gt;k__BackingField_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;City&gt;k__BackingField_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;CardPrinted&gt;k__BackingField_nullb" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Voted&gt;k__BackingField_nullb1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="_pollingStation_entityRef" position="0"><type spec="ValueType"><definition assemblyName="System.Data.Linq" valueType="true" name="EntityRef`1" token="200014e" namespace="System.Data.Linq"><genericParameter value="TEntity"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PrimaryKey&gt;k__BackingField_nullu" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PollingStationId&gt;k__BackingField_nullu1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Name&gt;k__BackingField_s" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;Address&gt;k__BackingField_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;City&gt;k__BackingField_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;CardPrinted&gt;k__BackingField_nullb" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Voted&gt;k__BackingField_nullb1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="FullyInitialized" state="success" duration="0,00"/>
<test name="FullyInitialized" state="success" duration="0,01"/>
<generatedTest id="e341c7cc-7b10-4b5c-bca9-c029d9dd5a9c" index="1" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="FullyInitialized931"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="6" dtot="42" acov="6" atot="42"/>
<rcov name="asserts" dcov="1" dtot="1" acov="1" atot="1"/>
<value name="target">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<value name="result(target)">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<value name="result">false</value>
<code><![CDATA[VoterDO voterDO;
bool b;
voterDO = PexInvariant.CreateInstance<VoterDO>();
PexInvariant.SetField<EntityRef<PollingStationDO>>
    ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
PexInvariant.SetField<uint?>
    ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
PexInvariant.SetField<uint?>
    ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
PexInvariant.SetField<string>
    ((object)voterDO, "<Name>k__BackingField", (string)null);
PexInvariant.SetField<string>
    ((object)voterDO, "<Address>k__BackingField", (string)null);
PexInvariant.SetField<string>
    ((object)voterDO, "<City>k__BackingField", (string)null);
PexInvariant.SetField<bool?>
    ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
PexInvariant.SetField<bool?>
    ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
PexInvariant.CheckInvariant((object)voterDO);
b = this.FullyInitialized(voterDO);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)voterDO);
Assert.IsNull((object)(voterDO.PrimaryKey));
Assert.IsNull((object)(voterDO.PollingStationId));
Assert.AreEqual<string>((string)null, voterDO.Name);
Assert.AreEqual<string>((string)null, voterDO.Address);
Assert.AreEqual<string>((string)null, voterDO.City);
Assert.IsNotNull((object)(voterDO.CardPrinted));
Assert.AreEqual<bool>(true, (bool)((object)(voterDO.CardPrinted)));
Assert.IsNotNull((object)(voterDO.Voted));
Assert.AreEqual<bool>(true, (bool)((object)(voterDO.Voted)));
]]></code>
<methodCode imports="Microsoft.Pex.Framework.Explorable;System.Data.Linq;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
public void FullyInitialized931()
{
    VoterDO voterDO;
    bool b;
    voterDO = PexInvariant.CreateInstance<VoterDO>();
    PexInvariant.SetField<EntityRef<PollingStationDO>>
        ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
    PexInvariant.SetField<uint?>
        ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
    PexInvariant.SetField<uint?>
        ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
    PexInvariant.SetField<string>
        ((object)voterDO, "<Name>k__BackingField", (string)null);
    PexInvariant.SetField<string>
        ((object)voterDO, "<Address>k__BackingField", (string)null);
    PexInvariant.SetField<string>
        ((object)voterDO, "<City>k__BackingField", (string)null);
    PexInvariant.SetField<bool?>
        ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
    PexInvariant.SetField<bool?>
        ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
    PexInvariant.CheckInvariant((object)voterDO);
    b = this.FullyInitialized(voterDO);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)voterDO);
    Assert.IsNull((object)(voterDO.PrimaryKey));
    Assert.IsNull((object)(voterDO.PollingStationId));
    Assert.AreEqual<string>((string)null, voterDO.Name);
    Assert.AreEqual<string>((string)null, voterDO.Address);
    Assert.AreEqual<string>((string)null, voterDO.City);
    Assert.IsNotNull((object)(voterDO.CardPrinted));
    Assert.AreEqual<bool>(true, (bool)((object)(voterDO.CardPrinted)));
    Assert.IsNotNull((object)(voterDO.Voted));
    Assert.AreEqual<bool>(true, (bool)((object)(voterDO.Voted)));
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[VoterDO s1 = new;
bool s0 = target == s1 ? false : target.$evaluatingInvariant$;
uint? s2 = target == s1 ? <PollingStationId>k__BackingField_nullu1 : target.PollingStationId;
return <PrimaryKey>k__BackingField_nullu.value < 101000001u && 
       target != (VoterDO)null && <PrimaryKey>k__BackingField_nullu.hasValue == false && methodof(target.FullyInitialized) == methodof(VoterDO.FullyInitialized) && s0 == false && s2.hasValue == false;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:32:41Z" category="coverage" message="coverage increased from 0 to 6 blocks (+6) after flipping DigitalVoterList.DBComm.DO.VoterDO.$InvariantMethod$ at 0x0026"/>
<test name="FullyInitialized" state="success" duration="0,00"/>
<generatedTest id="610404ee-f94d-4ac5-bdd4-14f5d9e10e01" index="2" run="3" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="FullyInitialized205"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="7" dtot="0" acov="13" atot="42"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="1"/>
<value name="target">new VoterDO{PrimaryKey=null,PollingStationId=1,Name=null,Address=null,City=null,CardPrinted=true (0x02),Voted=true,_pollingStation=new EntityRef{}}</value>
<value name="result(target)">new VoterDO{PrimaryKey=null,PollingStationId=1,Name=null,Address=null,City=null,CardPrinted=true (0x02),Voted=true,_pollingStation=new EntityRef{}}</value>
<value name="result">false</value>
<code><![CDATA[VoterDO voterDO;
bool b;
voterDO = PexInvariant.CreateInstance<VoterDO>();
PexInvariant.SetField<EntityRef<PollingStationDO>>
    ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
PexInvariant.SetField<uint?>
    ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
PexInvariant.SetField<uint?>
    ((object)voterDO, "<PollingStationId>k__BackingField", new uint?(1u));
PexInvariant.SetField<string>
    ((object)voterDO, "<Name>k__BackingField", (string)null);
PexInvariant.SetField<string>
    ((object)voterDO, "<Address>k__BackingField", (string)null);
PexInvariant.SetField<string>
    ((object)voterDO, "<City>k__BackingField", (string)null);
PexInvariant.SetField<bool?>((object)voterDO, "<CardPrinted>k__BackingField", 
                                              new bool?(PexSafeHelpers.ByteToBoolean((byte)2)));
PexInvariant.SetField<bool?>
    ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
PexInvariant.CheckInvariant((object)voterDO);
b = this.FullyInitialized(voterDO);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)voterDO);
Assert.IsNull((object)(voterDO.PrimaryKey));
Assert.IsNotNull((object)(voterDO.PollingStationId));
Assert.AreEqual<uint>(1u, (uint)((object)(voterDO.PollingStationId)));
Assert.AreEqual<string>((string)null, voterDO.Name);
Assert.AreEqual<string>((string)null, voterDO.Address);
Assert.AreEqual<string>((string)null, voterDO.City);
Assert.IsNotNull((object)(voterDO.CardPrinted));
Assert.AreEqual<bool>(PexSafeHelpers.ByteToBoolean((byte)2), 
                      (bool)((object)(voterDO.CardPrinted)));
Assert.IsNotNull((object)(voterDO.Voted));
Assert.AreEqual<bool>(true, (bool)((object)(voterDO.Voted)));
]]></code>
<methodCode imports="Microsoft.Pex.Framework.Explorable;System.Data.Linq;Microsoft.Pex.Framework.Generated;Microsoft.VisualStudio.TestTools.UnitTesting"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
public void FullyInitialized205()
{
    VoterDO voterDO;
    bool b;
    voterDO = PexInvariant.CreateInstance<VoterDO>();
    PexInvariant.SetField<EntityRef<PollingStationDO>>
        ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
    PexInvariant.SetField<uint?>
        ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
    PexInvariant.SetField<uint?>
        ((object)voterDO, "<PollingStationId>k__BackingField", new uint?(1u));
    PexInvariant.SetField<string>
        ((object)voterDO, "<Name>k__BackingField", (string)null);
    PexInvariant.SetField<string>
        ((object)voterDO, "<Address>k__BackingField", (string)null);
    PexInvariant.SetField<string>
        ((object)voterDO, "<City>k__BackingField", (string)null);
    PexInvariant.SetField<bool?>((object)voterDO, "<CardPrinted>k__BackingField", 
                                                  new bool?(PexSafeHelpers.ByteToBoolean((byte)2)));
    PexInvariant.SetField<bool?>
        ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
    PexInvariant.CheckInvariant((object)voterDO);
    b = this.FullyInitialized(voterDO);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)voterDO);
    Assert.IsNull((object)(voterDO.PrimaryKey));
    Assert.IsNotNull((object)(voterDO.PollingStationId));
    Assert.AreEqual<uint>(1u, (uint)((object)(voterDO.PollingStationId)));
    Assert.AreEqual<string>((string)null, voterDO.Name);
    Assert.AreEqual<string>((string)null, voterDO.Address);
    Assert.AreEqual<string>((string)null, voterDO.City);
    Assert.IsNotNull((object)(voterDO.CardPrinted));
    Assert.AreEqual<bool>(PexSafeHelpers.ByteToBoolean((byte)2), 
                          (bool)((object)(voterDO.CardPrinted)));
    Assert.IsNotNull((object)(voterDO.Voted));
    Assert.AreEqual<bool>(true, (bool)((object)(voterDO.Voted)));
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[VoterDO s1 = new;
uint? s0 = target == s1 ? <PollingStationId>k__BackingField_nullu1 : target.PollingStationId;
bool s2 = target == s1 ? false : target.$evaluatingInvariant$;
uint? s3 = target == s1 ? <PrimaryKey>k__BackingField_nullu : target.PrimaryKey;
return <PrimaryKey>k__BackingField_nullu.value < 101000001u && target != (VoterDO)null && 
                                                               s0.hasValue != false && <PrimaryKey>k__BackingField_nullu.hasValue == false && methodof(target.FullyInitialized) == methodof(VoterDO.FullyInitialized) && s2 == false && s3.hasValue == false;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:32:41Z" category="coverage" message="coverage increased from 6 to 13 blocks (+7) after flipping DigitalVoterList.DBComm.DO.VoterDO.FullyInitialized at 0x000f"/>
<test name="FullyInitialized" state="success" duration="0,00"/>
<test name="FullyInitialized" state="success" duration="0,00"/>
<coverage domain="usercodeundertest" unit="block" covered="13" total="42" coveredRatio="0.30952380952380953"/>
<sourceCoverage xml="cov\e376\cov.xml" html="cov\e376\cov.html"/>
<result name="FullyInitialized(VoterDO)" state="success" duration="0,16"/>
<duration start="2011-12-07 12:32:41Z" end="2011-12-07 12:32:41Z" seconds="0,16"/>
</exploration>
<exploration shortName="PollingStationGet(VoterDO)" fullName="DigitalVoterList.DBComm.DO.VoterDOTest.PollingStationGet(VoterDO)" isDynamicCode="true"><method><definition assemblyName="DigitalVoterList.Tests" name="PollingStationGet" token="6000007"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</definition>
</method>
<target><propertyDefinition assemblyName="DigitalVoterList" name="PollingStation" token="1700000c"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<propertyType spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</propertyDefinition>
</target>
<memberUnderTest assemblyName="DigitalVoterList" name="PollingStation" token="1700000c"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<propertyType spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</memberUnderTest>
<explorable title="guessed how to create DigitalVoterList.DBComm.DO.VoterDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\VoterDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.VoterDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<typeDefinition assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.VoterDO instances</summary>
]]></doc>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<reference name="Microsoft.Pex.Framework"/>
<methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="_pollingStation_entityRef" position="0"><type spec="ValueType"><definition assemblyName="System.Data.Linq" valueType="true" name="EntityRef`1" token="200014e" namespace="System.Data.Linq"><genericParameter value="TEntity"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PrimaryKey&gt;k__BackingField_nullu" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PollingStationId&gt;k__BackingField_nullu1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Name&gt;k__BackingField_s" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;Address&gt;k__BackingField_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;City&gt;k__BackingField_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;CardPrinted&gt;k__BackingField_nullb" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Voted&gt;k__BackingField_nullb1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="_pollingStation_entityRef" position="0"><type spec="ValueType"><definition assemblyName="System.Data.Linq" valueType="true" name="EntityRef`1" token="200014e" namespace="System.Data.Linq"><genericParameter value="TEntity"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PrimaryKey&gt;k__BackingField_nullu" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PollingStationId&gt;k__BackingField_nullu1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Name&gt;k__BackingField_s" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;Address&gt;k__BackingField_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;City&gt;k__BackingField_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;CardPrinted&gt;k__BackingField_nullb" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Voted&gt;k__BackingField_nullb1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="PollingStationGet" state="success" duration="0,00"/>
<test name="PollingStationGet" state="success" duration="0,03"/>
<generatedTest id="3ceab4f0-b64b-4794-aff7-de03d0a0cccb" index="1" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="PollingStationGet796"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="2" dtot="25" acov="2" atot="25"/>
<rcov name="asserts" dcov="1" dtot="1" acov="1" atot="1"/>
<value name="target">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<value name="result(target)">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<value name="result">null</value>
<code><![CDATA[VoterDO voterDO;
PollingStationDO pollingStationDO;
voterDO = PexInvariant.CreateInstance<VoterDO>();
PexInvariant.SetField<EntityRef<PollingStationDO>>
    ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
PexInvariant.SetField<uint?>
    ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
PexInvariant.SetField<uint?>
    ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
PexInvariant.SetField<string>
    ((object)voterDO, "<Name>k__BackingField", (string)null);
PexInvariant.SetField<string>
    ((object)voterDO, "<Address>k__BackingField", (string)null);
PexInvariant.SetField<string>
    ((object)voterDO, "<City>k__BackingField", (string)null);
PexInvariant.SetField<bool?>
    ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
PexInvariant.SetField<bool?>
    ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
PexInvariant.CheckInvariant((object)voterDO);
pollingStationDO = this.PollingStationGet(voterDO);
Assert.IsNull((object)pollingStationDO);
Assert.IsNotNull((object)voterDO);
Assert.IsNull((object)(voterDO.PrimaryKey));
Assert.IsNull((object)(voterDO.PollingStationId));
Assert.AreEqual<string>((string)null, voterDO.Name);
Assert.AreEqual<string>((string)null, voterDO.Address);
Assert.AreEqual<string>((string)null, voterDO.City);
Assert.IsNotNull((object)(voterDO.CardPrinted));
Assert.AreEqual<bool>(true, (bool)((object)(voterDO.CardPrinted)));
Assert.IsNotNull((object)(voterDO.Voted));
Assert.AreEqual<bool>(true, (bool)((object)(voterDO.Voted)));
]]></code>
<methodCode imports="Microsoft.Pex.Framework.Explorable;System.Data.Linq;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
public void PollingStationGet796()
{
    VoterDO voterDO;
    PollingStationDO pollingStationDO;
    voterDO = PexInvariant.CreateInstance<VoterDO>();
    PexInvariant.SetField<EntityRef<PollingStationDO>>
        ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
    PexInvariant.SetField<uint?>
        ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
    PexInvariant.SetField<uint?>
        ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
    PexInvariant.SetField<string>
        ((object)voterDO, "<Name>k__BackingField", (string)null);
    PexInvariant.SetField<string>
        ((object)voterDO, "<Address>k__BackingField", (string)null);
    PexInvariant.SetField<string>
        ((object)voterDO, "<City>k__BackingField", (string)null);
    PexInvariant.SetField<bool?>
        ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
    PexInvariant.SetField<bool?>
        ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
    PexInvariant.CheckInvariant((object)voterDO);
    pollingStationDO = this.PollingStationGet(voterDO);
    Assert.IsNull((object)pollingStationDO);
    Assert.IsNotNull((object)voterDO);
    Assert.IsNull((object)(voterDO.PrimaryKey));
    Assert.IsNull((object)(voterDO.PollingStationId));
    Assert.AreEqual<string>((string)null, voterDO.Name);
    Assert.AreEqual<string>((string)null, voterDO.Address);
    Assert.AreEqual<string>((string)null, voterDO.City);
    Assert.IsNotNull((object)(voterDO.CardPrinted));
    Assert.AreEqual<bool>(true, (bool)((object)(voterDO.CardPrinted)));
    Assert.IsNotNull((object)(voterDO.Voted));
    Assert.AreEqual<bool>(true, (bool)((object)(voterDO.Voted)));
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[VoterDO s1 = new;
EntityRef<PollingStationDO> s0 = target == s1 ? _pollingStation_entityRef : target._pollingStation;
return <PrimaryKey>k__BackingField_nullu.value < 101000001u && target != (VoterDO)null && <PrimaryKey>k__BackingField_nullu.hasValue == false && s0.source == (IEnumerable<PollingStationDO>)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:32:42Z" category="coverage" message="coverage increased from 0 to 2 blocks (+2) after flipping DigitalVoterList.DBComm.DO.VoterDO.$InvariantMethod$ at 0x0026"/>
<test name="PollingStationGet" state="success" duration="0,00"/>
<test name="PollingStationGet" state="success" duration="0,00"/>
<coverage domain="usercodeundertest" unit="block" covered="2" total="25" coveredRatio="0.08"/>
<log level="message" time="2011-12-07 12:32:42Z" category="symbols" message="could not load symbols for C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Data.Linq\v4.0_4.0.0.0__b77a5c561934e089\System.Data.Linq.dll"/>
<sourceCoverage xml="cov\e380\cov.xml" html="cov\e380\cov.html"/>
<result name="PollingStationGet(VoterDO)" state="success" duration="0,13"/>
<duration start="2011-12-07 12:32:41Z" end="2011-12-07 12:32:42Z" seconds="0,14"/>
</exploration>
<exploration shortName="PollingStationSet(VoterDO, PollingStationDO)" fullName="DigitalVoterList.DBComm.DO.VoterDOTest.PollingStationSet(VoterDO, PollingStationDO)" isDynamicCode="true"><method><definition assemblyName="DigitalVoterList.Tests" name="PollingStationSet" token="6000009"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="value" position="2"><type spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</definition>
</method>
<target><propertyDefinition assemblyName="DigitalVoterList" name="PollingStation" token="1700000c"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<propertyType spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</propertyDefinition>
</target>
<memberUnderTest assemblyName="DigitalVoterList" name="PollingStation" token="1700000c"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<propertyType spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</memberUnderTest>
<explorable title="guessed how to create DigitalVoterList.DBComm.DO.VoterDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\VoterDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.VoterDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<typeDefinition assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.VoterDO instances</summary>
]]></doc>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<reference name="Microsoft.Pex.Framework"/>
<methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="_pollingStation_entityRef" position="0"><type spec="ValueType"><definition assemblyName="System.Data.Linq" valueType="true" name="EntityRef`1" token="200014e" namespace="System.Data.Linq"><genericParameter value="TEntity"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PrimaryKey&gt;k__BackingField_nullu" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PollingStationId&gt;k__BackingField_nullu1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Name&gt;k__BackingField_s" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;Address&gt;k__BackingField_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;City&gt;k__BackingField_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;CardPrinted&gt;k__BackingField_nullb" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Voted&gt;k__BackingField_nullb1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="_pollingStation_entityRef" position="0"><type spec="ValueType"><definition assemblyName="System.Data.Linq" valueType="true" name="EntityRef`1" token="200014e" namespace="System.Data.Linq"><genericParameter value="TEntity"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PrimaryKey&gt;k__BackingField_nullu" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PollingStationId&gt;k__BackingField_nullu1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Name&gt;k__BackingField_s" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;Address&gt;k__BackingField_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;City&gt;k__BackingField_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;CardPrinted&gt;k__BackingField_nullb" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Voted&gt;k__BackingField_nullb1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="PollingStationSet" state="success" duration="0,00"/>
<test name="PollingStationSet" state="success" duration="0,01"/>
<generatedTest id="8f2d7567-974f-4cd6-b69d-8c93b1759bec" index="1" run="2" exceptionState="expected" status="expectedexception" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="PollingStationSetThrowsContractException573"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="1" dtot="27" acov="1" atot="27"/>
<rcov name="asserts" dcov="1" dtot="1" acov="1" atot="1"/>
<value name="target">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<value name="value">null</value>
<code><![CDATA[try
{
  VoterDO voterDO;
  voterDO = PexInvariant.CreateInstance<VoterDO>();
  PexInvariant.SetField<EntityRef<PollingStationDO>>
      ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
  PexInvariant.SetField<uint?>
      ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
  PexInvariant.SetField<uint?>
      ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
  PexInvariant.SetField<string>
      ((object)voterDO, "<Name>k__BackingField", (string)null);
  PexInvariant.SetField<string>
      ((object)voterDO, "<Address>k__BackingField", (string)null);
  PexInvariant.SetField<string>
      ((object)voterDO, "<City>k__BackingField", (string)null);
  PexInvariant.SetField<bool?>
      ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
  PexInvariant.SetField<bool?>
      ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
  PexInvariant.CheckInvariant((object)voterDO);
  this.PollingStationSet(voterDO, (PollingStationDO)null);
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.Pex.Framework.Explorable;System.Data.Linq;Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void PollingStationSetThrowsContractException573()
{
    try
    {
      VoterDO voterDO;
      voterDO = PexInvariant.CreateInstance<VoterDO>();
      PexInvariant.SetField<EntityRef<PollingStationDO>>
          ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
      PexInvariant.SetField<uint?>
          ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
      PexInvariant.SetField<uint?>
          ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
      PexInvariant.SetField<string>
          ((object)voterDO, "<Name>k__BackingField", (string)null);
      PexInvariant.SetField<string>
          ((object)voterDO, "<Address>k__BackingField", (string)null);
      PexInvariant.SetField<string>
          ((object)voterDO, "<City>k__BackingField", (string)null);
      PexInvariant.SetField<bool?>
          ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
      PexInvariant.SetField<bool?>
          ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
      PexInvariant.CheckInvariant((object)voterDO);
      this.PollingStationSet(voterDO, (PollingStationDO)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<exceptionChain><exception typeDisplayName="ContractException" source="DigitalVoterList"><message><![CDATA[Precondition failed: value != null]]></message>
<type spec="Class"><definition assemblyName="DigitalVoterList" name="ContractException" token="200004e"><declaringType assemblyName="DigitalVoterList" name="__ContractsRuntime" token="2000035" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at VoterDO.set_PollingStation(PollingStationDO) in C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs(162)" method="VoterDO.set_PollingStation(PollingStationDO)" offset="13" file="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs" line="162"><method assemblyName="DigitalVoterList" name="set_PollingStation" token="6000032"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="value" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
            set
            {]]></beforeSource>
<source><![CDATA[                Contract.Requires(value != null);]]></source>
<afterSource><![CDATA[                _pollingStation.Entity = value;
            }
        }]]></afterSource>
</frame>
<frame value="  at VoterDOTest.PollingStationSet(VoterDO, PollingStationDO)" method="VoterDOTest.PollingStationSet(VoterDO, PollingStationDO)" offset="2"><method assemblyName="DigitalVoterList.Tests" name="PollingStationSet" token="6000009"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="value" position="2"><type spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return <PrimaryKey>k__BackingField_nullu.value < 101000001u && <PrimaryKey>k__BackingField_nullu.hasValue == false && value == (PollingStationDO)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:32:42Z" category="coverage" message="coverage increased from 0 to 1 blocks (+1) after flipping DigitalVoterList.DBComm.DO.VoterDO.$InvariantMethod$ at 0x0026"/>
<explorable title="guessed how to create DigitalVoterList.DBComm.DO.PollingStationDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\PollingStationDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.PollingStationDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<typeDefinition assemblyName="DigitalVoterList.Tests" name="PollingStationDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.PollingStationDO instances</summary>
]]></doc>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="PollingStationDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="municipalityId_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="id_nullu1" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="name_s" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="address_s1" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DigitalVoterList.Tests" name="PollingStationDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="PollingStationDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="municipalityId_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="id_nullu1" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="name_s" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="address_s1" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="PollingStationSet" state="success" duration="0,01"/>
<test name="PollingStationSet" state="success" duration="0,00"/>
<test name="PollingStationSet" state="success" duration="0,00"/>
<test name="PollingStationSet" state="success" duration="0,03"/>
<generatedTest id="530a9c51-da25-44a9-88dc-3ab0b4bf83a1" index="2" run="6" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="PollingStationSet349"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="17" dtot="0" acov="18" atot="27"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="1"/>
<value name="target">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<value name="value">...</value>
<value name="result(target)">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<code><![CDATA[VoterDO voterDO;
PollingStationDO pollingStationDO;
voterDO = PexInvariant.CreateInstance<VoterDO>();
PexInvariant.SetField<EntityRef<PollingStationDO>>
    ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
PexInvariant.SetField<uint?>
    ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
PexInvariant.SetField<uint?>
    ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
PexInvariant.SetField<string>
    ((object)voterDO, "<Name>k__BackingField", (string)null);
PexInvariant.SetField<string>
    ((object)voterDO, "<Address>k__BackingField", (string)null);
PexInvariant.SetField<string>
    ((object)voterDO, "<City>k__BackingField", (string)null);
PexInvariant.SetField<bool?>
    ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
PexInvariant.SetField<bool?>
    ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
PexInvariant.CheckInvariant((object)voterDO);
pollingStationDO = new PollingStationDO
                       (default(uint?), default(uint?), (string)null, (string)null);
this.PollingStationSet(voterDO, pollingStationDO);
Assert.IsNotNull((object)voterDO);
Assert.IsNull((object)(voterDO.PrimaryKey));
Assert.IsNull((object)(voterDO.PollingStationId));
Assert.AreEqual<string>((string)null, voterDO.Name);
Assert.AreEqual<string>((string)null, voterDO.Address);
Assert.AreEqual<string>((string)null, voterDO.City);
Assert.IsNotNull((object)(voterDO.CardPrinted));
Assert.AreEqual<bool>(true, (bool)((object)(voterDO.CardPrinted)));
Assert.IsNotNull((object)(voterDO.Voted));
Assert.AreEqual<bool>(true, (bool)((object)(voterDO.Voted)));
]]></code>
<methodCode imports="Microsoft.Pex.Framework.Explorable;System.Data.Linq;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
public void PollingStationSet349()
{
    VoterDO voterDO;
    PollingStationDO pollingStationDO;
    voterDO = PexInvariant.CreateInstance<VoterDO>();
    PexInvariant.SetField<EntityRef<PollingStationDO>>
        ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
    PexInvariant.SetField<uint?>
        ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
    PexInvariant.SetField<uint?>
        ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
    PexInvariant.SetField<string>
        ((object)voterDO, "<Name>k__BackingField", (string)null);
    PexInvariant.SetField<string>
        ((object)voterDO, "<Address>k__BackingField", (string)null);
    PexInvariant.SetField<string>
        ((object)voterDO, "<City>k__BackingField", (string)null);
    PexInvariant.SetField<bool?>
        ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
    PexInvariant.SetField<bool?>
        ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
    PexInvariant.CheckInvariant((object)voterDO);
    pollingStationDO = new PollingStationDO
                           (default(uint?), default(uint?), (string)null, (string)null);
    this.PollingStationSet(voterDO, pollingStationDO);
    Assert.IsNotNull((object)voterDO);
    Assert.IsNull((object)(voterDO.PrimaryKey));
    Assert.IsNull((object)(voterDO.PollingStationId));
    Assert.AreEqual<string>((string)null, voterDO.Name);
    Assert.AreEqual<string>((string)null, voterDO.Address);
    Assert.AreEqual<string>((string)null, voterDO.City);
    Assert.IsNotNull((object)(voterDO.CardPrinted));
    Assert.AreEqual<bool>(true, (bool)((object)(voterDO.CardPrinted)));
    Assert.IsNotNull((object)(voterDO.Voted));
    Assert.AreEqual<bool>(true, (bool)((object)(voterDO.Voted)));
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<pathAssumption><![CDATA[PollingStationDO s0 = new;
return value == s0 && value != (PollingStationDO)null && <PrimaryKey>k__BackingField_nullu.hasValue == false && <PrimaryKey>k__BackingField_nullu.value < 101000001u;
]]></pathAssumption>
<pathCondition><![CDATA[VoterDO s2 = new;
uint? s1 = target == s2 ? <PrimaryKey>k__BackingField_nullu : target.PrimaryKey;
uint? s0 = s1;
bool s3 = target == s2 ? false : target.$evaluatingInvariant$;
return target != (VoterDO)null && s0.value < 101000001u && methodof(target.$InvariantMethod$) == methodof(VoterDO.$InvariantMethod$) && s3 == false && s0.hasValue == false;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:32:42Z" category="coverage" message="coverage increased from 1 to 18 blocks (+17) after flipping DigitalVoterList.DBComm.DO.VoterDO.$InvariantMethod$ at 0x0026"/>
<coverage domain="usercodeundertest" unit="block" covered="18" total="27" coveredRatio="0.66666666666666663"/>
<sourceCoverage xml="cov\e385\cov.xml" html="cov\e385\cov.html"/>
<result name="PollingStationSet(VoterDO, PollingStationDO)" state="success" duration="0,42"/>
<duration start="2011-12-07 12:32:42Z" end="2011-12-07 12:32:42Z" seconds="0,42"/>
</exploration>
<exploration shortName="UpdateValues(VoterDO, IDataObject)" fullName="DigitalVoterList.DBComm.DO.VoterDOTest.UpdateValues(VoterDO, IDataObject)" isDynamicCode="true"><method><definition assemblyName="DigitalVoterList.Tests" name="UpdateValues" token="6000004"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="2"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</definition>
</method>
<target><methodDefinition assemblyName="DigitalVoterList" name="UpdateValues" token="6000034"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="DigitalVoterList" name="UpdateValues" token="6000034"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</memberUnderTest>
<log level="warning" time="2011-12-07 12:32:42Z" wikiTopic="Usable Type Guessed" category="domains" message="will use DigitalVoterList.DBComm.DO.VoterDO as IDataObject"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</argument>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2011-12-07 12:32:42Z" wikiTopic="Usable Type Guessed" category="domains" message="will use DigitalVoterList.DBComm.DO.PollingStationDO as IDataObject"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</argument>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2011-12-07 12:32:42Z" wikiTopic="Usable Type Guessed" category="domains" message="will use DigitalVoterList.DBComm.DO.MunicipalityDO as IDataObject"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="MunicipalityDO" token="200002f" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</argument>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
</log>
<log level="warning" time="2011-12-07 12:32:42Z" wikiTopic="Usable Type Guessed" category="domains" message="will use DigitalVoterList.DBComm.DO.LogDO as IDataObject"><codeUpdate kind="AddOrUpdateAttributeCodeUpdate" name="Add [PexUseType]" fileNameHint="PexAssemblyInfo"><attributeCtor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000b67"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexUseTypeAttribute" token="200023e" namespace="Microsoft.Pex.Framework.Using"/>
</type>
</parameter>
<parameter name="targetType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</attributeCtor>
<argument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="LogDO" token="2000030" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</argument>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
</log>
<explorable title="guessed how to create DigitalVoterList.DBComm.DO.VoterDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\VoterDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.VoterDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<typeDefinition assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.VoterDO instances</summary>
]]></doc>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<reference name="Microsoft.Pex.Framework"/>
<methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="_pollingStation_entityRef" position="0"><type spec="ValueType"><definition assemblyName="System.Data.Linq" valueType="true" name="EntityRef`1" token="200014e" namespace="System.Data.Linq"><genericParameter value="TEntity"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PrimaryKey&gt;k__BackingField_nullu" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PollingStationId&gt;k__BackingField_nullu1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Name&gt;k__BackingField_s" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;Address&gt;k__BackingField_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;City&gt;k__BackingField_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;CardPrinted&gt;k__BackingField_nullb" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Voted&gt;k__BackingField_nullb1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="_pollingStation_entityRef" position="0"><type spec="ValueType"><definition assemblyName="System.Data.Linq" valueType="true" name="EntityRef`1" token="200014e" namespace="System.Data.Linq"><genericParameter value="TEntity"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PrimaryKey&gt;k__BackingField_nullu" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;PollingStationId&gt;k__BackingField_nullu1" position="2"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Name&gt;k__BackingField_s" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;Address&gt;k__BackingField_s1" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;City&gt;k__BackingField_s2" position="5"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="&lt;CardPrinted&gt;k__BackingField_nullb" position="6"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="&lt;Voted&gt;k__BackingField_nullb1" position="7"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,02"/>
<generatedTest id="13e017dd-4c18-4cb9-9a44-714d9d86f72f" index="1" run="2" exceptionState="expected" status="expectedexception" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="UpdateValuesThrowsContractException640"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="2" dtot="87" acov="2" atot="87"/>
<rcov name="asserts" dcov="1" dtot="2" acov="1" atot="2"/>
<value name="target">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<value name="dummy">null</value>
<code><![CDATA[try
{
  VoterDO voterDO;
  voterDO = PexInvariant.CreateInstance<VoterDO>();
  PexInvariant.SetField<EntityRef<PollingStationDO>>
      ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
  PexInvariant.SetField<uint?>
      ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
  PexInvariant.SetField<uint?>
      ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
  PexInvariant.SetField<string>
      ((object)voterDO, "<Name>k__BackingField", (string)null);
  PexInvariant.SetField<string>
      ((object)voterDO, "<Address>k__BackingField", (string)null);
  PexInvariant.SetField<string>
      ((object)voterDO, "<City>k__BackingField", (string)null);
  PexInvariant.SetField<bool?>
      ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
  PexInvariant.SetField<bool?>
      ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
  PexInvariant.CheckInvariant((object)voterDO);
  this.UpdateValues(voterDO, (IDataObject)null);
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.Pex.Framework.Explorable;System.Data.Linq;Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void UpdateValuesThrowsContractException640()
{
    try
    {
      VoterDO voterDO;
      voterDO = PexInvariant.CreateInstance<VoterDO>();
      PexInvariant.SetField<EntityRef<PollingStationDO>>
          ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
      PexInvariant.SetField<uint?>
          ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
      PexInvariant.SetField<uint?>
          ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
      PexInvariant.SetField<string>
          ((object)voterDO, "<Name>k__BackingField", (string)null);
      PexInvariant.SetField<string>
          ((object)voterDO, "<Address>k__BackingField", (string)null);
      PexInvariant.SetField<string>
          ((object)voterDO, "<City>k__BackingField", (string)null);
      PexInvariant.SetField<bool?>
          ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
      PexInvariant.SetField<bool?>
          ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
      PexInvariant.CheckInvariant((object)voterDO);
      this.UpdateValues(voterDO, (IDataObject)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<exceptionChain><exception typeDisplayName="ContractException" source="DigitalVoterList"><message><![CDATA[Precondition failed: dummy != null]]></message>
<type spec="Class"><definition assemblyName="DigitalVoterList" name="ContractException" token="200004e"><declaringType assemblyName="DigitalVoterList" name="__ContractsRuntime" token="2000035" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at VoterDO.UpdateValues(IDataObject) in C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs(185)" method="VoterDO.UpdateValues(IDataObject)" offset="36" file="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs" line="185"><method assemblyName="DigitalVoterList" name="UpdateValues" token="6000034"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        /// </param>
        public void UpdateValues(IDataObject dummy)
        {]]></beforeSource>
<source><![CDATA[            Contract.Requires(dummy != null); // Re-stipulate this contract, since it must be checked before the added contracts.]]></source>
<afterSource><![CDATA[            Contract.Requires(((VoterDO)dummy).Cpr >= 101000001 && ((VoterDO)dummy).Cpr <= 3012999999);

            VoterDO voterDummy = dummy as VoterDO;]]></afterSource>
</frame>
<frame value="  at VoterDOTest.UpdateValues(VoterDO, IDataObject)" method="VoterDOTest.UpdateValues(VoterDO, IDataObject)" offset="2"><method assemblyName="DigitalVoterList.Tests" name="UpdateValues" token="6000004"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="2"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return <PrimaryKey>k__BackingField_nullu.value < 101000001u && 
       target != (VoterDO)null && <PrimaryKey>k__BackingField_nullu.hasValue == false && methodof(target.UpdateValues) == methodof(VoterDO.UpdateValues) && dummy == (IDataObject)null;
]]></pathCondition>
</generatedTest>
<test name="UpdateValues" state="success" duration="0,01"/>
<generatedTest id="c4d435c1-4351-4cbb-bde2-b3d8b8e5e1ed" index="2" run="3" exceptionState="expected" status="expectedexception" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="UpdateValuesThrowsContractException788"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="9" dtot="0" acov="11" atot="87"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="2"/>
<value name="target">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<value name="dummy">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<code><![CDATA[try
{
  VoterDO voterDO;
  voterDO = PexInvariant.CreateInstance<VoterDO>();
  PexInvariant.SetField<EntityRef<PollingStationDO>>
      ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
  PexInvariant.SetField<uint?>
      ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
  PexInvariant.SetField<uint?>
      ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
  PexInvariant.SetField<string>
      ((object)voterDO, "<Name>k__BackingField", (string)null);
  PexInvariant.SetField<string>
      ((object)voterDO, "<Address>k__BackingField", (string)null);
  PexInvariant.SetField<string>
      ((object)voterDO, "<City>k__BackingField", (string)null);
  PexInvariant.SetField<bool?>
      ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
  PexInvariant.SetField<bool?>
      ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
  PexInvariant.CheckInvariant((object)voterDO);
  this.UpdateValues(voterDO, (IDataObject)voterDO);
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.Pex.Framework.Explorable;System.Data.Linq;Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void UpdateValuesThrowsContractException788()
{
    try
    {
      VoterDO voterDO;
      voterDO = PexInvariant.CreateInstance<VoterDO>();
      PexInvariant.SetField<EntityRef<PollingStationDO>>
          ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
      PexInvariant.SetField<uint?>
          ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
      PexInvariant.SetField<uint?>
          ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
      PexInvariant.SetField<string>
          ((object)voterDO, "<Name>k__BackingField", (string)null);
      PexInvariant.SetField<string>
          ((object)voterDO, "<Address>k__BackingField", (string)null);
      PexInvariant.SetField<string>
          ((object)voterDO, "<City>k__BackingField", (string)null);
      PexInvariant.SetField<bool?>
          ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
      PexInvariant.SetField<bool?>
          ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
      PexInvariant.CheckInvariant((object)voterDO);
      this.UpdateValues(voterDO, (IDataObject)voterDO);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<exceptionChain><exception typeDisplayName="ContractException" source="DigitalVoterList"><message><![CDATA[Precondition failed: ((VoterDO)dummy).Cpr >= 101000001 && ((VoterDO)dummy).Cpr <= 3012999999]]></message>
<type spec="Class"><definition assemblyName="DigitalVoterList" name="ContractException" token="200004e"><declaringType assemblyName="DigitalVoterList" name="__ContractsRuntime" token="2000035" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at VoterDO.UpdateValues(IDataObject) in C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs(186)" method="VoterDO.UpdateValues(IDataObject)" offset="143" file="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs" line="186"><method assemblyName="DigitalVoterList" name="UpdateValues" token="6000034"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        public void UpdateValues(IDataObject dummy)
        {
            Contract.Requires(dummy != null); // Re-stipulate this contract, since it must be checked before the added contracts.]]></beforeSource>
<source><![CDATA[            Contract.Requires(((VoterDO)dummy).Cpr >= 101000001 && ((VoterDO)dummy).Cpr <= 3012999999);]]></source>
<afterSource><![CDATA[
            VoterDO voterDummy = dummy as VoterDO;
            Contract.Assert(voterDummy != null);]]></afterSource>
</frame>
<frame value="  at VoterDOTest.UpdateValues(VoterDO, IDataObject)" method="VoterDOTest.UpdateValues(VoterDO, IDataObject)" offset="2"><method assemblyName="DigitalVoterList.Tests" name="UpdateValues" token="6000004"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="2"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[VoterDO s1 = new;
uint? s0 = dummy == (IDataObject)s1 ? <PrimaryKey>k__BackingField_nullu : ((VoterDO)dummy).PrimaryKey;
bool s2 = dummy == (IDataObject)s1 ? false : ((VoterDO)dummy).$evaluatingInvariant$;
return <PrimaryKey>k__BackingField_nullu.value < 101000001u && target != (VoterDO)null && dummy != (IDataObject)null && (dummy == (IDataObject)null || dummy is VoterDO) && 
                                                                                                                        s0.value < 101000001u && <PrimaryKey>k__BackingField_nullu.hasValue == false && methodof(target.UpdateValues) == methodof(VoterDO.UpdateValues) && s2 == false;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-07 12:32:42Z" category="coverage" message="coverage increased from 2 to 11 blocks (+9) after flipping System.Diagnostics.Contracts.__ContractsRuntime.Requires at 0x0001"/>
<explorable title="guessed how to create DigitalVoterList.DBComm.DO.PollingStationDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DigitalVoterList.Tests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\PollingStationDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.PollingStationDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<typeDefinition assemblyName="DigitalVoterList.Tests" name="PollingStationDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DigitalVoterList.Tests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DigitalVoterList.DBComm.DO.PollingStationDO instances</summary>
]]></doc>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="PollingStationDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="municipalityId_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="id_nullu1" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="name_s" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="address_s1" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DigitalVoterList.Tests" name="PollingStationDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DigitalVoterList.Tests" name="Create" static="true"><declaringType assemblyName="DigitalVoterList.Tests" name="PollingStationDOFactory" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter name="municipalityId_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="id_nullu1" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="name_s" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="address_s1" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DigitalVoterList" name="PollingStationDO" token="2000026" namespace="DigitalVoterList.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<generatedTest id="9356fc0e-edd6-4fbc-824e-b07d88da1141" index="3" run="7" exceptionState="unexpected" status="exception" explorationIsDynamicCode="true" failed="true" failureText="Exception not validated by PexAllowedExceptionFromTypeUnderTest(typeof(ArgumentException), AcceptExceptionSubtypes), PexAllowedExceptionFromTypeUnderTest(typeof(InvalidOperationException)), documented, contract requires failure at type-under-test surface." generated="true" new="true" assemblyName="DigitalVoterList.Tests" name="UpdateValuesThrowsInvalidCastException875"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="ffffffff" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="11" atot="87"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="2"/>
<value name="target">new VoterDO{PrimaryKey=null,PollingStationId=null,Name=null,Address=null,City=null,CardPrinted=true,Voted=true,_pollingStation=new EntityRef{}}</value>
<value name="dummy">...</value>
<code><![CDATA[VoterDO voterDO;
PollingStationDO pollingStationDO;
voterDO = PexInvariant.CreateInstance<VoterDO>();
PexInvariant.SetField<EntityRef<PollingStationDO>>
    ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
PexInvariant.SetField<uint?>
    ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
PexInvariant.SetField<uint?>
    ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
PexInvariant.SetField<string>
    ((object)voterDO, "<Name>k__BackingField", (string)null);
PexInvariant.SetField<string>
    ((object)voterDO, "<Address>k__BackingField", (string)null);
PexInvariant.SetField<string>
    ((object)voterDO, "<City>k__BackingField", (string)null);
PexInvariant.SetField<bool?>
    ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
PexInvariant.SetField<bool?>
    ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
PexInvariant.CheckInvariant((object)voterDO);
pollingStationDO = new PollingStationDO
                       (default(uint?), default(uint?), (string)null, (string)null);
this.UpdateValues(voterDO, (IDataObject)pollingStationDO);
]]></code>
<methodCode imports="Microsoft.Pex.Framework.Explorable;System.Data.Linq;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated;System"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(VoterDOTest))]
[PexRaisedException(typeof(InvalidCastException))]
public void UpdateValuesThrowsInvalidCastException875()
{
    VoterDO voterDO;
    PollingStationDO pollingStationDO;
    voterDO = PexInvariant.CreateInstance<VoterDO>();
    PexInvariant.SetField<EntityRef<PollingStationDO>>
        ((object)voterDO, "_pollingStation", default(EntityRef<PollingStationDO>));
    PexInvariant.SetField<uint?>
        ((object)voterDO, "<PrimaryKey>k__BackingField", default(uint?));
    PexInvariant.SetField<uint?>
        ((object)voterDO, "<PollingStationId>k__BackingField", default(uint?));
    PexInvariant.SetField<string>
        ((object)voterDO, "<Name>k__BackingField", (string)null);
    PexInvariant.SetField<string>
        ((object)voterDO, "<Address>k__BackingField", (string)null);
    PexInvariant.SetField<string>
        ((object)voterDO, "<City>k__BackingField", (string)null);
    PexInvariant.SetField<bool?>
        ((object)voterDO, "<CardPrinted>k__BackingField", new bool?(true));
    PexInvariant.SetField<bool?>
        ((object)voterDO, "<Voted>k__BackingField", new bool?(true));
    PexInvariant.CheckInvariant((object)voterDO);
    pollingStationDO = new PollingStationDO
                           (default(uint?), default(uint?), (string)null, (string)null);
    this.UpdateValues(voterDO, (IDataObject)pollingStationDO);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DigitalVoterList.Tests"/>
<reference name="DigitalVoterList" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\bin\Debug\DigitalVoterList.exe"/>
<reference name="System.Data.Linq"/>
<exceptionChain><exception typeDisplayName="InvalidCastException" source="DigitalVoterList"><message><![CDATA[Unable to cast object of type 'DigitalVoterList.DBComm.DO.PollingStationDO' to type 'DigitalVoterList.DBComm.DO.VoterDO'.]]></message>
<type spec="Class"><definition assemblyName="mscorlib" name="InvalidCastException" token="2000102" namespace="System"/>
</type>
<stackTrace><frame value="  at VoterDO.UpdateValues(IDataObject) in C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs(186)" method="VoterDO.UpdateValues(IDataObject)" offset="43" file="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DigitalVoterList\DBComm\DO\VoterDO.cs" line="186"><method assemblyName="DigitalVoterList" name="UpdateValues" token="6000034"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[        public void UpdateValues(IDataObject dummy)
        {
            Contract.Requires(dummy != null); // Re-stipulate this contract, since it must be checked before the added contracts.]]></beforeSource>
<source><![CDATA[            Contract.Requires(((VoterDO)dummy).Cpr >= 101000001 && ((VoterDO)dummy).Cpr <= 3012999999);]]></source>
<afterSource><![CDATA[
            VoterDO voterDummy = dummy as VoterDO;
            Contract.Assert(voterDummy != null);]]></afterSource>
</frame>
<frame value="  at VoterDOTest.UpdateValues(VoterDO, IDataObject)" method="VoterDOTest.UpdateValues(VoterDO, IDataObject)" offset="2"><method assemblyName="DigitalVoterList.Tests" name="UpdateValues" token="6000004"><declaringType assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList.Tests" name="VoterDOTest" token="2000002" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="2"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<fix rank="66" testid="9356fc0e-edd6-4fbc-824e-b07d88da1141" kind="precondition" shortMethodNameWithParameters="VoterDO.UpdateValues(IDataObject)" imports="Microsoft.ExtendedReflection.Collections.SafeSet`1[System.String]"><reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<method><definition assemblyName="DigitalVoterList" name="UpdateValues" token="6000034"><declaringType assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DigitalVoterList" name="VoterDO" token="200000c" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="1"><type spec="Class"><definition assemblyName="DigitalVoterList" name="IDataObject" token="200000b" namespace="DigitalVoterList.DBComm.DO"/>
</type>
</parameter>
</definition>
</method>
<code><![CDATA[Contract.Requires(dummy == (IDataObject)null || dummy is VoterDO);
]]></code>
</fix>
<pathAssumption><![CDATA[PollingStationDO s0 = new;
return dummy == (IDataObject)s0 && dummy != (IDataObject)null && !(dummy is VoterDO) && methodof(target.UpdateValues) == methodof(VoterDO.UpdateValues) && 
                                                                                        <PrimaryKey>k__BackingField_nullu.hasValue == false && dummy != (IDataObject)null && target != (VoterDO)null && <PrimaryKey>k__BackingField_nullu.value < 101000001u;
]]></pathAssumption>
</generatedTest>
<coverage domain="usercodeundertest" unit="block" covered="11" total="87" coveredRatio="0.12643678160919541"/>
<sourceCoverage xml="cov\e406\cov.xml" html="cov\e406\cov.html"/>
<result name="UpdateValues(VoterDO, IDataObject)" state="success" duration="0,48"/>
<duration start="2011-12-07 12:32:42Z" end="2011-12-07 12:32:42Z" seconds="0,48"/>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="98" total="174" coveredRatio="0.56321839080459768"/>
<sourceCoverage xml="cov\t988\cov.xml" html="cov\t988\cov.html"/>
<duration start="2011-12-07 12:32:40Z" end="2011-12-07 12:32:43Z" seconds="2.2464039"/>
</fixture>
<coverage domain="usercodeundertest" unit="block" covered="98" total="174" coveredRatio="0.56321839080459768"/>
<sourceCoverage xml="cov\a25349026\cov.xml" html="cov\a25349026\cov.html"/>
<duration start="2011-12-07 12:32:40Z" end="2011-12-07 12:32:43Z" seconds="2.3712042"/>
<frameTreeRef exceptionCount="2"/>
</assembly>
<duration start="2011-12-07 12:32:40Z" end="2011-12-07 12:32:43Z" seconds="2.870405"/>
<background/>
</pex>
