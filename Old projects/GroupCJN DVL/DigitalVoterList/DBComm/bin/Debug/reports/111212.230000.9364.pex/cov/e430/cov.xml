<documents created="2011-12-12 22:00:17Z"><document src="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\DBComm\DO\PollingStationDO.cs" renderPrefix="s0"><chunk hits="-1" domain="unknown"><source><![CDATA[// -----------------------------------------------------------------------
// <copyright file="PollingStationDO.cs" company="DVL">
// <author>Jan Meier</author>
// </copyright>
// -----------------------------------------------------------------------

namespace DBComm.DBComm.DO
{
    using System.Collections.Generic;
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Diagnostics.Contracts;

    /// <summary>
    /// The class representing a Polling station entity
    /// </summary>
    [Table(Name = "pollingstation")]
    public class PollingStationDO : IDataObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PollingStationDO"/> class.
        /// </summary>
        /// <param name="municipalityId">
        /// The municipality Id.
        /// </param>
        /// <param name="id">
        /// The id.
        /// </param>
        /// <param name="name">
        /// The name.
        /// </param>
        /// <param name="address">
        /// The address.
        /// </param>
        ]]></source>
</chunk>
<chunk hits="0" offset="0017" domain="usercodeundertest"><source><![CDATA[public PollingStationDO(uint? municipalityId, uint? id, string name, string address)]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
        ]]></source>
</chunk>
<chunk hits="0" offset="001e" domain="usercodeundertest"><source><![CDATA[{]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
            ]]></source>
</chunk>
<chunk hits="0" offset="001f" domain="usercodeundertest"><source><![CDATA[this.MunicipalityId = municipalityId;]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
            ]]></source>
</chunk>
<chunk hits="0" offset="0027" domain="usercodeundertest"><source><![CDATA[this.PrimaryKey = id;]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
            ]]></source>
</chunk>
<chunk hits="0" offset="002f" domain="usercodeundertest"><source><![CDATA[this.Name = name;]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
            ]]></source>
</chunk>
<chunk hits="0" offset="0037" domain="usercodeundertest"><source><![CDATA[this.Address = address;]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
        ]]></source>
</chunk>
<chunk hits="0" offset="0040" domain="usercodeundertest"><source><![CDATA[}]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[

        /// <summary>
        /// Initializes a new instance of the <see cref="PollingStationDO"/> class. 
        /// Parameter-less constructor required for entity mapping. No field-
        /// initialization is done, i.e. all fields are null.
        /// </summary>
        public PollingStationDO()
        {
        }

        /// <summary>
        /// Gets Primary Key.
        /// </summary>
        [Column(Name = "id", IsPrimaryKey = true)]
        public uint? PrimaryKey { get; private set; }

        /// <summary>
        /// Gets the foreign key referencing a municipality.
        /// </summary>
        [Column]
        public uint? MunicipalityId { get; private set; }

        /// <summary>
        /// Gets Name.
        /// </summary>
        [Column(Name = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets Address.
        /// </summary>
        [Column]
        public string Address { get; private set; }

        ]]></source>
</chunk>
<method name=".ctor" namespace="DBComm.DBComm.DO" type="DBComm.DBComm.DO.PollingStationDO" typeName="PollingStationDO" token="6000068" module="DBComm.exe"><hits/>
<coverage domain="usercodeundertest" unit="block" covered="0" total="7" coveredRatio="0"/>
</method>
<chunk hits="0" offset="0000" domain="usercodeundertest"><source><![CDATA[private EntityRef<MunicipalityDO> _municipality = new EntityRef<MunicipalityDO>();]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[

        /// <summary>
        /// Gets or sets Municipality associated with tihs polling station.
        /// </summary>
        [Association(Name = "FK_PT_M", IsForeignKey = true, Storage = "_municipality", ThisKey = "MunicipalityId")]
        public MunicipalityDO Municipality
        {
            get
            {
                return _municipality.Entity;
            }

            set
            {
                Contract.Requires(value != null);
                _municipality.Entity = value;
            }
        }

        ]]></source>
</chunk>
<chunk hits="0" offset="000c" domain="usercodeundertest"><source><![CDATA[private EntitySet<VoterDO> _voters = new EntitySet<VoterDO>();]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[

        /// <summary>
        /// Gets or sets Voters associated with this polling station.
        /// </summary>
        [Association(Name = "FK_V_PS", Storage = "_voters", ThisKey = "PrimaryKey", OtherKey = "PollingStationId")]
        public ICollection<VoterDO> Voters
        {
            get
            {
                return _voters;
            }

            set
            ]]></source>
</chunk>
<chunk hits="1" offset="0013" domain="usercodeundertest"><source><![CDATA[{]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
                ]]></source>
</chunk>
<method name="set_Voters" namespace="DBComm.DBComm.DO" type="DBComm.DBComm.DO.PollingStationDO" typeName="PollingStationDO" token="6000075" module="DBComm.exe"><hits><hit index="0" value="1"/>
<hit index="1" value="1"/>
<hit index="2" value="1"/>
<hit index="3" value="1"/>
<hit index="4" value="1"/>
<hit index="5" value="1"/>
<hit index="6" value="1"/>
<hit index="7" value="2"/>
<hit index="9" value="1"/>
</hits>
<coverage domain="usercodeundertest" unit="block" covered="3" total="3" coveredRatio="1"/>
</method>
<chunk hits="1" offset="0000" domain="usercodeundertest"><source><![CDATA[Contract.Requires(value != null);]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
                ]]></source>
</chunk>
<chunk hits="1" offset="0014" domain="usercodeundertest"><source><![CDATA[_voters.AddRange(value);]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
            ]]></source>
</chunk>
<chunk hits="3" offset="0021" domain="usercodeundertest"><source><![CDATA[}]]></source>
</chunk>
<chunk hits="-1" domain="unknown"><source><![CDATA[
        }

        /// <summary>
        /// Has all the fields of the object been initialized?
        /// </summary>
        /// <returns>
        /// True if all fields are non-null.
        /// </returns>
        public bool FullyInitialized()
        {
            return this.Address != null && this.PrimaryKey != null && this.MunicipalityId != null && this.Name != null;
        }

        /// <summary>
        /// Set the values of this object to the values of the dummy object, if the dummys value is non-null.
        /// </summary>
        /// <param name="dummy">
        /// The dummy object, representing new values.
        /// </param>
        public void UpdateValues(IDataObject dummy)
        {
            PollingStationDO pollingDummy = dummy as PollingStationDO;
            Contract.Assert(pollingDummy != null);

            this.Address = pollingDummy.Address ?? this.Address;
            this.PrimaryKey = pollingDummy.PrimaryKey ?? this.PrimaryKey;
            this.MunicipalityId = pollingDummy.MunicipalityId ?? this.MunicipalityId;
            this.Name = pollingDummy.Name ?? this.Name;
        }

        public void ResetAssociations()
        {
            this._municipality = new EntityRef<MunicipalityDO>();
            this._voters = new EntitySet<VoterDO>();
        }

        public override string ToString()
        {
            return this.Name ?? string.Empty;
        }

        public override bool Equals(object obj)
        {
            if (obj == null || GetType() != obj.GetType())
            {
                return false;
            }

            var other = obj as PollingStationDO;

            return other.PrimaryKey == this.PrimaryKey && other.Address == this.Address && other.MunicipalityId == this.MunicipalityId
                   && other.Name == this.Name;
        }

        // override object.GetHashCode
        public override int GetHashCode()
        {
            if (Name != null)
                return this.Name.GetHashCode();

            return 0;
        }
    }
}]]></source>
</chunk>
</document>
<document src="(no sources available for some parts of DBComm.Explorables, System.Data.Linq, DBComm, DBComm.PexTests, System.Core)" missing="true"><method name="Create" type="DBComm.DBComm.DO.PollingStationDOFactory" token="6000002" module="&lt;In Memory Module&gt;"><hits/>
<coverage domain="userortestcode" unit="block" covered="0" total="2" coveredRatio="0"/>
</method>
<method name=".ctor" type="System.Data.Linq.EntitySet`1" token="6000d03" module="System.Data.Linq.dll"><hits/>
<coverage domain="userortestcode" unit="block" covered="0" total="2" coveredRatio="0"/>
</method>
<method name="set_MunicipalityId" type="DBComm.DBComm.DO.PollingStationDO" token="600006d" module="DBComm.exe"><hits/>
<coverage domain="usercodeundertest" unit="block" covered="0" total="1" coveredRatio="0"/>
</method>
<method name="set_PrimaryKey" type="DBComm.DBComm.DO.PollingStationDO" token="600006b" module="DBComm.exe"><hits/>
<coverage domain="usercodeundertest" unit="block" covered="0" total="1" coveredRatio="0"/>
</method>
<method name="set_Name" type="DBComm.DBComm.DO.PollingStationDO" token="600006f" module="DBComm.exe"><hits/>
<coverage domain="usercodeundertest" unit="block" covered="0" total="1" coveredRatio="0"/>
</method>
<method name="set_Address" type="DBComm.DBComm.DO.PollingStationDO" token="6000071" module="DBComm.exe"><hits/>
<coverage domain="usercodeundertest" unit="block" covered="0" total="1" coveredRatio="0"/>
</method>
<method name="VotersSet" type="DBComm.DBComm.DO.PollingStationDOTest" token="600000c" module="&lt;In Memory Module&gt;"><hits/>
<coverage domain="userortestcode" unit="block" covered="2" total="2" coveredRatio="1"/>
</method>
<method name="Requires" type="System.Diagnostics.Contracts.__ContractsRuntime" token="60000a1" module="DBComm.exe"><hits/>
<coverage domain="userortestcode" unit="block" covered="3" total="3" coveredRatio="1"/>
</method>
<method name="ReportFailure" type="System.Diagnostics.Contracts.__ContractsRuntime" token="600009f" module="DBComm.exe"><hits/>
<coverage domain="userortestcode" unit="block" covered="3" total="4" coveredRatio="0.75"/>
</method>
<method name="TriggerFailure" type="System.Diagnostics.Contracts.__ContractsRuntime" token="60000a0" module="DBComm.exe"><hits/>
<coverage domain="userortestcode" unit="block" covered="2" total="2" coveredRatio="1"/>
</method>
<method name=".ctor" type="System.Diagnostics.Contracts.__ContractsRuntime+ContractException" token="60000b0" module="DBComm.exe"><hits/>
<coverage domain="usercodeundertest" unit="block" covered="2" total="2" coveredRatio="1"/>
</method>
<method name="CheckModify" type="System.Data.Linq.EntitySet`1" token="6000d20" module="System.Data.Linq.dll"><hits/>
<coverage domain="userortestcode" unit="block" covered="3" total="5" coveredRatio="0.6"/>
</method>
<method name="ToList" type="System.Linq.Enumerable" token="600043f" module="System.Core.dll"><hits/>
<coverage domain="userortestcode" unit="block" covered="3" total="5" coveredRatio="0.6"/>
</method>
<method name="AddRange" type="System.Data.Linq.EntitySet`1" token="6000d0a" module="System.Data.Linq.dll"><hits/>
<coverage domain="userortestcode" unit="block" covered="20" total="24" coveredRatio="0.83333333333333337"/>
</method>
<method name="OnModified" type="System.Data.Linq.EntitySet`1" token="6000d1c" module="System.Data.Linq.dll"><hits/>
<coverage domain="userortestcode" unit="block" covered="1" total="1" coveredRatio="1"/>
</method>
<method name="Contains" type="System.Data.Linq.ItemList`1" token="6000d45" module="System.Data.Linq.dll"><hits/>
<coverage domain="userortestcode" unit="block" covered="2" total="2" coveredRatio="1"/>
</method>
<method name="OnAdd" type="System.Data.Linq.EntitySet`1" token="6000d21" module="System.Data.Linq.dll"><hits/>
<coverage domain="userortestcode" unit="block" covered="2" total="4" coveredRatio="0.5"/>
</method>
<method name="get_HasSource" type="System.Data.Linq.EntitySet`1" token="6000d18" module="System.Data.Linq.dll"><hits/>
<coverage domain="userortestcode" unit="block" covered="2" total="4" coveredRatio="0.5"/>
</method>
<method name="IndexOf" type="System.Data.Linq.ItemList`1" token="6000d48" module="System.Data.Linq.dll"><hits/>
<coverage domain="userortestcode" unit="block" covered="4" total="5" coveredRatio="0.8"/>
</method>
<method name="Add" type="System.Data.Linq.ItemList`1" token="6000d44" module="System.Data.Linq.dll"><hits/>
<coverage domain="userortestcode" unit="block" covered="3" total="4" coveredRatio="0.75"/>
</method>
<method name="GrowItems" type="System.Data.Linq.ItemList`1" token="6000d4d" module="System.Data.Linq.dll"><hits/>
<coverage domain="userortestcode" unit="block" covered="3" total="4" coveredRatio="0.75"/>
</method>
<method name="OnListChanged" type="System.Data.Linq.EntitySet`1" token="6000d31" module="System.Data.Linq.dll"><hits/>
<coverage domain="userortestcode" unit="block" covered="2" total="4" coveredRatio="0.5"/>
</method>
</document>
</documents>
