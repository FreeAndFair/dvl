<?xml version="1.0" encoding="utf-8"?>
<pex id="{25118951-0d34-421a-9767-48069057f99a}" creationTime="2011-12-13 13:51:13Z" configuration="DBComm.DBComm.DO!\MunicipalityDO!\*" created="2011-12-13 13:51:13Z" pexVersion="0.94.51006.1" xml="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\reports\111213.145113.13100.pex\report.per" html="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\reports\111213.145113.13100.pex\report.html"><environment commandLine="&quot;C:\Program Files (x86)\Microsoft Pex\bin\Microsoft.Pex.x86.exe&quot; &quot;C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe&quot; /namespacefilter:DBComm.DBComm.DO! /typefilter:PollingStationDO! /explorationreflectionmode:LazyWizard /settingsassembly:&quot;C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm.PexTests\bin\Debug\DBComm.PexTests.dll&quot; /targetx86 /x64failsilently /clrversion:v4.0.30319 /donotopenreport /reportlevel:Xml /reportrootpath:&quot;C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\reports&quot; /testassemblyname:DBComm.PexTests /testframework:VisualStudioUnitTest /testlanguage:cs /testprojectfile:&quot;C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\DBComm.csproj&quot; /testprojectnotupdate /testprojectskip" machineName="JMEI-THINK" osVersion="Microsoft Windows NT 6.1.7601 Service Pack 1" processorCount="4" clrVersion="4.0.30319.239" bitness="x86" user="jmei"><envVars><envVar name="HOMEPATH" value="\Users\jmei"/>
<envVar name="PUBLIC" value="C:\Users\Public"/>
<envVar name="COMPUTERNAME" value="JMEI-THINK"/>
<envVar name="CLRMONITOR_INJECT_TYPES" value=""/>
<envVar name="COMPLUS_ProfAPI_ProfilerCompatibilitySetting" value="EnableV2Profiler"/>
<envVar name="CommonProgramFiles(x86)" value="C:\Program Files (x86)\Common Files"/>
<envVar name="configsetroot" value="C:\Windows\ConfigSetRoot"/>
<envVar name="PROCESSOR_IDENTIFIER" value="Intel64 Family 6 Model 42 Stepping 7, GenuineIntel"/>
<envVar name="APPDATA" value="C:\Users\jmei\AppData\Roaming"/>
<envVar name="TFS_DIR" value="C:\Program Files\ThinkVantage Fingerprint Software\"/>
<envVar name="TMP" value="C:\Users\jmei\AppData\Local\Temp"/>
<envVar name="MOZ_PLUGIN_PATH" value="C:\Program Files (x86)\Foxit Software\Foxit Reader\plugins\"/>
<envVar name="SWSHARE" value="C:\SWSHARE"/>
<envVar name="PROCESSOR_REVISION" value="2a07"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES_EXCLUSIONS" value=""/>
<envVar name="PATHEXT" value=".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.RB;.RBW"/>
<envVar name="TRACKER_ATTACHED" value="1"/>
<envVar name="COMPLUS_DEFAULTVERSION" value="v4.0.30319"/>
<envVar name="CLRMONITOR_CLSID" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="COMMPath" value="C:\Program Files\Lenovo\Communications Utility"/>
<envVar name="TEMP" value="C:\Users\jmei\AppData\Local\Temp"/>
<envVar name="LOCALAPPDATA" value="C:\Users\jmei\AppData\Local"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES_EXCLUSIONS" value=""/>
<envVar name="CLRMONITOR_PROTECT_TYPES" value="Microsoft.FSharp.Text.Printf,Microsoft.FSharp.Text.PrintfImpl"/>
<envVar name="GIT_SSH" value="C:\Program Files (x86)\GitExtensions\PuTTY\plink.exe"/>
<envVar name="CLRMONITOR_INJECT_ASSEMBLIES" value=""/>
<envVar name="ProgramData" value="C:\ProgramData"/>
<envVar name="CLRMONITOR_INITIALIZED" value="0x10"/>
<envVar name="USERDOMAIN" value="jmei-THINK"/>
<envVar name="windir" value="C:\Windows"/>
<envVar name="CLRMONITOR_ERASE_FINALIZER_TYPES" value=""/>
<envVar name="CLRMONITOR_INJECT_NAMESPACES" value=""/>
<envVar name="NUMBER_OF_PROCESSORS" value="4"/>
<envVar name="Path" value="C:\Ruby193\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\ThinkPad\Bluetooth Software\;C:\Program Files\ThinkPad\Bluetooth Software\syswow64;C:\Program Files\Broadcom\WHL\;C:\Program Files\Broadcom\WHL\syswow64;C:\Program Files\Broadcom\WHL\SysWow64\;C:\Program Files\Broadcom\WHL\SysWow64\syswow64;C:\Program Files (x86)\Common Files\Lenovo;C:\Program Files (x86)\Lenovo\Access Connections\;C:\SWTOOLS\ReadyApps;c:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\;c:\Program Files\Microsoft SQL Server\100\Tools\Binn\;c:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Intel\Services\IPT\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\"/>
<envVar name="ALCKPath" value="C:\Program Files\Lenovo\AutoLock"/>
<envVar name="TVT" value="C:\Program Files (x86)\Lenovo"/>
<envVar name="pex_wait_for_server_channel" value="1"/>
<envVar name="ProgramFiles(x86)" value="C:\Program Files (x86)"/>
<envVar name="PROCESSOR_LEVEL" value="6"/>
<envVar name="PROCESSOR_ARCHITEW6432" value="AMD64"/>
<envVar name="CommonProgramFiles" value="C:\Program Files (x86)\Common Files"/>
<envVar name="CLRMONITOR_FLAGS" value=""/>
<envVar name="pex_instrumentation" value="1"/>
<envVar name="SESSIONNAME" value="Console"/>
<envVar name="asl.log" value="Destination=file"/>
<envVar name="CLRMONITOR_INSTRUMENT_TYPES" value="System.Array,System.Array+ArrayEnumerator,System.Array+FunctorComparer`1,System.Array+SZArrayEnumerator,System.Array+SorterGenericArray,System.Array+SorterObjectArray,System.Boolean,System.Byte,System.Char,System.CharEnumerator,System.ComponentModel.Component,System.ComponentModel.Container,System.ComponentModel.Container+Site,System.Convert,System.Currency,System.DateTime,System.Decimal,System.Diagnostics.Assert,System.Double,System.Globalization.CharUnicodeInfo,System.Globalization.CultureTableRecord,System.Globalization.TextInfo,System.Guid,System.IO.MemoryStream,System.IO.Stream,System.IO.StreamReader,System.IO.StreamWriter,System.IO.StringReader,System.IO.StringWriter,System.Int16,System.Int32,System.Int64,System.Lazy`1,System.Lazy`1+Boxed,System.Lazy`1+LazyInternalExceptionHolder,System.Linq.Expressions.ExpressionCompiler,System.Math,System.Nullable,System.Nullable`1,System.OrdinalComparer,System.SByte,System.SZArrayHelper,System.SZArrayHelper+SZGenericArrayEnumerator`1,System.Single,System.String,System.StringComparer,System.Text.ASCIIEncoding,System.Text.DecoderNLS,System.Text.Encoding,System.Text.UTF8Encoding,System.TimeSpan,System.Tuple,System.Tuple`1,System.Tuple`2,System.Tuple`3,System.Tuple`4,System.Tuple`5,System.Tuple`6,System.Tuple`7,System.Tuple`8,System.UInt16,System.UInt32,System.UInt64,System.Xml.XmlTextWriter,System.Xml.XmlTextWriter+Namespace,System.Xml.XmlTextWriter+NamespaceState,System.Xml.XmlTextWriter+SpecialAttr,System.Xml.XmlTextWriter+State,System.Xml.XmlTextWriter+TagInfo,System.Xml.XmlTextWriter+Token,System.Xml.XmlWriter,__Box`1,__SzArrayHelper`1"/>
<envVar name="PSModulePath" value="C:\Windows\system32\WindowsPowerShell\v1.0\Modules\"/>
<envVar name="ACPath" value="C:\Program Files (x86)\Lenovo\Access Connections\"/>
<envVar name="ProgramW6432" value="C:\Program Files"/>
<envVar name="ProgramFiles" value="C:\Program Files (x86)"/>
<envVar name="CLRMONITOR_ERASE_CCTOR_TYPES" value=""/>
<envVar name="FP_NO_HOST_CHECK" value="NO"/>
<envVar name="pex_clientid" value="pex10876_1"/>
<envVar name="CodedUITestCurrentBrowser" value="IE"/>
<envVar name="SystemRoot" value="C:\Windows"/>
<envVar name="CLRMONITOR_INSTRUMENT_ATTRIBUTE" value="Microsoft.Moles.Framework.Moles.MolesInstrumentAttribute"/>
<envVar name="CLRMONITOR_PROTECT_ALL_CCTORS" value="1"/>
<envVar name="CommonProgramW6432" value="C:\Program Files\Common Files"/>
<envVar name="LOGONSERVER" value="\\JMEI-THINK"/>
<envVar name="READYAPPS" value="C:\SWTOOLS\ReadyApps"/>
<envVar name="USERPROFILE" value="C:\Users\jmei"/>
<envVar name="VisualStudioDir" value="C:\Users\jmei\Documents\Visual Studio 2010"/>
<envVar name="CLRMONITOR_SUBSTITUTIONS" value="C:\Windows\assembly\GAC_MSIL\Microsoft.ExtendedReflection\0.94.0.0__31bf3856ad364e35\Microsoft.ExtendedReflection.dll,C:\Windows\assembly\GAC_MSIL\Microsoft.Pex.Linq\0.94.0.0__31bf3856ad364e35\Microsoft.Pex.Linq.dll"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES_EXCLUSIONS" value=""/>
<envVar name="CodeContractsInstallDir" value="C:\Program Files (x86)\Microsoft\Contracts\"/>
<envVar name="HOMEDRIVE" value="C:"/>
<envVar name="TVTCOMMON" value="C:\Program Files (x86)\Common Files\Lenovo"/>
<envVar name="ComSpec" value="C:\Windows\system32\cmd.exe"/>
<envVar name="VS100COMNTOOLS" value="C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\Tools\"/>
<envVar name="USERNAME" value="jmei"/>
<envVar name="COR_PROFILER" value="{21bbb412-71ac-41f9-a377-48529a4859cf}"/>
<envVar name="PROCESSOR_ARCHITECTURE" value="x86"/>
<envVar name="pex_server_channel" value="pex10876"/>
<envVar name="OS" value="Windows_NT"/>
<envVar name="CLRMONITOR_INSTRUMENT_NAMESPACES" value="System.Collections,System.Collections.Generic,System.Collections.ObjectModel,System.Collections.Specialized,System.Diagnostics.Contracts"/>
<envVar name="SystemDrive" value="C:"/>
<envVar name="CLRMONITOR_INSTRUMENT_ASSEMBLIES" value="DBComm,DBComm.PexTests,FSharp.Core,FSharp.PowerPack,Microsoft.Contracts,Microsoft.VisualBasic,Microsoft.VisualStudio.QualityTools.UnitTestFramework,MySql.Data,System,System.Core,System.Data,System.Data.Linq,System.Web"/>
<envVar name="ALLUSERSPROFILE" value="C:\ProgramData"/>
</envVars>
</environment>
<settings/>
<reflection><existingTest method="Constructor194" type="DBComm.DBComm.DO.VoterDOTest" token="6000023" generated="true"/>
<existingTest method="Constructor365" type="DBComm.DBComm.DO.VoterDOTest" token="6000026" generated="true"/>
<existingTest method="Constructor01389" type="DBComm.DBComm.DO.VoterDOTest" token="6000021" generated="true"/>
<reflectionEvent level="warning" wikiTopic="Duplicate Existing Tests" targetDisplayName="method System.Void DBComm.DBComm.DO.VoterDOTest.Constructor36501()" message="duplicate existing tests: System.Void DBComm.DBComm.DO.VoterDOTest.Constructor36501() - System.Void DBComm.DBComm.DO.VoterDOTest.Constructor365()"><target><methodDefinition assemblyName="DBComm.PexTests" name="Constructor36501" token="6000025"><declaringType assemblyName="DBComm.PexTests" name="VoterDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="VoterDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
</methodDefinition>
</target>
<codeUpdate kind="RemoveMemberCodeUpdate" name="Remove duplicate test"><target><methodDefinition assemblyName="DBComm.PexTests" name="Constructor36501" token="6000025"><declaringType assemblyName="DBComm.PexTests" name="VoterDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="VoterDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
</methodDefinition>
</target>
</codeUpdate>
</reflectionEvent>
<existingTest method="Constructor36501" type="DBComm.DBComm.DO.VoterDOTest" token="6000025" generated="true" duplicateOf="6000026"/>
<existingTest method="ConstructorThrowsContractException230" type="DBComm.DBComm.DO.VoterDOTest" token="6000022" generated="true" exceptionType="System.Diagnostics.Contracts.ContractException"/>
<existingTest method="ConstructorThrowsContractException904" type="DBComm.DBComm.DO.VoterDOTest" token="6000024" generated="true" exceptionType="System.Diagnostics.Contracts.ContractException"/>
<existingTest method="CprStringGetThrowsContractException613" type="DBComm.DBComm.DO.VoterDOTest" token="600000d" generated="true" exceptionType="System.Diagnostics.Contracts.ContractException"/>
<existingTest method="Equals01352" type="DBComm.DBComm.DO.VoterDOTest" token="600001f" generated="true"/>
<existingTest method="Equals01356" type="DBComm.DBComm.DO.VoterDOTest" token="6000020" generated="true"/>
<existingTest method="FullyInitialized83" type="DBComm.DBComm.DO.VoterDOTest" token="600001e" generated="true"/>
<existingTest method="FullyInitialized611" type="DBComm.DBComm.DO.VoterDOTest" token="600001d" generated="true"/>
<existingTest method="GetHashCode0145" type="DBComm.DBComm.DO.VoterDOTest" token="600001c" generated="true"/>
<existingTest method="GetHashCode01277" type="DBComm.DBComm.DO.VoterDOTest" token="600001b" generated="true"/>
<existingTest method="PollingStationGet418" type="DBComm.DBComm.DO.VoterDOTest" token="600000c" generated="true"/>
<existingTest method="PrimaryKeyGet418" type="DBComm.DBComm.DO.VoterDOTest" token="600000b" generated="true"/>
<existingTest method="ResetAssociations112" type="DBComm.DBComm.DO.VoterDOTest" token="600001a" generated="true"/>
<existingTest method="UpdateValues376" type="DBComm.DBComm.DO.VoterDOTest" token="6000011" generated="true"/>
<existingTest method="UpdateValues617" type="DBComm.DBComm.DO.VoterDOTest" token="600000f" generated="true"/>
<existingTest method="UpdateValues654" type="DBComm.DBComm.DO.VoterDOTest" token="6000012" generated="true"/>
<existingTest method="UpdateValues658" type="DBComm.DBComm.DO.VoterDOTest" token="600000e" generated="true"/>
<existingTest method="UpdateValues741" type="DBComm.DBComm.DO.VoterDOTest" token="6000013" generated="true"/>
<existingTest method="UpdateValues889" type="DBComm.DBComm.DO.VoterDOTest" token="6000014" generated="true"/>
<existingTest method="UpdateValuesThrowsContractException327" type="DBComm.DBComm.DO.VoterDOTest" token="6000016" generated="true" exceptionType="System.Diagnostics.Contracts.ContractException"/>
<existingTest method="UpdateValuesThrowsContractException387" type="DBComm.DBComm.DO.VoterDOTest" token="6000019" generated="true" exceptionType="System.Diagnostics.Contracts.ContractException"/>
<existingTest method="UpdateValuesThrowsContractException596" type="DBComm.DBComm.DO.VoterDOTest" token="6000015" generated="true" exceptionType="System.Diagnostics.Contracts.ContractException"/>
<existingTest method="UpdateValuesThrowsContractException717" type="DBComm.DBComm.DO.VoterDOTest" token="6000017" generated="true" exceptionType="System.Diagnostics.Contracts.ContractException"/>
<existingTest method="UpdateValuesThrowsContractException821" type="DBComm.DBComm.DO.VoterDOTest" token="6000018" generated="true" exceptionType="System.Diagnostics.Contracts.ContractException"/>
<existingTest method="UpdateValuesThrowsContractException987" type="DBComm.DBComm.DO.VoterDOTest" token="6000010" generated="true" exceptionType="System.Diagnostics.Contracts.ContractException"/>
<existingTest method="Constructor381" type="DBComm.DBComm.DO.PollingStationDOTest" token="6000046" generated="true"/>
<existingTest method="Constructor01808" type="DBComm.DBComm.DO.PollingStationDOTest" token="6000045" generated="true"/>
<existingTest method="Equals01378" type="DBComm.DBComm.DO.PollingStationDOTest" token="6000043" generated="true"/>
<existingTest method="Equals01665" type="DBComm.DBComm.DO.PollingStationDOTest" token="6000044" generated="true"/>
<existingTest method="FullyInitialized980" type="DBComm.DBComm.DO.PollingStationDOTest" token="6000042" generated="true"/>
<existingTest method="FullyInitialized98001" type="DBComm.DBComm.DO.PollingStationDOTest" token="6000041" generated="true"/>
<existingTest method="FullyInitialized98002" type="DBComm.DBComm.DO.PollingStationDOTest" token="6000040" generated="true"/>
<existingTest method="FullyInitialized98003" type="DBComm.DBComm.DO.PollingStationDOTest" token="600003f" generated="true"/>
<existingTest method="GetHashCode01402" type="DBComm.DBComm.DO.PollingStationDOTest" token="600003e" generated="true"/>
<existingTest method="GetHashCode01420" type="DBComm.DBComm.DO.PollingStationDOTest" token="600003d" generated="true"/>
<existingTest method="MunicipalityGet637" type="DBComm.DBComm.DO.PollingStationDOTest" token="6000033" generated="true"/>
<existingTest method="ResetAssociations273" type="DBComm.DBComm.DO.PollingStationDOTest" token="600003c" generated="true"/>
<existingTest method="ToString01482" type="DBComm.DBComm.DO.PollingStationDOTest" token="600003b" generated="true"/>
<existingTest method="ToString0148201" type="DBComm.DBComm.DO.PollingStationDOTest" token="600003a" generated="true"/>
<existingTest method="UpdateValues71" type="DBComm.DBComm.DO.PollingStationDOTest" token="6000038" generated="true"/>
<existingTest method="UpdateValues7101" type="DBComm.DBComm.DO.PollingStationDOTest" token="6000037" generated="true"/>
<existingTest method="UpdateValues7102" type="DBComm.DBComm.DO.PollingStationDOTest" token="6000036" generated="true"/>
<existingTest method="UpdateValues7103" type="DBComm.DBComm.DO.PollingStationDOTest" token="6000035" generated="true"/>
<existingTest method="UpdateValues7104" type="DBComm.DBComm.DO.PollingStationDOTest" token="6000034" generated="true"/>
<existingTest method="UpdateValuesThrowsContractException717" type="DBComm.DBComm.DO.PollingStationDOTest" token="6000039" generated="true" exceptionType="System.Diagnostics.Contracts.ContractException"/>
<existingTest method="VotersGet673" type="DBComm.DBComm.DO.PollingStationDOTest" token="6000032" generated="true"/>
</reflection>
<assembly name="DBComm" version="1.0.0.0" fileVersion="1.0.0.0" fullName="DBComm, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe" fileName="DBComm.exe"><settings testFramework="VisualStudioUnitTest" testLanguage="cs"/>
<fixture name="MunicipalityDOTest" type="DBComm.DBComm.DO.MunicipalityDOTest" typeName="MunicipalityDOTest" token="2000002" href="fix\DBComm.PexTests.973.html"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
</type>
<settings typeUnderTest="DBComm.DBComm.DO.MunicipalityDO"/>
<exploration shortName="Constructor(Nullable`1&lt;UInt32&gt;, String, String, String)" fullName="DBComm.DBComm.DO.MunicipalityDOTest.Constructor(Nullable`1&lt;UInt32&gt;, String, String, String)" isDynamicCode="true"><method><definition assemblyName="DBComm.PexTests" name="Constructor" token="6000001"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="id" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="DBComm" name=".ctor" token="600007c"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="id" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="DBComm" name=".ctor" token="600007c"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="id" position="1"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name" position="4"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
</memberUnderTest>
<log level="message" time="2011-12-13 13:51:14Z" category="progress" message="    0 runs"/>
<test name="Constructor" state="success" duration="0,27"/>
<generatedTest id="6381b004-3945-482e-80cb-587abe30ea2f" index="1" run="1" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="Constructor861"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="11" dtot="11" acov="11" atot="11"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="id">null</value>
<value name="address">null</value>
<value name="city">null</value>
<value name="name">null</value>
<value name="result">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO =
  this.Constructor(default(uint?), (string)null, (string)null, (string)null);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void Constructor861()
{
    MunicipalityDO municipalityDO;
    municipalityDO =
      this.Constructor(default(uint?), (string)null, (string)null, (string)null);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
</generatedTest>
<log level="message" time="2011-12-13 13:51:14Z" category="coverage" message="coverage increased from 0 to 11 blocks (+11) after flipping &lt;unknown method&gt; at 0x&lt;unknown offset&gt;"/>
<coverage domain="usercodeundertest" unit="block" covered="11" total="11" coveredRatio="1"/>
<log level="message" time="2011-12-13 13:51:14Z" category="symbols" message="could not load symbols for C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Data.Linq\v4.0_4.0.0.0__b77a5c561934e089\System.Data.Linq.dll"/>
<log level="message" time="2011-12-13 13:51:14Z" category="symbols" message="search path: ;"/>
<sourceCoverage xml="cov\e342\cov.xml" html="cov\e342\cov.html"/>
<result name="Constructor(Nullable`1&lt;UInt32&gt;, String, String, String)" state="success" duration="0,48"/>
<duration start="2011-12-13 13:51:14Z" end="2011-12-13 13:51:14Z" seconds="0,48"/>
</exploration>
<exploration shortName="Constructor01()" fullName="DBComm.DBComm.DO.MunicipalityDOTest.Constructor01()" isDynamicCode="true"><method><definition assemblyName="DBComm.PexTests" name="Constructor01" token="6000002"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="DBComm" name=".ctor" token="600007d"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="DBComm" name=".ctor" token="600007d"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
</memberUnderTest>
<test name="Constructor01" state="success" duration="0,00"/>
<generatedTest id="0475bbff-e46f-4d79-8f84-3af9837ecc0a" index="1" run="1" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="Constructor01808"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="3" acov="3" atot="3"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="result">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO = this.Constructor01();
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void Constructor01808()
{
    MunicipalityDO municipalityDO;
    municipalityDO = this.Constructor01();
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
</generatedTest>
<log level="message" time="2011-12-13 13:51:14Z" category="coverage" message="coverage increased from 0 to 3 blocks (+3) after flipping &lt;unknown method&gt; at 0x&lt;unknown offset&gt;"/>
<coverage domain="usercodeundertest" unit="block" covered="3" total="3" coveredRatio="1"/>
<sourceCoverage xml="cov\e351\cov.xml" html="cov\e351\cov.html"/>
<result name="Constructor01()" state="success" duration="0,04"/>
<duration start="2011-12-13 13:51:14Z" end="2011-12-13 13:51:14Z" seconds="0,05"/>
</exploration>
<exploration shortName="Equals01(MunicipalityDO, Object)" fullName="DBComm.DBComm.DO.MunicipalityDOTest.Equals01(MunicipalityDO, Object)" isDynamicCode="true"><method><definition assemblyName="DBComm.PexTests" name="Equals01" token="6000003"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="obj" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="DBComm" name="Equals" token="600008e"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="obj" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="DBComm" name="Equals" token="600008e"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="obj" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</resultType>
</memberUnderTest>
<explorable title="guessed how to create DBComm.DBComm.DO.MunicipalityDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DBComm.PexTests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\MunicipalityDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DBComm.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<typeDefinition assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DBComm.PexTests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DBComm.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<methodDefinition assemblyName="DBComm.PexTests" name="Create" static="true"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DBComm.PexTests" name="Create" static="true"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<log level="message" time="2011-12-13 13:51:14Z" category="symbols" message="could not load symbols for C:\Windows\assembly\GAC_MSIL\Microsoft.Pex\0.94.0.0__31bf3856ad364e35\Microsoft.Pex.exe"/>
<test name="Equals01" state="success" duration="0,01"/>
<test name="Equals01" state="success" duration="0,02"/>
<generatedTest id="80394139-b1d3-4d18-a407-b69d037132cf" index="1" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="Equals01665"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="49" acov="3" atot="49"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="obj">null</value>
<value name="result(target)">...</value>
<value name="result">false</value>
<code><![CDATA[MunicipalityDO municipalityDO;
bool b;
municipalityDO =
  new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
b = this.Equals01(municipalityDO, (object)null);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void Equals01665()
{
    MunicipalityDO municipalityDO;
    bool b;
    municipalityDO =
      new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
    b = this.Equals01(municipalityDO, (object)null);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[return target != (MunicipalityDO)null && methodof(target.Equals) == methodof(MunicipalityDO.Equals) && obj == (object)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-13 13:51:14Z" category="coverage" message="coverage increased from 0 to 3 blocks (+3) after flipping DBComm.DBComm.DO.MunicipalityDOTest.Equals01 at 0x0002"/>
<test name="Equals01" state="success" duration="0,01"/>
<generatedTest id="fe33614f-9950-4a8d-ab17-ee861412fd22" index="2" run="3" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="Equals01378"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="4" dtot="0" acov="7" atot="49"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="obj">object</value>
<value name="result(target)">...</value>
<value name="result">false</value>
<code><![CDATA[MunicipalityDO municipalityDO;
bool b;
municipalityDO =
  new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
object s0 = new object();
b = this.Equals01(municipalityDO, s0);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void Equals01378()
{
    MunicipalityDO municipalityDO;
    bool b;
    municipalityDO =
      new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
    object s0 = new object();
    b = this.Equals01(municipalityDO, s0);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[return target != (MunicipalityDO)null && obj != (object)null && methodof(target.Equals) == methodof(MunicipalityDO.Equals) && ((object)target).GetType() != obj.GetType();
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-13 13:51:14Z" category="coverage" message="coverage increased from 3 to 7 blocks (+4) after flipping DBComm.DBComm.DO.MunicipalityDO.Equals at 0x0002"/>
<test name="Equals01" state="success" duration="0,00"/>
<coverage domain="usercodeundertest" unit="block" covered="7" total="49" coveredRatio="0.14285714285714285"/>
<sourceCoverage xml="cov\e353\cov.xml" html="cov\e353\cov.html"/>
<result name="Equals01(MunicipalityDO, Object)" state="success" duration="0,19"/>
<duration start="2011-12-13 13:51:14Z" end="2011-12-13 13:51:14Z" seconds="0,19"/>
</exploration>
<exploration shortName="FullyInitialized(MunicipalityDO)" fullName="DBComm.DBComm.DO.MunicipalityDOTest.FullyInitialized(MunicipalityDO)" isDynamicCode="true"><method><definition assemblyName="DBComm.PexTests" name="FullyInitialized" token="6000004"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="DBComm" name="FullyInitialized" token="600008b"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="DBComm" name="FullyInitialized" token="600008b"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Boolean" token="200009d" namespace="System"/>
</resultType>
</memberUnderTest>
<explorable title="guessed how to create DBComm.DBComm.DO.MunicipalityDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DBComm.PexTests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\MunicipalityDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DBComm.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<typeDefinition assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DBComm.PexTests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DBComm.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<methodDefinition assemblyName="DBComm.PexTests" name="Create" static="true"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DBComm.PexTests" name="Create" static="true"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="FullyInitialized" state="success" duration="0,00"/>
<test name="FullyInitialized" state="success" duration="0,02"/>
<generatedTest id="0e2431db-e9f9-4465-bcef-09a6570c4680" index="1" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="FullyInitialized980"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="5" dtot="22" acov="5" atot="22"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="result(target)">...</value>
<value name="result">false</value>
<code><![CDATA[MunicipalityDO municipalityDO;
bool b;
municipalityDO =
  new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
b = this.FullyInitialized(municipalityDO);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void FullyInitialized980()
{
    MunicipalityDO municipalityDO;
    bool b;
    municipalityDO =
      new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
    b = this.FullyInitialized(municipalityDO);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[MunicipalityDO s1 = new;
uint? s0 = target == s1 ? id_nullu : target.Id;
return target != (MunicipalityDO)null && methodof(target.FullyInitialized) == methodof(MunicipalityDO.FullyInitialized) && s0.hasValue == false;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-13 13:51:14Z" category="coverage" message="coverage increased from 0 to 5 blocks (+5) after flipping DBComm.DBComm.DO.MunicipalityDOTest.FullyInitialized at 0x0001"/>
<test name="FullyInitialized" state="success" duration="0,00"/>
<generatedTest id="8f031ae3-aa20-4192-ac75-53133984cf76" index="2" run="3" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="FullyInitialized98001"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="1" acov="8" atot="23"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="result(target)">...</value>
<value name="result">false</value>
<code><![CDATA[MunicipalityDO municipalityDO;
bool b;
municipalityDO =
  new MunicipalityDO(new uint?(1u), (string)null, (string)null, (string)null);
b = this.FullyInitialized(municipalityDO);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNotNull((object)(municipalityDO.Id));
Assert.AreEqual<uint>(1u, (uint)((object)(municipalityDO.Id)));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void FullyInitialized98001()
{
    MunicipalityDO municipalityDO;
    bool b;
    municipalityDO =
      new MunicipalityDO(new uint?(1u), (string)null, (string)null, (string)null);
    b = this.FullyInitialized(municipalityDO);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNotNull((object)(municipalityDO.Id));
    Assert.AreEqual<uint>(1u, (uint)((object)(municipalityDO.Id)));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[MunicipalityDO s1 = new;
uint? s0 = target == s1 ? id_nullu : target.Id;
string s2 = target == s1 ? address_s : target.Address;
return target != (MunicipalityDO)null && s0.hasValue != false && methodof(target.FullyInitialized) == methodof(MunicipalityDO.FullyInitialized) && s2 == (string)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-13 13:51:14Z" category="coverage" message="coverage increased from 5 to 8 blocks (+3) after flipping DBComm.DBComm.DO.MunicipalityDO.FullyInitialized at 0x000f"/>
<test name="FullyInitialized" state="success" duration="0,00"/>
<generatedTest id="4604da0a-e42a-46cd-bfd7-c52ef2dcc12b" index="3" run="4" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="FullyInitialized98002"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="1" acov="11" atot="24"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="result(target)">...</value>
<value name="result">false</value>
<code><![CDATA[MunicipalityDO municipalityDO;
bool b;
municipalityDO =
  new MunicipalityDO(new uint?(128u), "", (string)null, (string)null);
b = this.FullyInitialized(municipalityDO);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNotNull((object)(municipalityDO.Id));
Assert.AreEqual<uint>(128u, (uint)((object)(municipalityDO.Id)));
Assert.AreEqual<string>("", municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void FullyInitialized98002()
{
    MunicipalityDO municipalityDO;
    bool b;
    municipalityDO =
      new MunicipalityDO(new uint?(128u), "", (string)null, (string)null);
    b = this.FullyInitialized(municipalityDO);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNotNull((object)(municipalityDO.Id));
    Assert.AreEqual<uint>(128u, (uint)((object)(municipalityDO.Id)));
    Assert.AreEqual<string>("", municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[MunicipalityDO s1 = new;
uint? s0 = target == s1 ? id_nullu : target.Id;
string s2 = target == s1 ? address_s : target.Address;
string s3 = target == s1 ? name_s2 : target.Name;
return target != (MunicipalityDO)null && s0.hasValue != false && s2 != (string)null && methodof(target.FullyInitialized) == methodof(MunicipalityDO.FullyInitialized) && s3 == (string)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-13 13:51:14Z" category="coverage" message="coverage increased from 8 to 11 blocks (+3) after flipping DBComm.DBComm.DO.MunicipalityDO.FullyInitialized at 0x001a"/>
<test name="FullyInitialized" state="success" duration="0,00"/>
<generatedTest id="d756f491-d4bc-4b11-b517-a6a49218acf1" index="4" run="5" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="FullyInitialized98003"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="1" acov="14" atot="25"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="result(target)">...</value>
<value name="result">false</value>
<code><![CDATA[MunicipalityDO municipalityDO;
bool b;
municipalityDO = new MunicipalityDO(new uint?(1u), "", (string)null, "");
b = this.FullyInitialized(municipalityDO);
Assert.AreEqual<bool>(false, b);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNotNull((object)(municipalityDO.Id));
Assert.AreEqual<uint>(1u, (uint)((object)(municipalityDO.Id)));
Assert.AreEqual<string>("", municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>("", municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void FullyInitialized98003()
{
    MunicipalityDO municipalityDO;
    bool b;
    municipalityDO = new MunicipalityDO(new uint?(1u), "", (string)null, "");
    b = this.FullyInitialized(municipalityDO);
    Assert.AreEqual<bool>(false, b);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNotNull((object)(municipalityDO.Id));
    Assert.AreEqual<uint>(1u, (uint)((object)(municipalityDO.Id)));
    Assert.AreEqual<string>("", municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>("", municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[MunicipalityDO s1 = new;
uint? s0 = target == s1 ? id_nullu : target.Id;
string s2 = target == s1 ? address_s : target.Address;
string s3 = target == s1 ? name_s2 : target.Name;
return target != (MunicipalityDO)null && s0.hasValue != false && s2 != (string)null && s3 != (string)null && methodof(target.FullyInitialized) == methodof(MunicipalityDO.FullyInitialized);
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-13 13:51:14Z" category="coverage" message="coverage increased from 11 to 14 blocks (+3) after flipping DBComm.DBComm.DO.MunicipalityDO.FullyInitialized at 0x0025"/>
<coverage domain="usercodeundertest" unit="block" covered="14" total="25" coveredRatio="0.56"/>
<sourceCoverage xml="cov\e372\cov.xml" html="cov\e372\cov.html"/>
<result name="FullyInitialized(MunicipalityDO)" state="success" duration="0,17"/>
<duration start="2011-12-13 13:51:14Z" end="2011-12-13 13:51:14Z" seconds="0,17"/>
</exploration>
<exploration shortName="GetHashCode01(MunicipalityDO)" fullName="DBComm.DBComm.DO.MunicipalityDOTest.GetHashCode01(MunicipalityDO)" isDynamicCode="true"><method><definition assemblyName="DBComm.PexTests" name="GetHashCode01" token="6000005"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="DBComm" name="GetHashCode" token="600008f"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="DBComm" name="GetHashCode" token="600008f"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Int32" token="20000fe" namespace="System"/>
</resultType>
</memberUnderTest>
<explorable title="guessed how to create DBComm.DBComm.DO.MunicipalityDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DBComm.PexTests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\MunicipalityDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DBComm.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<typeDefinition assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DBComm.PexTests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DBComm.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<methodDefinition assemblyName="DBComm.PexTests" name="Create" static="true"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DBComm.PexTests" name="Create" static="true"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="GetHashCode01" state="success" duration="0,01"/>
<test name="GetHashCode01" state="success" duration="0,01"/>
<generatedTest id="c5665093-5de7-4719-8416-1dd4758eec01" index="1" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="GetHashCode01402"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="4" dtot="18" acov="4" atot="18"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="result(target)">...</value>
<value name="result">0</value>
<code><![CDATA[MunicipalityDO municipalityDO;
int i;
municipalityDO =
  new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
i = this.GetHashCode01(municipalityDO);
Assert.AreEqual<int>(0, i);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void GetHashCode01402()
{
    MunicipalityDO municipalityDO;
    int i;
    municipalityDO =
      new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
    i = this.GetHashCode01(municipalityDO);
    Assert.AreEqual<int>(0, i);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[MunicipalityDO s1 = new;
string s0 = target == s1 ? name_s2 : target.Name;
return target != (MunicipalityDO)null && methodof(target.GetHashCode) == methodof(MunicipalityDO.GetHashCode) && s0 == (string)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-13 13:51:15Z" category="coverage" message="coverage increased from 0 to 4 blocks (+4) after flipping DBComm.DBComm.DO.MunicipalityDOTest.GetHashCode01 at 0x0001"/>
<test name="GetHashCode01" state="success" duration="0,00"/>
<generatedTest id="e805c836-02d0-42a1-8264-b08cd4917868" index="2" run="3" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="GetHashCode01420"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="0" acov="7" atot="18"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="result(target)">...</value>
<value name="result">757602046</value>
<code><![CDATA[MunicipalityDO municipalityDO;
int i;
municipalityDO =
  new MunicipalityDO(default(uint?), (string)null, (string)null, "");
i = this.GetHashCode01(municipalityDO);
Assert.AreEqual<int>(757602046, i);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>("", municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void GetHashCode01420()
{
    MunicipalityDO municipalityDO;
    int i;
    municipalityDO =
      new MunicipalityDO(default(uint?), (string)null, (string)null, "");
    i = this.GetHashCode01(municipalityDO);
    Assert.AreEqual<int>(757602046, i);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>("", municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[MunicipalityDO s1 = new;
string s0 = target == s1 ? name_s2 : target.Name;
return target != (MunicipalityDO)null && s0 != (string)null && methodof(target.GetHashCode) == methodof(MunicipalityDO.GetHashCode);
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-13 13:51:15Z" category="coverage" message="coverage increased from 4 to 7 blocks (+3) after flipping DBComm.DBComm.DO.MunicipalityDO.GetHashCode at 0x000c"/>
<coverage domain="usercodeundertest" unit="block" covered="7" total="18" coveredRatio="0.3888888888888889"/>
<sourceCoverage xml="cov\e374\cov.xml" html="cov\e374\cov.html"/>
<result name="GetHashCode01(MunicipalityDO)" state="success" duration="0,11"/>
<duration start="2011-12-13 13:51:14Z" end="2011-12-13 13:51:15Z" seconds="0,11"/>
</exploration>
<exploration shortName="PollingStationsGet(MunicipalityDO)" fullName="DBComm.DBComm.DO.MunicipalityDOTest.PollingStationsGet(MunicipalityDO)" isDynamicCode="true"><method><definition assemblyName="DBComm.PexTests" name="PollingStationsGet" token="6000009"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="ICollection`1" token="2000352" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DBComm" name="PollingStationDO" token="2000011" namespace="DBComm.DBComm.DO"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<target><propertyDefinition assemblyName="DBComm" name="PollingStations" token="17000018"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<propertyType spec="Class"><definition assemblyName="mscorlib" name="ICollection`1" token="2000352" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DBComm" name="PollingStationDO" token="2000011" namespace="DBComm.DBComm.DO"/>
</genericTypeArgument>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
</propertyDefinition>
</target>
<memberUnderTest assemblyName="DBComm" name="PollingStations" token="17000018"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<propertyType spec="Class"><definition assemblyName="mscorlib" name="ICollection`1" token="2000352" namespace="System.Collections.Generic"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="Class"><definition assemblyName="DBComm" name="PollingStationDO" token="2000011" namespace="DBComm.DBComm.DO"/>
</genericTypeArgument>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
</memberUnderTest>
<explorable title="guessed how to create DBComm.DBComm.DO.MunicipalityDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DBComm.PexTests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\MunicipalityDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DBComm.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<typeDefinition assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DBComm.PexTests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DBComm.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<methodDefinition assemblyName="DBComm.PexTests" name="Create" static="true"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DBComm.PexTests" name="Create" static="true"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="PollingStationsGet" state="success" duration="0,01"/>
<test name="PollingStationsGet" state="success" duration="0,01"/>
<generatedTest id="083b1c3a-213d-4cc2-96b5-303d6b9ed4b6" index="1" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="PollingStationsGet673"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="1" dtot="12" acov="1" atot="12"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="result(target)">...</value>
<value name="result">new EntitySet{}</value>
<code><![CDATA[MunicipalityDO municipalityDO;
ICollection<PollingStationDO> iCollection;
municipalityDO =
  new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
iCollection = this.PollingStationsGet(municipalityDO);
Assert.IsNotNull((object)iCollection);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsTrue
    (object.ReferenceEquals(municipalityDO.PollingStations, (object)iCollection)
    );
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="System.Collections.Generic;Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void PollingStationsGet673()
{
    MunicipalityDO municipalityDO;
    ICollection<PollingStationDO> iCollection;
    municipalityDO =
      new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
    iCollection = this.PollingStationsGet(municipalityDO);
    Assert.IsNotNull((object)iCollection);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsTrue
        (object.ReferenceEquals(municipalityDO.PollingStations, (object)iCollection)
        );
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[return target != (MunicipalityDO)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-13 13:51:15Z" category="coverage" message="coverage increased from 0 to 1 blocks (+1) after flipping DBComm.DBComm.DO.MunicipalityDO.get_PollingStations at 0x0002"/>
<coverage domain="usercodeundertest" unit="block" covered="1" total="12" coveredRatio="0.083333333333333329"/>
<sourceCoverage xml="cov\e378\cov.xml" html="cov\e378\cov.html"/>
<result name="PollingStationsGet(MunicipalityDO)" state="success" duration="0,06"/>
<duration start="2011-12-13 13:51:15Z" end="2011-12-13 13:51:15Z" seconds="0,08"/>
</exploration>
<exploration shortName="PrimaryKeyGet(MunicipalityDO)" fullName="DBComm.DBComm.DO.MunicipalityDOTest.PrimaryKeyGet(MunicipalityDO)" isDynamicCode="true"><method><definition assemblyName="DBComm.PexTests" name="PrimaryKeyGet" token="600000a"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<resultType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</resultType>
</definition>
</method>
<target><propertyDefinition assemblyName="DBComm" name="PrimaryKey" token="17000017"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
</propertyDefinition>
</target>
<memberUnderTest assemblyName="DBComm" name="PrimaryKey" token="17000017"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<propertyType spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</propertyType>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
</memberUnderTest>
<explorable title="guessed how to create DBComm.DBComm.DO.MunicipalityDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DBComm.PexTests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\MunicipalityDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DBComm.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<typeDefinition assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DBComm.PexTests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DBComm.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<methodDefinition assemblyName="DBComm.PexTests" name="Create" static="true"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DBComm.PexTests" name="Create" static="true"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="PrimaryKeyGet" state="success" duration="0,01"/>
<test name="PrimaryKeyGet" state="success" duration="0,01"/>
<generatedTest id="bffe04f5-9ef0-498d-b9bd-62e35885a072" index="1" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="PrimaryKeyGet637"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="3" dtot="14" acov="3" atot="14"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="result(target)">...</value>
<value name="result">null</value>
<code><![CDATA[MunicipalityDO municipalityDO;
uint? nullu;
municipalityDO =
  new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
nullu = this.PrimaryKeyGet(municipalityDO);
Assert.IsNull((object)nullu);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void PrimaryKeyGet637()
{
    MunicipalityDO municipalityDO;
    uint? nullu;
    municipalityDO =
      new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
    nullu = this.PrimaryKeyGet(municipalityDO);
    Assert.IsNull((object)nullu);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[return target != (MunicipalityDO)null && methodof(target.get_PrimaryKey) == methodof(MunicipalityDO.get_PrimaryKey);
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-13 13:51:15Z" category="coverage" message="coverage increased from 0 to 3 blocks (+3) after flipping DBComm.DBComm.DO.MunicipalityDOTest.PrimaryKeyGet at 0x0001"/>
<coverage domain="usercodeundertest" unit="block" covered="3" total="14" coveredRatio="0.21428571428571427"/>
<sourceCoverage xml="cov\e381\cov.xml" html="cov\e381\cov.html"/>
<result name="PrimaryKeyGet(MunicipalityDO)" state="success" duration="0,07"/>
<duration start="2011-12-13 13:51:15Z" end="2011-12-13 13:51:15Z" seconds="0,06"/>
</exploration>
<exploration shortName="ResetAssociations(MunicipalityDO)" fullName="DBComm.DBComm.DO.MunicipalityDOTest.ResetAssociations(MunicipalityDO)" isDynamicCode="true"><method><definition assemblyName="DBComm.PexTests" name="ResetAssociations" token="6000006"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
</definition>
</method>
<target><methodDefinition assemblyName="DBComm" name="ResetAssociations" token="600008a"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="DBComm" name="ResetAssociations" token="600008a"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
</memberUnderTest>
<explorable title="guessed how to create DBComm.DBComm.DO.MunicipalityDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DBComm.PexTests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\MunicipalityDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DBComm.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<typeDefinition assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DBComm.PexTests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DBComm.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<methodDefinition assemblyName="DBComm.PexTests" name="Create" static="true"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DBComm.PexTests" name="Create" static="true"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="ResetAssociations" state="success" duration="0,01"/>
<test name="ResetAssociations" state="success" duration="0,01"/>
<generatedTest id="e69baa0b-1c70-4187-a57a-eded21d77fdf" index="1" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="ResetAssociations273"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="2" dtot="13" acov="2" atot="13"/>
<rcov name="asserts" dcov="0" dtot="0" acov="0" atot="0"/>
<value name="target">...</value>
<value name="result(target)">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO =
  new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
this.ResetAssociations(municipalityDO);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void ResetAssociations273()
{
    MunicipalityDO municipalityDO;
    municipalityDO =
      new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
    this.ResetAssociations(municipalityDO);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[return target != (MunicipalityDO)null && methodof(target.ResetAssociations) == methodof(MunicipalityDO.ResetAssociations);
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-13 13:51:15Z" category="coverage" message="coverage increased from 0 to 2 blocks (+2) after flipping DBComm.DBComm.DO.MunicipalityDOTest.ResetAssociations at 0x0001"/>
<coverage domain="usercodeundertest" unit="block" covered="2" total="13" coveredRatio="0.15384615384615386"/>
<sourceCoverage xml="cov\e384\cov.xml" html="cov\e384\cov.html"/>
<result name="ResetAssociations(MunicipalityDO)" state="success" duration="0,09"/>
<duration start="2011-12-13 13:51:15Z" end="2011-12-13 13:51:15Z" seconds="0,09"/>
</exploration>
<exploration shortName="ToString01(MunicipalityDO)" fullName="DBComm.DBComm.DO.MunicipalityDOTest.ToString01(MunicipalityDO)" isDynamicCode="true"><method><definition assemblyName="DBComm.PexTests" name="ToString01" token="6000007"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</resultType>
</definition>
</method>
<target><methodDefinition assemblyName="DBComm" name="ToString" token="600008d"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</resultType>
</methodDefinition>
</target>
<memberUnderTest assemblyName="DBComm" name="ToString" token="600008d"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</resultType>
</memberUnderTest>
<explorable title="guessed how to create DBComm.DBComm.DO.MunicipalityDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DBComm.PexTests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\MunicipalityDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DBComm.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<typeDefinition assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DBComm.PexTests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DBComm.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<methodDefinition assemblyName="DBComm.PexTests" name="Create" static="true"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DBComm.PexTests" name="Create" static="true"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="ToString01" state="success" duration="0,01"/>
<test name="ToString01" state="success" duration="0,02"/>
<generatedTest id="ad756cdb-8a44-409c-94e9-22cfdaad07ad" index="1" run="2" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="ToString01482"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="6" dtot="17" acov="6" atot="17"/>
<rcov name="asserts" dcov="1" dtot="1" acov="1" atot="1"/>
<value name="target">...</value>
<value name="result(target)">...</value>
<value name="result">&quot;&quot;</value>
<code><![CDATA[MunicipalityDO municipalityDO;
string s;
municipalityDO =
  new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
s = this.ToString01(municipalityDO);
Assert.AreEqual<string>("", s);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void ToString01482()
{
    MunicipalityDO municipalityDO;
    string s;
    municipalityDO =
      new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
    s = this.ToString01(municipalityDO);
    Assert.AreEqual<string>("", s);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[MunicipalityDO s1 = new;
string s0 = target == s1 ? name_s2 : target.Name;
return target != (MunicipalityDO)null && methodof(target.ToString) == methodof(MunicipalityDO.ToString) && s0 == (string)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-13 13:51:15Z" category="coverage" message="coverage increased from 0 to 6 blocks (+6) after flipping DBComm.DBComm.DO.MunicipalityDOTest.ToString01 at 0x0001"/>
<test name="ToString01" state="success" duration="0,00"/>
<generatedTest id="a7cfda9f-5169-42e7-ac1f-5592d57220c7" index="2" run="3" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="ToString0148201"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="6" atot="17"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="1"/>
<value name="target">...</value>
<value name="result(target)">...</value>
<value name="result">&quot;&quot;</value>
<code><![CDATA[MunicipalityDO municipalityDO;
string s;
municipalityDO =
  new MunicipalityDO(default(uint?), (string)null, (string)null, "");
s = this.ToString01(municipalityDO);
Assert.AreEqual<string>("", s);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>("", municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void ToString0148201()
{
    MunicipalityDO municipalityDO;
    string s;
    municipalityDO =
      new MunicipalityDO(default(uint?), (string)null, (string)null, "");
    s = this.ToString01(municipalityDO);
    Assert.AreEqual<string>("", s);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>("", municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[MunicipalityDO s1 = new;
string s0 = target == s1 ? name_s2 : target.Name;
return target != (MunicipalityDO)null && s0 != (string)null && methodof(target.ToString) == methodof(MunicipalityDO.ToString);
]]></pathCondition>
</generatedTest>
<coverage domain="usercodeundertest" unit="block" covered="6" total="17" coveredRatio="0.35294117647058826"/>
<coverage domain="usercodeundertest" unit="asserts" covered="1" total="1" coveredRatio="1"/>
<sourceCoverage xml="cov\e385\cov.xml" html="cov\e385\cov.html"/>
<result name="ToString01(MunicipalityDO)" state="success" duration="0,12"/>
<duration start="2011-12-13 13:51:15Z" end="2011-12-13 13:51:15Z" seconds="0,11"/>
</exploration>
<exploration shortName="UpdateValues(MunicipalityDO, IDataObject)" fullName="DBComm.DBComm.DO.MunicipalityDOTest.UpdateValues(MunicipalityDO, IDataObject)" isDynamicCode="true"><method><definition assemblyName="DBComm.PexTests" name="UpdateValues" token="6000008"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="2"><type spec="Class"><definition assemblyName="DBComm" name="IDataObject" token="2000005" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
</definition>
</method>
<target><methodDefinition assemblyName="DBComm" name="UpdateValues" token="600008c"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="1"><type spec="Class"><definition assemblyName="DBComm" name="IDataObject" token="2000005" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
</methodDefinition>
</target>
<memberUnderTest assemblyName="DBComm" name="UpdateValues" token="600008c"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="1"><type spec="Class"><definition assemblyName="DBComm" name="IDataObject" token="2000005" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
</memberUnderTest>
<explorable title="guessed how to create DBComm.DBComm.DO.MunicipalityDO" kind="guessedclass" isExplorableTypeExported="true"><explorableType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</explorableType>
<testAssemblyName name="DBComm.PexTests"/>
<update kind="CollectionCodeUpdate" name="Accept/Edit Factory"><codeUpdate kind="AddTypeCodeUpdate" name="Add type" fileNameHint="Factories\MunicipalityDOFactory" abstract="true" sealed="true" visibility="Public"><doc><![CDATA[<summary>A factory for DBComm.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="mscorlib"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<typeDefinition assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<baseType spec="Class"><definition assemblyName="mscorlib" name="Object" token="2000002" namespace="System"/>
</baseType>
<target><assembly name="DBComm.PexTests"/>
</target>
</codeUpdate>
<codeUpdate kind="AddMethodCodeUpdate" name="Add method" visibility="Public"><attribute><ctor><definition assemblyName="Microsoft.Pex.Framework" name=".ctor" token="6000e46"><declaringType assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="Microsoft.Pex.Framework" name="PexFactoryMethodAttribute" token="200027d" namespace="Microsoft.Pex.Framework"/>
</type>
</parameter>
<parameter name="factoredType" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="Type" token="2000130" namespace="System"/>
</type>
</parameter>
</definition>
</ctor>
<ctorArgument><value kind="TypeOfExpression"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</value>
</ctorArgument>
</attribute>
<doc><![CDATA[<summary>A factory for DBComm.DBComm.DO.MunicipalityDO instances</summary>
]]></doc>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="mscorlib"/>
<reference name="System.Data.Linq"/>
<methodDefinition assemblyName="DBComm.PexTests" name="Create" static="true"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</methodDefinition>
<target><typeDefinition assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</target>
</codeUpdate>
<codeUpdate kind="SelectCodeUpdate" name="Select" selectKind="Body"><target><methodDefinition assemblyName="DBComm.PexTests" name="Create" static="true"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOFactory" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter name="id_nullu" position="0"><type spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="Nullable`1" token="200034c" namespace="System"><genericParameter value="T"/>
</definition>
<genericTypeArgument spec="ValueType"><definition assemblyName="mscorlib" valueType="true" name="UInt32" token="2000181" namespace="System"/>
</genericTypeArgument>
</type>
</parameter>
<parameter name="address_s" position="1"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="city_s1" position="2"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<parameter name="name_s2" position="3"><type spec="Class"><definition assemblyName="mscorlib" name="String" token="200004e" namespace="System"/>
</type>
</parameter>
<resultType spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</resultType>
</methodDefinition>
</target>
</codeUpdate>
</update>
</explorable>
<test name="UpdateValues" state="success" duration="0,01"/>
<test name="UpdateValues" state="success" duration="0,04"/>
<generatedTest id="407618de-5cba-458c-bb0a-10a79c12eac4" index="1" run="2" exceptionState="expected" status="expectedexception" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="UpdateValuesThrowsContractException338"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="4" dtot="42" acov="4" atot="42"/>
<rcov name="asserts" dcov="0" dtot="1" acov="0" atot="1"/>
<value name="target">...</value>
<value name="dummy">null</value>
<code><![CDATA[try
{
  MunicipalityDO municipalityDO;
  municipalityDO =
    new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
  this.UpdateValues(municipalityDO, (IDataObject)null);
  throw 
    new AssertFailedException("expected an exception of type ContractException");
}
catch(Exception ex)
{
  if (!PexContract.IsContractException(ex))
    throw ex;
}
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;System;Microsoft.Pex.Framework.Generated;Microsoft.Pex.Engine.Exceptions"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
[PexRaisedContractException(PexExceptionState.Expected)]
public void UpdateValuesThrowsContractException338()
{
    try
    {
      MunicipalityDO municipalityDO;
      municipalityDO =
        new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
      this.UpdateValues(municipalityDO, (IDataObject)null);
      throw 
        new AssertFailedException("expected an exception of type ContractException");
    }
    catch(Exception ex)
    {
      if (!PexContract.IsContractException(ex))
        throw ex;
    }
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<exceptionChain><exception typeDisplayName="ContractException" source="DBComm"><message><![CDATA[Precondition failed: dummy != null]]></message>
<type spec="Class"><definition assemblyName="DBComm" name="ContractException" token="2000021"><declaringType assemblyName="DBComm" name="__ContractsRuntime" token="2000014" namespace="System.Diagnostics.Contracts"/>
</definition>
</type>
<stackTrace><frame value="  at MunicipalityDO.UpdateValues(IDataObject) in C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\DBComm\DO\IDataObjectContracts.cs(32)" method="MunicipalityDO.UpdateValues(IDataObject)" offset="36" file="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\DBComm\DO\IDataObjectContracts.cs" line="32"><method assemblyName="DBComm" name="UpdateValues" token="600008c"><declaringType assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="1"><type spec="Class"><definition assemblyName="DBComm" name="IDataObject" token="2000005" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
</method>
<beforeSource><![CDATA[
        void IDataObject.UpdateValues(IDataObject dummy)
        {]]></beforeSource>
<source><![CDATA[            Contract.Requires(dummy != null);]]></source>
<afterSource><![CDATA[            Contract.Requires(dummy.GetType() == this.GetType());
        }
]]></afterSource>
</frame>
<frame value="  at MunicipalityDOTest.UpdateValues(MunicipalityDO, IDataObject)" method="MunicipalityDOTest.UpdateValues(MunicipalityDO, IDataObject)" offset="2"><method assemblyName="DBComm.PexTests" name="UpdateValues" token="6000008"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="2000002" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="target" position="1"><type spec="Class"><definition assemblyName="DBComm" name="MunicipalityDO" token="2000012" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<parameter name="dummy" position="2"><type spec="Class"><definition assemblyName="DBComm" name="IDataObject" token="2000005" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
</method>
</frame>
</stackTrace>
</exception>
</exceptionChain>
<pathCondition><![CDATA[return target != (MunicipalityDO)null && methodof(target.UpdateValues) == methodof(MunicipalityDO.UpdateValues) && dummy == (IDataObject)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-13 13:51:15Z" category="coverage" message="coverage increased from 0 to 4 blocks (+4) after flipping DBComm.DBComm.DO.MunicipalityDOTest.UpdateValues at 0x0002"/>
<test name="UpdateValues" state="success" duration="0,01"/>
<generatedTest id="f441c925-e9cc-4102-afb9-4f2a2b758081" index="2" run="3" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="UpdateValues71"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="33" dtot="4" acov="37" atot="46"/>
<rcov name="asserts" dcov="1" dtot="0" acov="1" atot="1"/>
<value name="target">...</value>
<value name="dummy">...</value>
<value name="result(target)">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO =
  new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void UpdateValues71()
{
    MunicipalityDO municipalityDO;
    municipalityDO =
      new MunicipalityDO(default(uint?), (string)null, (string)null, (string)null);
    this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[IDataObject s0 = dummy == (IDataObject)null || dummy is MunicipalityDO ? dummy : (IDataObject)null;
MunicipalityDO s2 = new;
string s1 = s0 == (IDataObject)s2 ? address_s : ((MunicipalityDO)s0).Address;
string s3 = s0 == (IDataObject)s2 ? city_s1 : ((MunicipalityDO)s0).City;
uint? s4 = s0 == (IDataObject)s2 ? id_nullu : ((MunicipalityDO)s0).Id;
string s5 = s0 == (IDataObject)s2 ? name_s2 : ((MunicipalityDO)s0).Name;
return target != (MunicipalityDO)null && dummy != (IDataObject)null && ((object)dummy).GetType() == ((object)target).GetType() && 
                                                                       s0 != (IDataObject)null && methodof(target.UpdateValues) == methodof(MunicipalityDO.UpdateValues) && s1 == (string)null && s3 == (string)null && s4.hasValue == false && s5 == (string)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-13 13:51:15Z" category="coverage" message="coverage increased from 4 to 37 blocks (+33) after flipping System.Diagnostics.Contracts.__ContractsRuntime.Requires at 0x0001"/>
<test name="UpdateValues" state="success" duration="0,02"/>
<generatedTest id="a09a3061-e886-4244-9db7-a7ebef728b2c" index="3" run="4" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="UpdateValues7101"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="2" dtot="0" acov="39" atot="46"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="1"/>
<value name="target">...</value>
<value name="dummy">...</value>
<value name="result(target)">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO =
  new MunicipalityDO(new uint?(1u), (string)null, (string)null, (string)null);
this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNotNull((object)(municipalityDO.Id));
Assert.AreEqual<uint>(1u, (uint)((object)(municipalityDO.Id)));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void UpdateValues7101()
{
    MunicipalityDO municipalityDO;
    municipalityDO =
      new MunicipalityDO(new uint?(1u), (string)null, (string)null, (string)null);
    this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNotNull((object)(municipalityDO.Id));
    Assert.AreEqual<uint>(1u, (uint)((object)(municipalityDO.Id)));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[IDataObject s0 = dummy == (IDataObject)null || dummy is MunicipalityDO ? dummy : (IDataObject)null;
MunicipalityDO s2 = new;
uint? s1 = s0 == (IDataObject)s2 ? id_nullu : ((MunicipalityDO)s0).Id;
string s3 = s0 == (IDataObject)s2 ? address_s : ((MunicipalityDO)s0).Address;
string s4 = s0 == (IDataObject)s2 ? city_s1 : ((MunicipalityDO)s0).City;
string s5 = s0 == (IDataObject)s2 ? name_s2 : ((MunicipalityDO)s0).Name;
return target != (MunicipalityDO)null && dummy != (IDataObject)null && ((object)dummy).GetType() == ((object)target).GetType() && 
                                                                       s0 != (IDataObject)null && s1.hasValue != false && methodof(target.UpdateValues) == methodof(MunicipalityDO.UpdateValues) && s3 == (string)null && s4 == (string)null && s5 == (string)null;
]]></pathCondition>
</generatedTest>
<log level="message" time="2011-12-13 13:51:15Z" category="coverage" message="coverage increased from 37 to 39 blocks (+2) after flipping DBComm.DBComm.DO.MunicipalityDO.UpdateValues at 0x00b7"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<generatedTest id="d971684f-eeb2-4738-a2a7-0c9123c94417" index="4" run="5" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="UpdateValues7102"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="39" atot="46"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="1"/>
<value name="target">...</value>
<value name="dummy">...</value>
<value name="result(target)">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO =
  new MunicipalityDO(default(uint?), (string)null, (string)null, "");
this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>("", municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void UpdateValues7102()
{
    MunicipalityDO municipalityDO;
    municipalityDO =
      new MunicipalityDO(default(uint?), (string)null, (string)null, "");
    this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>("", municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[IDataObject s0 = dummy == (IDataObject)null || dummy is MunicipalityDO ? dummy : (IDataObject)null;
MunicipalityDO s2 = new;
string s1 = s0 == (IDataObject)s2 ? name_s2 : ((MunicipalityDO)s0).Name;
string s3 = s0 == (IDataObject)s2 ? address_s : ((MunicipalityDO)s0).Address;
string s4 = s0 == (IDataObject)s2 ? city_s1 : ((MunicipalityDO)s0).City;
uint? s5 = s0 == (IDataObject)s2 ? id_nullu : ((MunicipalityDO)s0).Id;
return target != (MunicipalityDO)null && dummy != (IDataObject)null && ((object)dummy).GetType() == ((object)target).GetType() && 
                                                                       s0 != (IDataObject)null && s1 != (string)null && methodof(target.UpdateValues) == methodof(MunicipalityDO.UpdateValues) && s3 == (string)null && s4 == (string)null && s5.hasValue == false;
]]></pathCondition>
</generatedTest>
<test name="UpdateValues" state="success" duration="0,00"/>
<generatedTest id="7d6ae951-f07a-47dd-9160-e728266f4304" index="5" run="6" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="UpdateValues7103"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="39" atot="46"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="1"/>
<value name="target">...</value>
<value name="dummy">...</value>
<value name="result(target)">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO =
  new MunicipalityDO(default(uint?), (string)null, "", (string)null);
this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>((string)null, municipalityDO.Address);
Assert.AreEqual<string>("", municipalityDO.City);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void UpdateValues7103()
{
    MunicipalityDO municipalityDO;
    municipalityDO =
      new MunicipalityDO(default(uint?), (string)null, "", (string)null);
    this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>((string)null, municipalityDO.Address);
    Assert.AreEqual<string>("", municipalityDO.City);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathCondition><![CDATA[IDataObject s0 = dummy == (IDataObject)null || dummy is MunicipalityDO ? dummy : (IDataObject)null;
MunicipalityDO s2 = new;
string s1 = s0 == (IDataObject)s2 ? city_s1 : ((MunicipalityDO)s0).City;
string s3 = s0 == (IDataObject)s2 ? address_s : ((MunicipalityDO)s0).Address;
uint? s4 = s0 == (IDataObject)s2 ? id_nullu : ((MunicipalityDO)s0).Id;
string s5 = s0 == (IDataObject)s2 ? name_s2 : ((MunicipalityDO)s0).Name;
return target != (MunicipalityDO)null && dummy != (IDataObject)null && ((object)dummy).GetType() == ((object)target).GetType() && 
                                                                       s0 != (IDataObject)null && s1 != (string)null && methodof(target.UpdateValues) == methodof(MunicipalityDO.UpdateValues) && s3 == (string)null && s4.hasValue == false && s5 == (string)null;
]]></pathCondition>
</generatedTest>
<test name="UpdateValues" state="success" duration="0,01"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<generatedTest id="691396cd-c9a5-4e4d-9f5d-908cbd506ca0" index="6" run="8" status="normaltermination" explorationIsDynamicCode="true" generated="true" new="true" assemblyName="DBComm.PexTests" name="UpdateValues7104"><declaringType assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
<parameter this="true" name="this" position="0"><type spec="Class"><definition assemblyName="DBComm.PexTests" name="MunicipalityDOTest" token="ffffffff" namespace="DBComm.DBComm.DO"/>
</type>
</parameter>
<rcov name="Block" dcov="0" dtot="0" acov="39" atot="46"/>
<rcov name="asserts" dcov="0" dtot="0" acov="1" atot="1"/>
<value name="target">...</value>
<value name="dummy">...</value>
<value name="result(target)">...</value>
<code><![CDATA[MunicipalityDO municipalityDO;
municipalityDO =
  new MunicipalityDO(default(uint?), "", (string)null, (string)null);
this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
Assert.IsNotNull((object)municipalityDO);
Assert.IsNotNull(municipalityDO.PollingStations);
Assert.IsNull((object)(municipalityDO.Id));
Assert.AreEqual<string>("", municipalityDO.Address);
Assert.AreEqual<string>((string)null, municipalityDO.City);
Assert.AreEqual<string>((string)null, municipalityDO.Name);
]]></code>
<methodCode imports="Microsoft.VisualStudio.TestTools.UnitTesting;Microsoft.Pex.Framework.Generated"><![CDATA[[TestMethod]
[PexGeneratedBy(typeof(MunicipalityDOTest))]
public void UpdateValues7104()
{
    MunicipalityDO municipalityDO;
    municipalityDO =
      new MunicipalityDO(default(uint?), "", (string)null, (string)null);
    this.UpdateValues(municipalityDO, (IDataObject)municipalityDO);
    Assert.IsNotNull((object)municipalityDO);
    Assert.IsNotNull(municipalityDO.PollingStations);
    Assert.IsNull((object)(municipalityDO.Id));
    Assert.AreEqual<string>("", municipalityDO.Address);
    Assert.AreEqual<string>((string)null, municipalityDO.City);
    Assert.AreEqual<string>((string)null, municipalityDO.Name);
}
]]></methodCode>
<reference name="Microsoft.VisualStudio.QualityTools.UnitTestFramework"/>
<reference name="mscorlib" location="C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll"/>
<reference name="Microsoft.Pex.Framework"/>
<reference name="DBComm.PexTests"/>
<reference name="DBComm" location="C:\Users\jmei\Dropbox\Programmering\Visual Studio\Projects\BDSA\DigitalVoterList\DBComm\bin\Debug\DBComm.exe"/>
<reference name="System.Data.Linq"/>
<pathAssumption><![CDATA[return dummy.GetType() != typeof(SIDataObject);
]]></pathAssumption>
<pathCondition><![CDATA[IDataObject s0 = dummy == (IDataObject)null || dummy is MunicipalityDO ? dummy : (IDataObject)null;
MunicipalityDO s2 = new;
string s1 = s0 == (IDataObject)s2 ? address_s : ((MunicipalityDO)s0).Address;
string s3 = s0 == (IDataObject)s2 ? city_s1 : ((MunicipalityDO)s0).City;
uint? s4 = s0 == (IDataObject)s2 ? id_nullu : ((MunicipalityDO)s0).Id;
string s5 = s0 == (IDataObject)s2 ? name_s2 : ((MunicipalityDO)s0).Name;
return target != (MunicipalityDO)null && dummy != (IDataObject)null && ((object)dummy).GetType() == ((object)target).GetType() && 
                                                                       s0 != (IDataObject)null && s1 != (string)null && methodof(target.UpdateValues) == methodof(MunicipalityDO.UpdateValues) && s3 == (string)null && s4.hasValue == false && s5 == (string)null;
]]></pathCondition>
</generatedTest>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,01"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,01"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<test name="UpdateValues" state="success" duration="0,00"/>
<coverage domain="usercodeundertest" unit="block" covered="39" total="46" coveredRatio="0.84782608695652173"/>
<coverage domain="usercodeundertest" unit="asserts" covered="1" total="1" coveredRatio="1"/>
<sourceCoverage xml="cov\e389\cov.xml" html="cov\e389\cov.html"/>
<result name="UpdateValues(MunicipalityDO, IDataObject)" state="success" duration="0,98"/>
<duration start="2011-12-13 13:51:15Z" end="2011-12-13 13:51:16Z" seconds="0,98"/>
</exploration>
<coverage domain="usercodeundertest" unit="block" covered="82" total="113" coveredRatio="0.72566371681415931"/>
<coverage domain="usercodeundertest" unit="asserts" covered="2" total="2" coveredRatio="1"/>
<sourceCoverage xml="cov\t973\cov.xml" html="cov\t973\cov.html"/>
<duration start="2011-12-13 13:51:14Z" end="2011-12-13 13:51:16Z" seconds="2.3868042"/>
</fixture>
<coverage domain="usercodeundertest" unit="block" covered="82" total="113" coveredRatio="0.72566371681415931"/>
<coverage domain="usercodeundertest" unit="asserts" covered="2" total="2" coveredRatio="1"/>
<sourceCoverage xml="cov\a56409485\cov.xml" html="cov\a56409485\cov.html"/>
<duration start="2011-12-13 13:51:14Z" end="2011-12-13 13:51:16Z" seconds="2.4492043"/>
<frameTreeRef exceptionCount="1"/>
</assembly>
<duration start="2011-12-13 13:51:13Z" end="2011-12-13 13:51:16Z" seconds="3.3072058"/>
<background/>
</pex>
